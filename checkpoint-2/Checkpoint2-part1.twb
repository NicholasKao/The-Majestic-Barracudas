<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Custom SQL Query+ (postgres)' inline='true' name='federated.0ndqeix02xiluh10yolbj1htt724' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='codd04.research.northwestern.edu' name='postgres.1rquaw11sljsw2170mnlm0asdt6n'>
            <connection authentication='username-password' class='postgres' dbname='postgres' odbc-native-protocol='' one-time-sql='' port='5433' server='codd04.research.northwestern.edu' username='cpdbstudent' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, sum(allegation_count) as allegation_count
FROM
(SELECT date_part('year', incident_date) as Year, dpu.id as unit_id,
dpu.description,
COUNT(da.crid) as allegation_count
FROM data_allegation da
LEFT JOIN data_officerallegation doa ON da.crid = doa.allegation_id
LEFT JOIN data_officerhistory doh on doa.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
AND da.is_officer_complaint = false
WHERE doh.effective_date << incident_date
  AND (doh.end_date IS NULL or doh.end_date >> incident_date)
  AND dpu.description like '%District 0%'
GROUP BY date_part('year', incident_date), doa.officer_id, dpu.id) q1
  WHERE q1.year >>= 2010
  AND q1.year <<= 2015
GROUP BY year, q1.unit_id
ORDER BY q1.unit_id, year]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[active]' value='[data_policeunit].[active]' />
          <map key='[allegation_count]' value='[Custom SQL Query].[allegation_count]' />
          <map key='[asian_pacific_count]' value='[Custom SQL Query3].[asian_pacific_count]' />
          <map key='[black_count]' value='[Custom SQL Query3].[black_count]' />
          <map key='[created_at]' value='[data_policeunit].[created_at]' />
          <map key='[description (Custom SQL Query2)]' value='[Custom SQL Query2].[description]' />
          <map key='[description (Custom SQL Query3)]' value='[Custom SQL Query3].[description]' />
          <map key='[description (Custom SQL Query4)]' value='[Custom SQL Query4].[description]' />
          <map key='[description]' value='[data_policeunit].[description]' />
          <map key='[hispanic_count]' value='[Custom SQL Query3].[hispanic_count]' />
          <map key='[id]' value='[data_policeunit].[id]' />
          <map key='[native_count]' value='[Custom SQL Query3].[native_count]' />
          <map key='[officer_count (Custom SQL Query2)]' value='[Custom SQL Query2].[officer_count]' />
          <map key='[officer_count (Custom SQL Query3)]' value='[Custom SQL Query3].[officer_count]' />
          <map key='[officer_count]' value='[Custom SQL Query1].[officer_count]' />
          <map key='[race_entropy]' value='[Custom SQL Query3].[race_entropy]' />
          <map key='[serivce_years]' value='[Custom SQL Query4].[serivce_years]' />
          <map key='[tags]' value='[data_policeunit].[tags]' />
          <map key='[unit_females]' value='[Custom SQL Query2].[unit_females]' />
          <map key='[unit_gender_entropy]' value='[Custom SQL Query2].[unit_gender_entropy]' />
          <map key='[unit_id (Custom SQL Query1)]' value='[Custom SQL Query1].[unit_id]' />
          <map key='[unit_id (Custom SQL Query2)]' value='[Custom SQL Query2].[unit_id]' />
          <map key='[unit_id (Custom SQL Query3)]' value='[Custom SQL Query3].[unit_id]' />
          <map key='[unit_id (Custom SQL Query4)]' value='[Custom SQL Query4].[unit_id]' />
          <map key='[unit_id]' value='[Custom SQL Query].[unit_id]' />
          <map key='[unit_males]' value='[Custom SQL Query2].[unit_males]' />
          <map key='[unit_name]' value='[data_policeunit].[unit_name]' />
          <map key='[updated_at]' value='[data_policeunit].[updated_at]' />
          <map key='[white_count]' value='[Custom SQL Query3].[white_count]' />
          <map key='[year (Custom SQL Query1)]' value='[Custom SQL Query1].[year]' />
          <map key='[year (Custom SQL Query2)]' value='[Custom SQL Query2].[year]' />
          <map key='[year (Custom SQL Query3)]' value='[Custom SQL Query3].[year]' />
          <map key='[year (Custom SQL Query4)]' value='[Custom SQL Query4].[year]' />
          <map key='[year]' value='[Custom SQL Query].[year]' />
          <map key='[years_in_unit]' value='[Custom SQL Query4].[years_in_unit]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allegation_count</remote-name>
            <remote-type>131</remote-type>
            <local-name>[allegation_count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>allegation_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_males]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_males</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_females]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_females</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_gender_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_gender_entropy]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_gender_entropy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serivce_years</remote-name>
            <remote-type>131</remote-type>
            <local-name>[serivce_years]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>serivce_years</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years_in_unit</remote-name>
            <remote-type>131</remote-type>
            <local-name>[years_in_unit]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>years_in_unit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>white_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[white_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>white_count</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>black_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[black_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>black_count</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>asian_pacific_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[asian_pacific_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>asian_pacific_count</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>native_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[native_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>native_count</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hispanic_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hispanic_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>hispanic_count</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[race_entropy]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>race_entropy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit_name]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>unit_name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>11</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>38</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>39</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[updated_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>updated_at</remote-alias>
            <ordinal>40</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='gender_entropy' datatype='table' name='[__tableau_internal_object_id__].[_4539CF261AD64A1BB33BFD18C5A6FBDC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='allegations_per_unit_per_year' datatype='table' name='[__tableau_internal_object_id__].[_963F61354B5244539A906926BDC30BA3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='approx_unit_sizes_by_year' datatype='table' name='[__tableau_internal_object_id__].[_A48CBA8714214813A68592CFEE880792]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_metrics' datatype='table' name='[__tableau_internal_object_id__].[_C13C793BA40A4260993EEA151D4C4E8B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='race_entropy_table' datatype='table' name='[__tableau_internal_object_id__].[_FA2304309C354BC0B3BDC3A5AA18B99C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data_policeunit' datatype='table' name='[__tableau_internal_object_id__].[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]' role='measure' type='quantitative' />
      <column caption='Active' datatype='boolean' name='[active]' role='dimension' type='nominal' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
      <column caption='Unit Name' datatype='string' name='[unit_name]' role='dimension' type='nominal' />
      <column caption='Updated At' datatype='datetime' name='[updated_at]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[year]' role='measure' type='quantitative' />
      <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:year:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2014</bucket>
            </map>
            <map to='asterisk'>
              <bucket>4029</bucket>
            </map>
            <map to='circle'>
              <bucket>2010</bucket>
            </map>
            <map to='circle'>
              <bucket>4025</bucket>
            </map>
            <map to='diamond'>
              <bucket>2015</bucket>
            </map>
            <map to='diamond'>
              <bucket>4030</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>4022</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>6040</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>4023</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8052</bucket>
            </map>
            <map to='plus'>
              <bucket>2012</bucket>
            </map>
            <map to='plus'>
              <bucket>4027</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>4024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>100568</bucket>
            </map>
            <map to='square'>
              <bucket>2011</bucket>
            </map>
            <map to='square'>
              <bucket>4026</bucket>
            </map>
            <map to='times'>
              <bucket>2013</bucket>
            </map>
            <map to='times'>
              <bucket>4028</bucket>
            </map>
            <map to='triangle'>
              <bucket>4021</bucket>
            </map>
            <map to='triangle'>
              <bucket>6039</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bureau Of Internal Affairs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;District 009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forensic Services Unit - Et North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gang Section - Area 4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Special Functions Division&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Airport Law Enforcement Section - North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Det Div Admin.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Office Of The First Deputy Superintendent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arson Section&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Detective Area - North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Public Transportation Section&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bureau Of Support Services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;District 013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gang Enforcement - Area North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inspection Division&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Targeted Response Unit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bureau Of Organized Crime&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District 010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forensic Services Unit - Et South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gang Section - Area 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Special Functions Support Unit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asset Forfeiture Investigation Section&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detective Area - South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;District 006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gang Enforcement - Area South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Recruit Training Section&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crime Control Strategies Section&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;District 019&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forensic Services Division&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Narcotics Division&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Violent Crimes Dda 1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Airport Law Enforcement Section - South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detached Services - Goverment Security&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Office Of The Superintendent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Communication Operations Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;District 017&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Executive Officers Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marine Operations Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Transit Security Unit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bomb Squad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detective Section - Area 4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District 007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gang Enforcement Division&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Research And Development Division&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canine Unit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District 014&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District Reinstatement Unit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Intelligence Section&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Technology And Records Group&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Detention Unit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;District 015&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Education And Training Division&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Juvenile Intervention Support Center (Jisc)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traffic Enforcement&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Court Section&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;District 018&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Field Services Section&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mounted Unit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vice &amp; Asset Forfeiture Division&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deployment Operations Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;District 020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forensic Services Evidence Technician Section&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oemc - Detail Section&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Youth Investigation Division&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bureau Of Patrol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;District 011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Freedom Of Information Section&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Human Resources Division&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Special Investigations Unit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bureau Of  Detectives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detective Section - Area 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District 008&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gang Investigation Division&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Special Activities Section&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alternate Response Section&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Detached Services - Miscellaneous Detail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Police Documents Section&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Investigations Division&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;District 016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Evidence And Recovered Property Section&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Major Accident Investigation Unit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Traffic Section&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bureau Of Professional Standards&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District 012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gang Enforcement - Area Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Information Services Division&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Special Weapons And Tactics (Swat) Unit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Area 1 Pat Narc Prog&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detective Area - Central&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prop Crimes Dd Area1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='gender_entropy' id='_4539CF261AD64A1BB33BFD18C5A6FBDC'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
            </properties>
          </object>
          <object caption='allegations_per_unit_per_year' id='_963F61354B5244539A906926BDC30BA3'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, sum(allegation_count) as allegation_count
FROM
(SELECT date_part('year', incident_date) as Year, dpu.id as unit_id,
dpu.description,
COUNT(da.crid) as allegation_count
FROM data_allegation da
LEFT JOIN data_officerallegation doa ON da.crid = doa.allegation_id
LEFT JOIN data_officerhistory doh on doa.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
AND da.is_officer_complaint = false
WHERE doh.effective_date << incident_date
  AND (doh.end_date IS NULL or doh.end_date >> incident_date)
  AND dpu.description like '%District 0%'
GROUP BY date_part('year', incident_date), doa.officer_id, dpu.id) q1
  WHERE q1.year >>= 2010
  AND q1.year <<= 2015
GROUP BY year, q1.unit_id
ORDER BY q1.unit_id, year]]></relation>
            </properties>
          </object>
          <object caption='approx_unit_sizes_by_year' id='_A48CBA8714214813A68592CFEE880792'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
            </properties>
          </object>
          <object caption='time_metrics' id='_C13C793BA40A4260993EEA151D4C4E8B'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
            </properties>
          </object>
          <object caption='race_entropy_table' id='_FA2304309C354BC0B3BDC3A5AA18B99C'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
            </properties>
          </object>
          <object caption='data_policeunit' id='data_policeunit_9EC03FD39C2F4896887253843F9E4A83'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query2)]' />
              </expression>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query2)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_4539CF261AD64A1BB33BFD18C5A6FBDC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query1)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query1)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_A48CBA8714214813A68592CFEE880792' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query4)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query4)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_C13C793BA40A4260993EEA151D4C4E8B' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query3)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query3)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_FA2304309C354BC0B3BDC3A5AA18B99C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[unit_id]' />
              <expression op='[id]' />
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='data_policeunit_9EC03FD39C2F4896887253843F9E4A83' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236024680450]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236024680450]' derivation='None' name='[none:Calculation_1294081236024680450:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[officer_count]' derivation='None' name='[none:officer_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]'>
            <groupfilter expression='CONTAINS(LOWER([description]), LOWER(&apos;District 0&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='District 0' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024680450:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:officer_count:qk]</cols>
      </table>
      <simple-id uuid='{E7E43837-57B3-449B-A70C-B64773BF18A5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegation Per Officer By Unit Gender Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236032729092]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236032729092]' derivation='None' name='[none:Calculation_1294081236032729092:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit_gender_entropy]' derivation='None' name='[none:unit_gender_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[unit_gender_entropy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236032729092:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:unit_gender_entropy:qk]</cols>
      </table>
      <simple-id uuid='{4506DCEA-AB86-4D79-97A7-5B4424FCBCAC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Unit Race Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236041748485]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236041748485]' derivation='None' name='[none:Calculation_1294081236041748485:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[race_entropy]' derivation='None' name='[none:race_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[race_entropy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236041748485:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:race_entropy:qk]</cols>
      </table>
      <simple-id uuid='{A268F188-D5B6-4779-B1C7-4BF1F6AC0180}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Average Service Years of Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236049309702]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236049309702]' derivation='None' name='[none:Calculation_1294081236049309702:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[serivce_years]' derivation='None' name='[none:serivce_years:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[serivce_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236049309702:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:serivce_years:qk]</cols>
      </table>
      <simple-id uuid='{C5C99F19-767A-477D-965A-5B1883B685AA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Average Years in Specified Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236056621065]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236056621065]' derivation='None' name='[none:Calculation_1294081236056621065:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[years_in_unit]' derivation='None' name='[none:years_in_unit:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[years_in_unit]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236056621065:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:years_in_unit:qk]</cols>
      </table>
      <simple-id uuid='{B708DB93-59CA-4E8F-A4FC-08C3A057C7CA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='UnitCompositionAndAllegations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='32250' id='3' name='Sheet 1' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33875' id='9' name='Sheet 2' w='49200' x='800' y='65125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='15' name='Sheet 5' w='49200' x='50000' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33875' id='16' name='Sheet 3' w='49200' x='50000' y='65125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='17' name='Sheet 4' w='49200' x='800' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='146' h='65750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12200' x='92500' y='125'>
          <zone h='65750' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type-v2='color' w='12200' x='92500' y='125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='250' h='32250' id='3' is-fixed='true' name='Sheet 1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='65750' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type-v2='color' w='12200' x='92500' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='17' is-fixed='true' name='Sheet 4' w='49200' x='800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='15' is-fixed='true' name='Sheet 5' w='49200' x='50000' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33875' id='9' is-fixed='true' name='Sheet 2' w='49200' x='800' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33875' id='16' is-fixed='true' name='Sheet 3' w='49200' x='50000' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E7A5D069-DB21-4D68-93C3-EA73B292A3D2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='UnitCompositionAndAllegations'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='15' />
      <simple-id uuid='{A969535A-030C-4D5E-8F21-2B55B81DEB4B}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236023721984:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024651777:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024680450:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:active:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAF5ECE4-0F0F-4D28-B2B7-689A9A3091CC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5EA4BA0-A9BB-489B-91E3-84C32936D20C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236041748485:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D153A33-B296-4160-892F-B985DA795A5A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236049309702:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D0B3E6E-1FBE-4631-8F4F-ABBC81CAD756}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4C2789E-B681-42C4-9C7F-561D3D244DB1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOzdd3xc1Zn4/8+5d7pGGvViybYs2XLHHWOwLYrBNNOTQAiElE3b3SSbbMom
      2f1uQgpLCiH9twlhCb03A8YYGzAu4AoukmXLsmSrWL1Ovfee3x+DBcJdM2qj887LL6IZafQc
      zZ3z3NOFlFKiKIqijDraUAegKIqiDA2VABRFUUYplQAURVFGKZUAFEVRRqkRmQD6M25tmma/
      fm44M01zqEOIu0Qrk5QSy7KGOoy4SsQyWZY1Kss0IhNAfyqJcDg8AJEMrVAoNNQhxF2ilcmy
      LCKRyFCHEVemaWIYxlCHEVemaSbczYdhGKctk22QYomJlLLP3fuZFOzjLMtKuCRgWVZCVpiJ
      VKZjd8uJVCbLso77TI50x+6UE6kVcCZlGhEJwDTNPoXQNA1NO7vGi2ma6Loe79CGlGEYqkzD
      3LHKMpHKJITAsqyEKtMxo61Mg54AGhsb2bBhA9nZ2Zx33nl9gjMMg61bt1JbW0thYSFz585F
      CIHN1jdMwzCOe+x0IpEIuq4jhIhLOYaDcDh81n+H4S7RynRs7CmRynSs+yeRynSsNZNIZbIs
      64T150cN6hhAMBjkmWeeYcmSJYRCITZu3Njn+Y0bNxIIBFi+fDm1tbW89957gxmeoijKqDKo
      CaC+vp7i4mIyMzNZvHgxlZWVfZ63LIu0tDRcLhdpaWkJ1ceoKIoy3AxqAujs7CQ9PR0Ah8PR
      2z96zNy5c3nzzTe57777eO+995g+ffpghqcoijKqDGqHl8vloqmpCfhwZPqjffJvv/02V155
      JRMnTmTXrl1s3LiRCy+8cDBDVBRFGTUGtQWQl5dHRUUFlmVRVVVFZmYmlmXR2toKQFdXFx6P
      ByEESUlJdHR0DGZ4iqIoo8qgtgCSk5OZMWMGDzzwALquc91112EYBq+++iq33HILy5Yt4+WX
      X0bXdaSUXHvttYMZnqIoyqgiBvs8ACll71zvE83lP/a8zWY76ZTN/kwDDQQCuFyuhJoG6vf7
      8Xg8Qx1GXCVamY6tmnU6nUMdStwYhoFlWTgcjqEOJW6Orda22+1DHEn8hMNhhBCnLNOgT3o9
      XUCne15RFEWJjxG5F5CiKIoSO5UAFEVRRqnEWfesKINC0hXpZGfzFur9Ndg0B5NSpjI1bRY2
      TX2clJFFtQAU5Sw0Bxt57MB97G3fiVN3Y0qTdfWv8FLNk0SsxNptVkl86pZFUc6QYRm8duRF
      vPYUrhl/M0l2L1JK6vyHeabqH2xv3sy5WUsSaqaZkthUC0BRzlBrqIl6/2EW5VxIkt0LRGet
      jfGMZWrqLMrbd2HKxDooRUlsKgEoyhnyGz0AJNt9fR4XQpDsSCVkBjBUAlBGEJUAFOUMpTrS
      0YROvf9In00MpZTU+2tIcaTh0BJncZSS+FQCUJQzlOJIZWrqTDY0rKG6u5KA4acn0sWWprc5
      1HWAeZmL0ETinSilJC41CKwoZ0gTGheOuYJXDj/Ds4cexqN7MKSJYUVYnHspE1OmDHWIinJW
      VAJQlLPg1F1cO/5mDvdU0+A/gl1zUJg8kTRnxlCHpihnTSUARTlLQmiM805gnHfCUIeiKDFR
      YwCKoiijlEoAiqIoo5RKAIqiKKOUSgCKoiijlEoAiqIoo5RKAIqiKKOUSgCKoiijlEoAiqIo
      o5RKAIqiKKOUSgCKoiijlEoAiqIoo5RKAIqiKKOUSgCKoiijlEoAiqIoo5RKAIqiKKOUSgCK
      oiijlEoAiqIoo5RKAIqiKKOUSgCKoiij1KCfCdzR0cHOnTvJzMxk6tSpaNqHOaiqqoq2trbe
      r3NycsjPzx/sEBVFUUaFQW0BhMNhnnjiCfLy8jhw4ADbt2/v87zdbsfhcOBwONi3bx+HDh0a
      zPAURVFGlUFtATQ0NJCfn09JSQljx47lySefZP78+b3PFxQUUFBQQCQSYePGjSxYsOCEryOl
      REp5Vr+7Pz8zEqgyDW/HypJoZUrEz1MilglOfe0NagJoa2sjOzsbALfbjWEYSCkRQvT5vvLy
      coqLi3E4HAAYhoFhGL3PSyn7fH0mLMsiFArFWILhxbIsgsHgUIcRV4lWpmOVimVZQx1K3CRi
      mY6VxTTNIY4kfizLQghxyrpyUBOA0+mkp6cHOHlWMgyDd999l1tuuaX3MV3X0XW992vTNLHZ
      zi70QCCAy+U6LtmMZH6/H7fbPdRhxFWilck0TQzDwOl0DnUocWMYBpZl9d6gJYJIJAJEu6ET
      RTgcRghxyjIN6hhATk4OlZWVSCmpra3F5/MB9CYFgIqKCsaOHYvH4+l9TAjR55+iKIoSu0FN
      AD6fj7y8PB566CFWrVrFkiVLCIfDPPnkk73fs3fvXhYuXDiYYSmKooxKQg7yqIeUkmAwiMPh
      6NOtczYMw1BdQES7Sz7aUkoEiVYm1QU0MozWLqBBXwcghEioPl5FUZSRSq0EVhRFGaVUAlAU
      RRmlVAJQFEUZpVQCUBRFGaVUAlAURRmlVAJQFEUZpVQCUBRFGaVUAlAURRmlVAJQFEUZpVQC
      UBRFGaVUAlAURRmlVAJQFEUZpVQCUBRFGaVUAlAURRmlVAJQFEUZpVQCUBRFGaVUAlAURRml
      VAJQFEUZpVQCUBRFGaVUAlAURRmlVAJQFCXhSCkJmUG6I12Y0hzqcIYt21AHoCiKEk9+o4fN
      R9+ksrOciBUmxZHKgqzFTPJNQxPqnvejVAJQFCVhhMwgzx96lI5wGzPS5+K1J3O4u4pVh5+h
      x+hmTsZChBBDHeawoRKAoigJY2fLu7SGmrm5+AtkuLIAmJWxgE1H32Dj0bUUp0zG50gb4iiH
      D9UeUhQlYVR2ljPeW0S6M7P3MYFgetpspJTU9lQPYXTDj0oAijIIwmaInki3GpAcYJY00TXb
      cd08mtDQhKb+/h+juoAUZQAFTT+bjr7BIf+B6ICkPY1zsxdTnDJFDUgOgPykQio7y/FHuvHY
      vUB0RlBN10FMaZDjzh/iCIcXdQUqygAJmyFeqHmc/d1lTPbNYGF2KV57Mi/XPMX7rVuRUg51
      iAlnXuYiLGnyQvVjHOgsp8Ffy9bmDayrX8W0tNlkuXKGOsRhRbUAFGUASCnZ0fIOLcEmPlH4
      WXK8YwCYk7mQjQ1r2dDwOkXJJaQ4Uoc40sSS4kjlhgm3saZ2Jc8fegQAu+ZgTsZCFuVcqGYA
      fYxKAIoyQCo7yxmXNIFUe0bvY9EByTlsb95MbU+NSgADINOVwyeL7qAj3E7A8JPmzMClu1Xl
      fwIqASjKADEtE5vNftzjmtARQmBKYwiiGh00oZPmzCDNmXH6bx7F1BiAogyQ/KRx1PqrCZqB
      3seklBzuOYglTXLcY4YwOkVRCUBRBoQQgnlZ52NisKr+GQ52VtAYqGdb8ybW1b3CtNTZZKoB
      SWWICTkCpyIYhoHNdna9V4FAAJfLlVD9gH6/H4/HM9RhxFWilak50Mi+tt1U+w8QNANkOnOY
      nDqd4pQp2LTju4dGAsMwsCwLh8Mx1KHETSQSAcBuH5nvyYmEw2GEEKcskxoDUJQBlObIYH7G
      BSzKK8WSEv2D/n9FGQ5UAlCUQaAJHS2O9b4lJbXt7dS0teJ1OpmYmUWS0xm/X6CMCoOaAKSU
      VFdXs2nTJtLT07nooov6NCOllFRWVrJ161Z0XefSSy8lNVVNk1OUj/KHw9y3eSNr9+9DSrCk
      RW5KCl+9YClzCsYOdXjKCDKog8DBYJBVq1axYsUKfD4f69ev7/N8U1MTGzduZMWKFSxfvjyh
      +hgVJR6klPx10wbWHzzAPy8u5U+fuJlfXnsDhekZ/Gz1KqpbW4c6RGUEGdQWQG1tLSUlJXi9
      XubPn8+DDz7Y5/mdO3eyZMkS/H4/Xq8Xt9t9wtexLAvDOLs51JZlYZqJtRGUlPKs/w7DXaKV
      ybKsfl2vJ3OotYV1+yv41yVLKS2eCEB2UhLfWHIh333xOR7fvpV/u/BiBnKUwTTNhHyfpJQJ
      NT5jWRZCiFO+T4OaAHp6evD5fNFfbLMhpezzR29vb2fdunXk5ORw+PBhLr30UoqLizEMIy4X
      m2VZMb/GcKPKNLwdq1jiVaaqlhZ0TTA5K7vPa9o1jWm5ubxfV0vEMLBpA9e4P/a5TbT36aP/
      TQQfr19PZFATgMfjoa6uDojeRQgh+gTn8XhYunQpubm5dHZ2snLlSoqLi7HZbH2mffZnGqhp
      mtjt9oTK8IZhJFw3WaKVyTTNuJYpxe3GtCSG5LjxM38kgsfhxOlwoA9gAlDTQEeGM5kGOqhj
      AHl5eezfv59QKERZWRm5ublYlkVtbS0AkyZN4p133iESidDU1NTbWlAUJWpyTi4+t4sXdr+P
      YUW7NKWUHGxpZmtNNedPKEJLoJscZWANagsgKSmJRYsW8dhjj5GUlMSVV16JYRhs3bqV/Px8
      Jk2aRGNjI4899hgul4urr756MMNTlGEv1e3mnxYt5ldr11DT3sbMvDG0BwJsrKqkMD2DFTNm
      JlQrVxlYg74S+KO/7kQX6umeB7US+JhEWzULiVemY11AzjjO0ZdSsq/xKI/v2EZNWyseu4Pz
      JxRx/TmzcQ1CF4bqAhoZzqQLSG0FMYIlWmUJiVemgUgAx1hSEjYMdE3DpmmDdm2rBDAyqK0g
      FCWBaUIMyh2/krjUbqCKoiijlEoAiqIoo9RZdwFFIhEeeughWk+x5Nxut/PZz35WTeNUFEUZ
      xs46ARiGQUtLC7fccstJv2flypV0d3erBKAoijKMnXUC0HWdadOmkZ+f37uaV/tg1aFhGOi6
      ztSpU3G5XHEPVlEURYmfsx4DcDgcXHnllQCsXbuWHTt29D734IMPUl9fz9KlS8nIUIcxK4qi
      DGf9mgYqpaSiooKdO3eSmppKJBLBsizeeustLr/88njHqCiKogyAfq8D2LdvH1VVVbjdbnp6
      etA0jdtvv53c3Nx4xqcoiqIMkH4lACEE11xzDXPmzMHpdJKdnR3vuBRFUZQBFtNK4K6uLu66
      664++/fcddddpKSkxByYoiiKMrBiSgBvvfUWl112GYsXL+59zOv1xhyUoiiKMvBiSgDz58/n
      wIEDasaPoijKCBRTAujo6OD5559n1apVvY/de++9agGYoijKCBBTAigtLeX888/v85haAKYo
      ijIyxJQAtm3bxosvvtj7tWEY/OhHP1LjAIqiKCNATAlgypQpvf3/lmXx5z//OaEOVFAUZfSR
      UtLRuIumw28jpUVm/nmk5c1FiMTbPDmmBODz+Xr7+6WU+Hw+ampqmDRpUlyCUxRFGUymEaJs
      0/9wuOxpXEk5IASVO/9GXtFlzFj639jsiXNaHcSYAN58800effRRIJoAgsEgWVlZcQlMURRl
      sB3a9Q/qK19l9rJfkjV2MSBord/Crjf+iwPb/syU87491CHGVUwJYOHChcyYMYNQKISmaaSk
      pOB2u+MVm6IoyqAxIwFq9j7J2Ck3kDvh0t4zlrPGLqFw5mc4+N7fmTj3K9gcSUMcafzEfCbw
      gw8+yM6dO7HZbNx0000sX748HnEpiqIMqlCghUi4E1/W9N7KH6Jb3/iypmFGAgR6Gkh2FA9h
      lPEVUwJ47rnnSElJ4a9//Ss9PT3813/9FzNnziQ/Pz9e8SmKogwKu8uHrrvwdx4+7jl/5xGE
      puN0J9ai15iGtVtbW5k8eTJ2ux2fz0dOTg6dnZ3xik1RFGXQ2B1e8iZeTvXuR2lv3N37eFfr
      fg6+dz+5RZdhdybWIteYWgDXXHMNP/vZz1i9ejV+v5+UlBQ1A0hRlBFKMHHuV+lpr+bdlV8g
      JXMKCI3O5nJSMkqYsvBbfbqGEoGQH93K8ywZhkFHRwf19fW920KnpKQM+B/JMAxstrPLXYFA
      AJfLlVBvoN/vx+NJrGlpiVYm0zQxDAOn0znUocSNYRhYloXD4RjqUOImEokAYLfbMSJ+Gg6u
      pqlmPRJJZv555E28ErtjZC1wDYfDCCFOuTYrphbAqlWrSE5OprS0FCkld911F1/+8pdJT0+P
      5WUVRVGGjM3uoWDydRRMvm6oQxlwMY0B1NXV9bkTD4fDagxAURRlhIipBXD55Zdz5513snPn
      Ttrb24lEIowdOzZesSmKoigDKKYxAIDm5mZ27tyJ1+tl7ty5BINBvF4vmjZw+2aoMYCoROsv
      h8QrkxoDGBk+OgaQKAZ8DAAgMzOTZcuW9X79yCOPcNNNN6kdQRUlBlYggH/zZkLl+xB2O+55
      c3HNPAdh04c6NCWBxJwAPs4wDGJsVCjKqGZ2dNB0968I19Rgz89HRsJ0r11H0oWlpH/uDkQC
      3aUqQyvuCUBRlP6TlkXr3+7D8vvJu+vn0QQgJcGd79F8z2+xj8kj5eqrhzpMJUEk3gbXijKC
      mS0tBLZtx/eJG7GPGQNE96Jxz55FUulSute9iRUOD3GUSqKIKQFEIpHewZNj8vLy0HXVT6ko
      /WG0tIBlYR+TDx+dsCAE9vwxWN3dyEBg6AIchqSUBLobOHpoLUcPrSXQ3aC6oc9QTF1Aa9as
      oaWlhVtvvbV3ds1VV10Vl8AUZTSyZWaCrhOpqcExftyHSUBKwjWH0VNS0NSW672kZXJo98NU
      7vwbZiSaGHW7m+LZX6Rwxq0ITd2MnkpMLYBFixZx4MABysvLMU0T0zRPm3kNw6Cqqoq2trbj
      vteyLFpbW2lubqa5uZmwauoqo4yeno5nwQI6nnqacE0N0rKQpol/y1b8b2/Ae/FFiASafhmr
      IxUvULH1D4yfdjMX3PgEF9z4BOOn3UzF1j9wpOL5oQ5v2ItpHcDatWt54IEHCIfDvfOc7733
      3t5jIj/ONE0eeeQR8vLyqKmpYfHixZSUlPQ+39zczOOPP86ECRMAmDt3Lrm5uce9jloHEJVo
      c+Yh8crUn3UAZlc3zb/+DaGKCmy5uchIGLOpGe/ly0n7zK2Is7z2TyrQCq0HwAhB8hhImwBn
      cO7tcFkHYJkR3np8BZljFzN98Q97P9tSSvZu+BmNNesp/dSLaPrp41TrAPqhtLSUxYsXEwwG
      sdvtSClPeSJYY2MjXq+XZcuW0dHRwcqVK/skgPb2dmbMmEFpaWksYSkJSEpJZ7ADS1r43Klo
      CXhA9zF6spfsH3wf/9ZtH6wDsOGeNw/nlMmIeCywlBJq34WDr4HQQbdDuAfSimDqDTBCTrwK
      dNcTCrSQWbDouANcMvIXcWTf8wS6G0jyjRvCKIe3mBJAZ2cnv//976msrOR73/sezz77LP/+
      7/9+0rudlpaW3sNiUlJSCIVCSCl737zOzk4OHDhAR0cH+fn5zJkzB03TeruXjjEM46y7hyzL
      IpBgg2eWZeH3+4c6jLg6UZkOt9fw7J7HqWqtRCLJTyngmmk3MTlr6hBFeeaklEgp+1y/Z0rM
      noVr9iwALCAQDMYlJr39IM7KVUTGLCKSNQs0G5q/EefBlzDLXyBcvOKULYFjnQaGYcQlnv6K
      mBpCaPR0Nh53zfR0NSKERsTUzugzcqxMH5/UMpKdSZliSgBPP/00S5cuZebMmViWhdPppKGh
      gfHjx5/w+4UQpxwjmDlzJsXFxYTDYdavX48Qgrlz5yKE6DOzSNM01QXEqbtLTMvEsAxsmg19
      BA2EfbxMNW2H+N2Gu0n1pHHDrE+hC513qzfyx42/4ZsXfpfpuecM6/d02G0FIS2o2Aa+QuwT
      l2E/VtEnp4NmYit7Bpv0Q1L2SV9iuHQBud1u0sfMp6HyOQpKLus9rSsUaKXhwPOk583Hl5Z/
      RteH6gLqB4fDQTgcRtM0wuEw+/fvP2UXUGZmJuXl5SxcuJCOjg7cbvdxb86x8YO5c+dSXl4O
      cNy+QkN95zGcSSnZWLWe1/e/Spu/lYykDJaVXMF5hRcMdWhnTUrJY9sfJM2Tzo8uuxOXPXpt
      lU68hN+/9SseePdv3H3N74Y4yhHGMqJ9/znn9L3LFwK80XUHBJrBe/IEMFwIIZh63nd49+Uv
      s+m528geH+06bqx+EylNZl1817C+ORgOYkoAN910E7/73e/YvTt6fNo111xDVlbWSb8/MzOT
      SCTCCy+8QENDA5deeimhUIhHHnmEz33uc2zevJnq6moyMjI4ePAgn/rUp2IJb9SxLIvHdjzI
      K2UvMrdgPiVZUzjSXsMf3/4NR9pruGHWp0ZU33lnsIPK5gpunHVLb+UPYNftXDTpMn659k6O
      djWQm5I3hFGOMEIHuwdCHdGxgI9WkOHOaAthBB184vGNZ9G1D1K546+0HNkEQNbYCyie80Wc
      nuGfxIZaTAkgFApx2223kZERbXpVVlb26dP/OF3Xuemmm2hqasLr9fZuGHfzzTcDsHjxYubM
      mUN3dzcXXXQRLpcrlvBGnX1NZbxS9iJfWvTPXFBUiiY0LGnxxv413P/O/8ecgvkUZ46cIzst
      aSGlPGEXlu2Dxyx59n3ro5rQIHcWHFwDObOiA79CQMQPVevAmxv9N0IIIXAlZTPtgh9gmdFx
      QU13qDv/MxRTAnj++ecpKSkh/4P9Sp599ll8Ph8FBQUn/4U2G3l5fe/YjnUbCSH6JAblzJiB
      EIHaZjZUribdlc4FE0p77/Q1obF04sU8/f5jbK3Z3O8EEDIiHO3qImREyEzykur2DPiHzOdO
      JT91LFuqN1FafDE2PdqXaVom71RvJN2TQU6yuvs/K0LAmPnQUQO7H4WUArC5oLMWkDDzFjiD
      aZPDjRAC3TZMxllGkJgSgMvl4vDhw71bQjQ1NSXUIMpI0FVWTd2z64m0d9NccACbJ0LjS5vJ
      vnwhmj16l6wJjSSHl55wT79+R1VrM6v37aU94EcIgYZgVn4BFxZPxj6A235oQuOmWbfwmzfu
      4g/r7+HikkvRhc7mQxvYUPUmXzjvqyOqS2vY0GzR6Z5Hd0HT3ujdf/YMKFgIrtShjk4ZRDEl
      gBUrVvCLX/yCl156CcMwuO6668jOVv1ugyVU20LdA6+SMrOIjM/MZFZrDo/ufJCqje+AEORc
      dR5CCJq7m6jvrOXKadec9e9o6u7i6fe3U5yRxdXTzsFlt3O4rZW1+8uRUnJpybQBbQlMy53J
      N0q/wwPv/o271vwYgHRPBp9f+FUumFA64pv60ghhdRxGOFPQkrL69skPJM0GeXOi/5RRK+YT
      waSUhEIhdF3HZrMNygdSrQQGaUmq738Z0x+i6GvXIXSNnnAPP171fcyGTi5pmsbsz32SFjp4
      eNv/IRD89xW/wGk783EVKSXP795JW8DPbfPOw/bB3b6Ukl31tazet5c7zj2fzKT4ddmdaGpr
      dC69RX1XPZZlkZuSh00bnGstViebBirNMJHtDxLach+EukBo6OMW4rrwP9DSJwxRtGdmuEwD
      jSc1DfQsNDQ08OSTTzJv3jyee+65Ps/953/+J8nJyf15WeUsWJEIoYY2UudNQujRbhCPw8O3
      LvwP/vL2vTzqfIcn123HlCaTsqbwlQu+flaVP4BpWRzt7mJiZlZv5Q/R/taxqekANPd0xTUB
      nIgQAiF08n0nH1saSaSUhDf9ifB7j+KY9Wn0cQuRPU2EdzyE/7mv4vnkA2jenKEOUxkF+pUA
      kpOTufLKK0lLS+PLX/5yn0VaibSPy3AmNA3NYcMMhHtnXgkEuSlj+Ldp/8rm+x/EefVM8gsn
      UZg+AXs/BvaEENh1nWDEOG52V9g0sJA4dHWm0NmSbYcIv/cozvO/jmP2p3u7ffSxC/E//hnC
      2/6Bc+m/j4gWjjKy9evTu3nzZpxOJxUVFWRkZHDuuefGOy7lNIRNx1NSQMf2/WQsOQdHRgpC
      CCzDpPPtMia4xlE881J0V/9nRmhCUJKZzdYj1bT0FJKR5I3+Dsti6+FqvA4nuckn3vhPOTmz
      YRcgsBVd2KfPX/NmYxu7EPPIu4AETp8AZCRCYMcOQmXlYLPhmTcXR0lJfPYMUhJevxJATk4O
      v//970lKSsLtdrNz587e52677bZTrgZW4kMIgW/JDAIH6zn4+2fwzZ6I7nLQvf8IwboWxt1x
      eUyV/7Hfce74CRxsaeah7e8wNTsPt8NBdWsLDV0dXDtjNp4E6gceNEIjWsEfP/wmpcWZ7tJu
      9vTQfM9vCe0tw5aTjYwYdL24Eu/yy0i77TPx2zVUSVj9ukKmT5/Ot7/9bZ544gl8Ph9FRUW9
      z6nTwAaP5nIw4SvX0PT6drrKqrEiBq7cdIr++TpcBSdfkX02HLqNT81ZwObqg+xvOkrENMlI
      8vLpuQsZk6Lu/vtDHzMbhE6k/GWc5/5TbyvA6jiCWb0B+4wbOd3dv7Qs2u7/P4yGo+T85Mc4
      JhSClAS2baPlT3/BlpNDypVXDHhZlJGtX7OAysvL0XWd1tZWUlJSmDp1cHdlVLOAoo7NmJFS
      Ig0TaVlodjtCi38ZpZSYloUpJXZdRxugv+NoOA9ASklk2/2ENv8Ze8kVHw4Cv/8kwubEc9N9
      CHfaqV+3rY3af/k66V/8PN4LL+xzcljr3/5OsLycvF/8bEAOj1GzgEaGAZsFVFdXR0VFBU6n
      k4yMDNLT03ufy8zMVK2AQSaEQNgHtrkvhMCm67EtHFGADwbX596OcKUR3vI3IhWvInQ7+oTF
      OC/45mkrfwCjuRlME/u48cefHTx+HP4tW7D8fvQEqqRHElOatIVa6Ip0kGL3kerMQBfDr17s
      1+f5/PPPZ+fOnaxduxa73c5rr73W+9zPfvYzUlJS4hagoiQiodmwz7ge29SrkN1NCEcSwuU7
      44Vgeno6aBpGfT3Oogl9WgBGfT1akgehxuIGjJQyunEeIIT2kfdN0h3p4tUjz1HTdbB3KH98
      8kSWF1xLkn14TZHvVwJwuVx861vfYvfu3SQlJfUe4agox4SMEC09TXidySQ7UxKq6y2ehO5A
      +PLP+uf0tDTc8+fR8fTTOCYUYv9gP67Qrt10r3uDlOuuRRsuZxAkGKujlvC2+zFrt4Nmx1a0
      FMfc2xHOZMJmmGcPPYxpGawY/ynSnZm0hJp4u2ENzx16hE8Wfw675gApscxupJacHoMAACAA
      SURBVNGNZk9H6EPzXsW0EjgcDvPwww/zzjvv4HA4uPnmm1m0aNGAf9jVGEDUcOwvj5gRXtn7
      Ai+XvUBPuAdd6MwumMdn5t1B5hnsMT8cyxSLgTwQxmxvp+lXvyFSU4N9bAEyEiFSW4fn/PNJ
      /+LnBywBjOYxALNpH4FnvwJ2N7axC5FmGLNqPSIlD/e1f2RPsJrX61ZyR8m/4HOmIxBIJG2h
      Fh7Y9wcuG3sdU5PGE6x7EqNjJ0gTobtxZF6CI2c5Qovf33TAD4R56aWX6O7u5s477yQQCHDX
      XXdRVFR0woPclcQnpeTxHQ/xxv7XuKTkcqbkTKfV38yqspX8at3P+cGlPybFpWYOxYuemkr2
      D/8D/8ZNBMvLETYbvk98Avec2X2ngFomtOyLbvxmhiE5H8bMG1H7/g8H0jIJrf0pWuo4XCt+
      i+ZOi07AaK/B/9QXCG/+M3UlM0l3ZpHqzOj9OYEgzZFBmjODus5yxjeuBDOAa8wnEI4MzJ5K
      wk2vYRmduAo+Pag3qTElgNraWhYuXEhmZiYAhYWFtLS0qAQwSh1ur+H1ilXcNv8LXDTp0t4L
      eUbeLP77le+zpuJVbjjnk0McZWLR3G68l1yM95KLT/wNlgkVL8LR96PHPNpccGQTNOyEmZ+G
      pPhMFx4NZGcdZt1O3Nfci/bBQL0QApE2HvuM64nseQ5bUQlhK3TcynmJJGyFoWsP0urCU/J9
      dFe0nrT7ZqK7cgnUPIAjYzG658RH6g6EmBLA5Zdfzs9//nM2bdpEV1cXbW1tTJo0cg4cUeJr
      X+NeHLqDOQXz+1z8Ocm5TMmZxq66nSoBDCYpoX57tPKf/inIKIkOVoa6YNejsO95mPVZ0BNn
      6uNAksEOQCI8mcc9JzyZYASZrGdh79hDuOJ5nCnjIXs6UrOzv2Mv3ZFOCjUDPamot/L/4KfR
      U2YgdA9G977hnQAsy6KlpYWsrCwmTpzIPffcw86dO/F4PMydO7d3fYDX602oPkLl9KL9nScm
      pTyDjQ2UuJJWNAFkTf+w8gdwJkPxMnjvH9DTCClnPwg9Gmlp48HuwTj8DnruzD4zr8zD7yA0
      nfyD68nV7HQ2bEev245W/SbvZI9hc08ZczMXkeffw4lWgH9ocD8lZ71hSDgc5qmnnur92ufz
      UVpayoIFC3rn/69evZrm5ub4RamMCFNyphExw2yteYePzi2o76yjvHEvs/LnDmF0o5BlQKQH
      3GnHTy91+gABoc4hCW1EcnhxzPss4S33Ed71FFZnHVZ7DaGNv8eoXIcjayKiYBH6om9TN/1q
      XsnLo8XyU1K7l0tyL2Np3mXYU87B7DmIGaj98HWlxOh4D2kGsHknD2qR+tUFVFVVxT333HPS
      52tqaigtLe13UMrIlO8by/IpV/PYjn9Q31XH1JxptPS0sLr8JTKSMrmkZPlQhzi66PboCV9d
      9dHWwLHT06SEnqPR/+9OP/nPK30IIXAs+CdkqJvQW78ktP43IC2EbsNZuBBb3kyYcBFCtzMj
      81ymps/F6qrDvvP/yCAVhIYj/QKM9q34D/4eR9YlaI4MzJ4DhFvW48gsRXOPHdQynXUCsNls
      3HzzzaSlpZ10KqamaWRlqcGl0UYIwY2zbibF5ePlvS+wtuJVbJqNOQULuHnubXidw2sRTMIT
      WvSYxz1PwZF3oqd/CR38TVC5OtotdIL+bOXkhM2Bs/S72GfeiHV0L2g29Pw5iIqVCFdqn/EU
      XbOhezLB5oFAywc/78E94auE6p4l1PACWAbCloQz50ocWcsGfZp6v1oA5eXl7N27l0mTJrFs
      2TLGjBmTUPPrlf6z63aunHYNyyZfTmtPC0mOJLzOZHV9DJXMaTDhQqh8FWrWg+aAUHv0MPjJ
      K0AbftsTDHdCCPSMiegZEz980OWDYHvflhZAJABGAJwf7o6g2VNxj7sDp/lJMLsR9rS4zv8/
      G/1aCHbsR8rKynjttddobW1l2rRplJaWkpOToxaCDZJEWzQFI7RMUmI0NdG58iVCFfsRTgee
      BfPxXnop0mYbsIVgZxMf/iZoLgcjFK38Myf3rajOQswLwaTE7OzECgSxZaQj7HZARruqjmyO
      /teRBDmzIOecQUlSMW8G13ogOrOqaFm01SW0aOVf/hx018P8r4J9cLfmOJOFYHE5EzgYDLJ3
      717eeust/H4/c+bMYdmyZQM2C0glgKgRWVmexkgsU7iqisa77kZzu3FOLsEKBgnt3oN9QiHp
      3/g6lsMxtAkgzmJJAJGjR2l/6BGCu3eDaaL5fPiuu5akGdmIiheiYxbJ+RDugvZDkDUNJl87
      4Ekg5gQgLaheD9VvRVsDzpToDCsETLsJ0gZ/u5wBWQlsWRZHjhwhHA73edzn87FixQq6uroo
      Kyujp6dHTQNVEp4Mh2n9299xjC0g45vfQPd6o9s919TQ+JOf0rnyJbw3XD/UYQ4LZns7TXfd
      jbDZSL3lZnRfCsFde+h48hHcZgH6uNkw6UrQo3vl0LIP9j4FaUWQO3vQ45WWgXloA8aB15ER
      P3reOdinXRvdtO/jhAbjl0DqeDi6K5rA8uZHx13OYHfXoXLWCSAUCnHvvfdSXFx80u+pqKig
      tLSUtLThW3BFiYdIXR3hgwfJ+sF/oHujWysIIbCPG4dnyWL8724h6eqrIIFaAP0hpaRz5UvI
      cJjsH/0QW0Z09pHn3HMJTU1H+LdhZc1HO3Z2tRCQMRl846ML2QY5AUgzQmjdz4nseQ4tvRAc
      XoxNfyKy+2nc1/wBLfUEs3WEBqmF0X8jRL8GgSdMmMDXvva1kz7/yCOP9DsgRRlJzK4uAGxp
      qX0eF0JgS09HBoMQMYYitOHFsgju2o1r9qzeyh8AIXCOz8N8zyRyuB5XRkGf53B4obth0MON
      7HmWyN7ncV39a2xFFyKEhtVZT+CFfyW45r9xX/9nhD7yezjOOgG4XC6+8IUvALBv3z48Hg9j
      x0az4ebNm5kxYwY33njjWffRK8oxVihC6+Y9dOw4gOZy4JtVTOr8yWgDfOhNf9jzxiDsdoJl
      5djz83sXXEkpCe7di56VhXC74vK7esIhOoNBUt0e3CPy5KoTrwaXznQ0p47ujPR9wgxDV210
      0HoQSTNMZPfT2Eoux1Z0Ue+4oZaci3PxNwk8989YLQfRs6cMalwn0hPpYkfLu9R0VyIQTEgu
      YXbGubhsZzbgfNafKCEELpcLwzDYuXMnWVlZ5ObmIqVk5cqVZGVlnbJ7SFFOxQqEqX7iNQK1
      zaRMG48ZCNHw4ka6ymsYe9tlaLbhNW1RT08j6eKL6HjiSXSvF8fkyWBE6F73BsE9e0n/+r+C
      1r/ZNsf0hEI8vG0L6/ZXEDIieBwOlk+ZxifnzMVpGyGJQNNwTZ+Of8tWzLY29GPdw1LStbkc
      e1sAl/ddaM2BpJzo1Mma9dF9iwrOG9xYjTDS34ZWNK7vpBEh0HwFIASy+ygMcQJoD7Xy7KGH
      CZtB8r2FSCnZ3ryZys5yri28BQenv/Ho9y3VX/7yF15//XXsdjuPPfYYUkrS09N7WwOKcrak
      lLS/vZtgXQsTvnYtrrzolro9lXXU/P1lWjftIWPxzGE1k0toGqk3fwrp99Py578gnA6kYSI0
      jbQ7bsc1Zzamafb79UOGwa/XvU5ZYwPXzDyHAl8qB1uaWblnF43dXXyz9GL0GBPMYBBCkHz1
      Vfi3bqPp7l/ivewydJ+P4K7ddK9di+/a5bjdEdj1MOjO6N2/3QNTrwfvIO8ubHOiJedgNe9D
      Sit64hdEp6827wdEvw7xiScpJevqXkEXGrdM/CdSHNEuyNZQM89UPciGhte5KOeq075OvxPA
      l770JaZOnYrP52P69OkIIXA6ncPqw6mMLDJs4C+rJnXBZNxjPlyhmlQ8huTphXRs30/G+TNA
      H17XmOZykf6VL+NdfhnhqkMIhwPXtKnYMjNjqvwB3qmuYuvhau5acR1Tc3IRQrC4qJipObn8
      eNVLLCuZwqz8we0i6S9bejrZ//E92h54kLb770eaFlpyMqmfvgXvskui+6B1Hobuo9F1AKkT
      ov8dZEK3Yz/nUwRX/yeR3c9in3IVaDpWaxWht3+LbcJitNTB27HzRPxGD4e6D3Bp/oreyh8g
      3ZnJrIwFbGl8m/MzLzltV1C/EoAQAofDwXnnnce6deuorq7ufe6qq67C5YpPn6cyulgRAysY
      wZ7a96ASIQR2n5dATSPSshD68LvjFZqGs7gYZ5y7P7fW1DA+PZ1puXkf/i4hmFMwluzkFLYd
      rhkxCQDAnpdH9ve+g9nRgeX3Y8vK+mAh2AeGySwa25QrcbRVEXr9x4Q3/REcHmT7YbTcGTgv
      +X+IId5CO2j6kdLCaz/+/HWvPQVTGoSsIC4GIAEc89RTT1FZWcmMGTNieRlFAUB3O7Gneemp
      rCNjyTm9rUlpmvgPNeDMSUPow2sMYKBFt9E+cYtHiOhBIyOOEOipqeipqaf/3iEihIZj0b9g
      K74Eo3JtdB1A7jnYJl4y5JU/QIojDafu4khPNeO9xR9+VpAc6a7GY/OSZDv93lsxJQCfz8fi
      xYu57LLLYnkZZRBYYYPAkUYibd3Y05NxF2QNu1k1QtdIOX86jU+9RdOabaQtnIqMGLS8vZvA
      kUYKv7QCoQ2v7p+BNruggPUHD3CgqYnizEyEEEgp2dNQz9GuLmbnqzG3gSKEQM+Zhp4zbahD
      OY5dszMv83y2Nm3A50hlQvIkJFDRvoey9vcozVuOLk5/sxRTDZCVlcXf/vY39u7d2/vYl770
      pRG3lD+hSQg1t3Pk0dcJHmlC2HSkaeIem03BzZfgyBxeZ/QmTRtH7tWLOLrqXVre3oU0DISu
      M+bGC0kqGjPU4Q26CyYU83rFPu5c/TI3zZpD/geDwM++/x7nF05g9gjq/lHia37WBQRMP2vr
      XsYmovspmdJkftYFzEifixk5/fhTTHsBHT16lKqqqj6PzZs3r//7aZwhtRdQ1Jnsm2MGQhz8
      /TNoDju5KxZhT08h3NxBw8qNSFNS9C/Xo7uGz4IWv9+P2+0m0tpFV1k1msuBd2L+ceMCI4Vp
      mjFvBtcZDHLf5o28eaACw7Jw2mxcOnkKty84D88ptluRUoJlYLUdAmmhpRWC7oj5MxDzZnDD
      UMx7AQ0RKSXNwaPU+Q8jEBQkjSfNGW0pDvhmcPX19VRWVvZ57Nxzzx3wC0MlgKgzSQAtG3bR
      8MJGSn5wK3bfh5VouK2Lil88zJgblpJ+3vBp4o7EzeBOJR4J4JiuYJA2v58Mr5ek033GpMSo
      epPgm3cj22sAEN4cnIu/iX3K1cefEHYWVAIYGQZkM7iPam5uZseOHUA0E23evJk5c+ac9MKQ
      UrJjxw7ef/99XC4XV111FcnJxw9UbN++nbKyMm699dZYwlOAwOEmnDlpfSp/AHuqF2dWKoEj
      jcDwSQDKySW7XCS7XCAlMtiJDHcjPJkI2/GfN6N6I4GXv4etqBT7Jf8PNA2j/BWCa34CCOxT
      rx78ApyEaRns69jDvvbdBE0/Oe4xzMlcSJpTHVYz0GJKADNnzmTmzJlAtHJvaWmhq6uLpKQT
      z93t6upix44d3H777VRWVvLmm29y9dV9L8S2tjZ2794d8/xpJUr3ODH9wej0yY8uGLIkpj+E
      7h7dm5SNNFZPM+FNf4zOTDFCaEmZ2OfdgX3adQg9+nGWlklo0x/QC+bjWv6z3lkr+pi5IE1C
      G+7FNvlyhDb0kwBMabK69gX2d+wlz1NAsiOVqq797OvYw9XjPsFY7+BvozyaxHQFVFRUsGXL
      FiCaAPbv308wGDzp9zc0NDBp0iTsdjslJSVs2rQpOs3tg+aoZVm8/vrrXHzxxaxdu7b35z7e
      S2WaJpZlnVWslmX1NvMShZTyuG25P849ZSwtb++i5Z0ykudMRGgCaUm6tlVgdPtxTxl72tcY
      TGdSppHEsiwsy4pPmUJdRF76BlbXUcT0T6J5c7DqthN643+wupvQ5n0eEMjuRqzWQ9guuJ6I
      KaOraj8gCy9E7n6GcHMVop+LmSzLitv7VNbxHhXte1iedx0TkksQQhAyg7xW9zxral/kpvF3
      4NQGfl3RsRvOGI9HGVbOpEwxJQC73Y7X+2HXwte//nXGjz/5RRUIBHpbB5qmHRfY7t27ycjI
      IDc3t0/gpmke1yLQ+rH8vT8/M9ydrkzeCXlkXjibhmfX07mrEkd2KqGj7QQq68i6ZB5J43Ji
      6g8eCIn2Pkkp41KmyN5nsNqqcd10P+LYASMzrsPcWUJ4859wTrwMLW080mYDIRDSPO73SmlG
      97SxOfq2CM/Csc9lrGWSSMo63md8cjHFqVN61zu4NQ+Lci7i8aq/czRYR6F34mleKXZSyri9
      T8OFZVkIIU5ZppgSQGFhIT09PWzcuBGPx8PixYtPOciakpLSO2gcDofRNK3P92/YsIHU1FSe
      eeYZqqqqWLt2LRdddBE2m63PoG9/BoEjkQi6rifUIHA4HD6jv0POFQtxjcmkbdMe/GWHsacl
      M/bWS/HNGn6b9p1pmUYK0zSRUsalTOHq9djGLsCeNanP49rkKwhv+Ss07MCWVQzJOUTyzsEs
      fwHn9GsRjuigujRChPc+g5YxCXvauJgSv2VZMZfJkiYB00+2Ow/7xza18zqSsWk2glZgUK6H
      Y0ktka69YwngVGWKqbRbtmzh4Ycf5oorrqCrq4sf/OAH/PrXv+7TKviovLw8Vq9ezTnnnENZ
      WRlFRUUYhsGePXuYNWsWX/ziF4FoBe/3+yktLU2oCnuoCCFInT0R3zlFSDO6lUJ/7/6UoSMt
      C3GixT3igxsp64NWshA4F/8bgWe/gv/JO7BPjR7+blSsxmyuwH3N74ZFq0+gkeHKoiFQi2EZ
      2D4yJtEUPIphGWS4RsdAsJQW0ugENIQtedDqvZgSwKZNm7jjjjuYM2cOUkqOHDlCVVVV78Dw
      xzmdTq666io2btxIWloaixYtAqKDw/DhFCxd15kzZ05CZePhQGiq4h/JbGPPJbL3OayuerTk
      D/YGkhKzegMyEkTPm9X7vXpmCe4b/j/CG34XbR1I0DJL8Fz3R/S8wT9e8USEEMzLXMTTVQ/y
      dsMa5maeh11z0BJsZF3dy4xPLibbneCL/6TE6K4g1PA8VqAWEOhJRTjH3IDuyh/wRB3TOoA3
      3niD1atXc+ONN9LV1cXDDz/Mr371K3y+gV1dqtYBRCXanHlIvDLFcx2A1dOE/8nPIexuHHM/
      i0jOxTyyldD2f7DJXkLV1M+zsHAC54zJ790iWkqJDLSBlAhP2odbG8cgvusAJHvadvJG3atI
      aWHX7ARMPwVJhVw+9ga89tPvZxMPQ7UOwOjai7/qz+juQuyp8wCTcOtGZKQDT/E30d39X+k9
      4AvBpJS8/fbbvPXWW3g8Hm644QbGjRs34JWsSgBRI62ylFLij4TpCYfwuTw4T/AejrQynU48
      EwCA1V5DcO3PMKs3ApIAdl5xzGZr5sX0mNDQ1ckVU6fzlQuWYB+gjfMGYiFYV7iDQ90HCJoB
      sly5jPNOQDuDvWziZUgSgJR0l/8XmjMHd+FXeqflSjOI/8CvELZkPEVf73crYMAXgpWVlZGU
      lMQPf/hDLMvi6aefJi8vL6FWCI4mlpTUtLVytKsDp81OYXoGqe74VMZdwSCvVeyloukoErBp
      GnPyx7G0eBIOXXX1nSktdRzu6/+C1dPEn9a8wF6/zneXr+D29OjhOVtqqrlrzauM8fm4cdac
      IY72zCU7fMxMnzfUYQwqK9yIFazHOeYTfdZkCN2FPf18QvUvYBmdaPaB61GJ6ZP31ltvsXDh
      QiDan1dVVcWRI0coKiqKS3DK4PGHw7xUtouqlibcdgeGZSKBiyZOZvaYsTG1nAKRCE+/v52Q
      aXDl1Jmkuj3UdbbzTk0VPeEQ10yflVAts4EmhKBdeFjdGOEbpYspTM/o/fstGDeeZZOnsLq8
      jKunzzxhK0sZHqSMrmU68cC+DsgP/g2cmK6OKVOm8Pzzz5Oenk5HRwf79+8nOzs7XrEpg8Sy
      LF6r2MvRrk4+OXs+2d4UDMtkR+1hXqsoI9XtYUJ6/2dj7K6vpS3Qw+3zF5GRFJ0hNjY1jUyP
      l6d3bWdO/jjGpaXHqzijQlN3N6a0GJ+e3id5CiEYn5bO+spKesIhlQCGMc2ZjbCnEWnfip48
      tXd8RloGRvt2NFcewnb8gS/xFNPVsWTJErq6urjnnnvweDx8+9vfJikpqc/qXmX4a/H3UNF0
      lKunncP4tA/vJpdMmEhtRzvv1lQxPi0DrZ/vaXVbCznJvt7KH6IV1di0dJIcTmraW4dNArCk
      RXVrFe/WbKI71E1RRjHnFS7GbT/1yUqDLTPJiy4ENW2tTMzM+vBAECmpaWsj2eUkyaG2+RhO
      pJRYVgQhNITQEULHOeYGgocfBAT2tAUgLcItb2H0HMRT9LW4DNqfSkwJQNd1VqxYwYoVK3of
      e/XVV1m6dClu9/D6wCgn1+LvASA3xdcncWuaRr4vlb1H6zEtE62fffXHDjH5OPnB//qbWOJN
      Inlh19M88/7jeJ3JeJ3JvHFgDavKVvKti75PTnLe6V/k2GtJSXeoi9aeFlJdaXEbBD4mPSmJ
      8ycU8ci2LRRnZlGYnoGUkq2Ha3htXxm3zFug7v6HDUlny34qd/yVrpYKbA4POYWXUDjjVhxp
      5wEQqnuGSMtbAGjOXDwTvozNO2XAI4v7FXL48GEMw4j3yyoDKMnhwJKS7lCItI8M+kop6QwG
      cNvtaDHciUzMzOa1ir3UdbQzxpfa+9r7mxrxh8MUZQyPxT7bat7lmfcf59Z5n+OSkuVomkZL
      TzO/ffN/+PPb9/KDS3+C4wQ7b35ce6CNh7bezzvVG6KzZWwOLpp0GZ+c/WlccWpJaELwtcWl
      3Ln6Fb7+9BMUpKYRMU3qOju4bPJUrp1xTlx+jxK7psMb2bHm2yT5Cskat5hIqIOq9x+g6fAG
      FlzxJ+xp52FPXYAVOgpCQ3PmAGJQFuupWwSFHG8KWUnJvF21n+tnzMFltyOlpLqtlX1NR7mw
      uCSmu/SpObmUNzbw5PvbmJc/7oNB4A521dcyr2A8Od6B7ec8E5a0eL1iFVNzZrBs8uXoWnRg
      Lsubza3z7uCuNT/hYMt+puRMP+Xr+MN+fvvG3bQHWvncuV8mMymbyqYKVle8TJu/lX9d+u2Y
      kulH+dxufnrlCjZUVbK7vh67pvHlCxYzO38sNrXgb1iIhDrZu/EXZI9byszSO9FtTqSUdLXs
      492X/omq3Q9RPPuLCM2G7s4f9PhUAlBw2GxcPmU6T7+/nfvf3UBeSipBI0JtRxvFGVnMzo9t
      bYdDt3HN9FlsqDrAjtrDRCwTt93BkqKJzC0YPyzGiyxp0dTdxKz8Ob2V/zHZybk4dDtN3Y2n
      TQAbD62npu0QP77iLsamjcc0TSZnTqUoayJ3r72T8qOXMy33xCvl+8Nlt3NJyRQuKRn47gLl
      7HU07yXQVc/si/8H3RbtBhRCkJwxmZzCizlatYaic+4YsoPm454AEmk3vdFkjC+V2+afx9bD
      1dR3tuO02VlWMo3puXlxuZt02+1cMmkKS4omEjQMPHbHgC1U6g9NaKQnZVDfWYclrT536S09
      zYTNCBlJp++q2lP/PuPTCxmb1ndX3Ck508jwZLKnfldcE4AyvBmhLoSmY3P0beUKIXC40jAi
      PdEdWhmhCaCnp6dPn/91112XUCs5R5NUt4dlJVMH7PWFEDhtdpy24XfsniY0LilZzh/X/4Y3
      D7xOafElaJpGm7+VR7b9H+PTCynOLDmD1xFY8vizKqREzY4bhbxp0R13247uIMk3tvdxy4zQ
      Wr+V5LRJaPrQLZyNKQGsWbOG//3f/yU9/cMpfHfffTf6MLqzU5Qzde64RVRPv5773/lfnt/1
      FMmuFI60HybDk8G/Xfh9nLbTz+SZnT+P+zb/mQNNFUzM+jBh7KzdRqu/hdn5o2u162iXlFpI
      /qQVlG+6G03opObOxgh3c2jXw3S2VnDeBf8x4FM9TyWmvYD+/ve/U1RUxNKlSz98QSHUXkCD
      JNH2zYGhL5NlWVQ0lfNu9Ua6w11MyJjI4qILSXae2aZkISPI7978JZUtB1g+5SqyknKobKpg
      fdUbLJqwmM8v/MqIvwYH8lB4aRhYPT0IhwPN5Rq0basHci8gI9xD+eZfUbv/JYSmIS0TpzuD
      qed/l+zxFw3Y9TDgm8Ht2LGDtWvX9jnXt7i4eMC3cVYJIGqoK8uBkAhl6gl188z7T7Cx6k1C
      Rogkh5dlky/nimnX4BjC5n68DEQCkJZF4J136Vy5EqO5Bc3pxH3uAlKuuxb9JOeLxNNAbwYn
      pUV3ayVdbfuxObykZs/E4UobkN91zIAngC1btrBy5co+j33nO9856YEw8aISQFQiVJYfJaXE
      HwjgcbuH/H2SUmJJCwEfrNw8u3iklAQiAToDHSTZk0j2DP1U13iJdwKQUtK96lXaH3kU15w5
      uKZNxWhtpeeNN7EX5JP13e9EWwMDaKi2gx5IA54AIFqx7t+/H7fbzcSJEwflg6sSQNRwTwBS
      SjpDQSzLwudyn3KGWG1HiPLGAJ3BCElOGyWZbsanOYfk/Wr1t/DSnufZ27ALIQTnjJnDldOu
      IcV19rsyxns76OEg3gnAaGyk/vs/IOWqK/HdcH1vt0+45jCNP/4JKddfS8pHehkGwmhNADH1
      1Rw+fJif/vSn5OXl9VZGP/rRj9RJXqOclJL6zg5eqyjjaFcnIElxuVlaXMLU7Nw+lbqUkr1H
      /eyo7SbLayc7SSdgwvqqDpy2NPJSBrfLpL6jlv95/U4saTEzbxYWFusr17H9yBa+e/GPyPSq
      zQ7jLVhWBkDS0iV9+vztYwtwTp9OYOv2AU8Ao1VMNfXKlSv5zGc+w+LFi5FS8otf/IIDBw4w
      ZYpalDKaHe3q5Mn3tpHlTebqaTOx6Tr7Ght4ee8upJRMy8nrTQIdQZPtif/P5QAAIABJREFU
      td3MHuNleq6HYCCA2+3mQEuQLYe7uGJKGnZ9cGZJSCn5x5b7SHIk8e8X/5A0T3R2W3N3I3et
      +TGPbX+Qf17yrYRqRQ4HMmIgdA0+tteUEALhcCA/uDtX4i+mT1ZaWhoHDx6kp6eHtrY2Ghsb
      B7z/XxnepJSsr9qPz+3m/2fvzePsuMo77++pqrtvfXvfV3VLraWl1m5Zli3bSBhvgEkI4CFh
      yIRsTDK8w2QyYSaEeZN3SAZCeIOT4MA4MQkGYsBg4wUvslZr3/fullq979vdb1Wd+aOkltra
      WupVrfp+PrY/rtu37qlbdc9zzrP8nl9ZuoKF+YXU5OTx6MI6FuUXsqXhNLp5OU/+wmACp6qw
      INczKjchhGBelptIyqA/Nn26UkOJQY53HmXTgkdHJ3+AbH8uD9V8kCPtB4kkR6ZtPHcLrsoK
      ZDJF8uQJq2DiIsbQEMnTp3EtmD+Do5vbTGgH8OSTT/J3f/d3/O7v/i6qqvKrv/qrFBVNv56F
      zewhnk7TOTzM6tKKMZW+ihAsLijkUHsLfbEI+QHLn55MS5yauEpr6NIqO2VcXVQ1VURTUUxp
      kuHJuOq1kCcD3dSJp+ME3HMnoDsbcFRU4F23joH/80+Yw8O4ahdi9Pcz/NLPwDAIPPLITA9x
      zjIhA+DxePjCF74wWWOxmVNcQ/754iHB5ck+06dxqidGJGUQcl9+HONpE0Uw5thUk+PPxe/y
      c7zzCHWF9WM09o93HiHkCY/ZGdhMDkIIwp/5dRSfl8EXfoBMpgBwzZ9Pzh//EVp21gyPcO5y
      W7+u1tZWnnvuOdavX8/3v//9Ma/91V/9FcGgvUK6W/E4HBQEQ5zo6qC+uHS0369pmhztaCPk
      9pDl9Y3+fVnYzfHOGNuahlhZEsAhJbFomv2tI5SH3QRc01dV7lSdPLH4o/zboRcIezJZUboG
      pGTnuW3sPLeVT6/6TRwzJNo111FcLjKe/hTBxx8n3dmBGgig5eUh7ISSKeW20kB1XScSieB2
      u4nFYmNey8jImHJBODsN1GK2poF2jwzzwqF9hD1elhYWo6kqZ7q7aOjr5rHaJcx/XybQcEJn
      x/lh+qJpVAV001r5b54fxqVNb5m8buj85MgPee3UpfoWiSIUnlj8FB9a+ORVSqE3w04DvTO4
      W9NAJ1QH8PbbbxMOh6mvrwfg+eef5wMf+AD5+fm3e8pxYRsAi9lqAKSUdI0M89bZU3SMDCGl
      JMPjZUNlNTU5ede8B7op6Y2k6YvEyfC5yfU7pi375/1IKekcaaex9ywCQXXOAnL8ubf17NgG
      4M7gbjUAt7W/klLS1tbGiRMnCIfDuN1uDMNg69atbNy48bYHbDM3EEKQHwzxyeWriSSTGNIk
      6HbfsBGKpgjyg06Cmo7XO7OTpRCCgmARBUE7ocFmbnPbDrZt27axf/9+3G43DQ0NKIrCE088
      QWFh4WSOz+YORghBYIpL+G1sbG6f2zIAQgg+8YlPsHr1ajwejz3p29jY2NyBTCjEnpmZyT/8
      wz/Q3t6O0+kklUrx53/+5wQC45POtbGZCFJKUoaBROJStTkV37GxmQ4mZADeeOMNSktLSafT
      fOpTn+K5556bU0GUOwUpJWYiRbJ7EKEquPLCCE2dsxPiJZG5HU0NNA/2ISXkB4Ksr5hHjj8w
      Z6/bxmaymZABSCaTLFiwgKGhIQKBAFlZWZw/f97WAppGpJT07zhG9y/3YUTiADizQxR85D78
      80vm5GQ4lIjz/YN7QUoW5heiCMHZnm7+5cAePr5sJYWhqyt5bWxsrmZCaaBnzpyhpaWFnJwc
      vvWtb2GaJl//+ten3AVkp4FaxGIx4gcb6fz5TrLWLyFYV4XUDfp3Hmfk+DlKP/so/nnTlMki
      IdLQSv+u46R6h3CEA2SuXYh/Qektfec3S22VUvLTY4fojUZ4esUa3JoDIQRpw+DHRw4QTaX4
      zOp1s+Y+22mgdwZ2GuhtUFNTQ01NDVJKvv71r6Oq6px60Gc7Zkqn+419ZK5bTN6j94xOet6y
      fM4/+zLdb+zFV1mAmOLCPCkl/duP0vnKe7gLs3AXZpPqG+LCc6+Ru2kV2RvrEcrkTMjxdJqW
      wX7WlFbgcVyegByqyvLiUv7tyAEGE3HCntlXH2FjM9uYkAHYvXs33/nOd3A4HJimSTqdJi8v
      j89+9rNUVlZO1hhnDikh0gldhyE5DN4cyF8Gnqlt5TZe9L5hjEic4JLKMSteoSoEF5XT/eZ+
      jGgCLTC1k2Gya4DOV3aR8/AKsh+oR9FUpGHSt+MoXb94D9+8Qrxlk1McaEgTU0qc19gBXjqm
      G8akfJaNzVxnQkvD1tZWPvaxj/GVr3yFL33pS+Tn5/PEE0/wz//8z5M1vplDSujYBwe/A93H
      LQPQthsOPAv9jTM9OgCEZskSyPTVkslmWrdW3VO8+gcYPtKI4nKSff8ylItjEqpC1volaH4v
      Q4cm7/vyOZ1keLw09vZwpfdSSkljbw8eh8Ne/dvYjJMJzQ6GYTA0NERmZibhcJje3l4WL15M
      NBqdrPHNHCNt0PA6FN8Da/8Qlv+m9d+MCjjxb5CO3fwcU4yWFcCVG6Z/53FM/fKq14gnGdx3
      Gl9FIeo0VNXqI3E0v8dq6nEFQlHQgl70i8HpyUARCusr5nGuv5fXTh2nc3iI7pFhtjWdZX9r
      M/dVVKNOg9GzsZkLTMgFtGnTJr785S/zy1/+klQqxaOPPkp/fz/V1dWTNb6Zo+MguIJQ/gBc
      EgDT3DBvM+z+prUrKFo1o0MUikLBR+/jwv95jfN//zOCiyuQusHA/tNI3SD3Q2umJRjqLspi
      YM9J0kNRnOHLCQB6JE6yq5/gksl1B1Zl5fDYwjrePnuKw+0tgMDtcHB/VQ3Li28t6Gxjczcz
      4abwiUSC9vZ2gsEgfr9/NB4wldH0ackCOvK8JWm/9N+NPW6kYO8zkLsYKh++pTFMNrFYDI/H
      Q6y5i+7X95Ls7AMh8FUWkvfIahyZwWmZDI14ksa/eREt4KHgiXtxhAPow1E6fr6LVO8glZ9/
      CkdwfG6Z8QrcSSlJ6jrdkWFMKcnxB/A6nLNu8rezgO4M7Cyg26C/v59vfvObNDc388UvfpFn
      n32WL3zhC9d92KWUNDY2smfPHjIyMnjwwQdxX6EV09nZye7du4lGo2RlZfHggw/O3A3xZEHf
      GTDScKUGfCoKyRHwzI7GIEIIfOX5lP+HxzBiCVAEqsc1rROh6nZR+uubafmXN2n61k9Q3S6M
      RBJHOEDppzePe/K/FYSwVv2lYbtZyPWQUqKbJmnDwKVptmvsTkVKMC/2RVYcMIm/7QkZgBdf
      fJGHHnqIvr6+0RVBZ2cnZWVl1/z7eDzOW2+9xdNPP82JEyfYvn07Dz98eRVtGAZr164lHA6z
      Y8cO9u/fz9q1aycyxNsnv95yAzX90lrpK5rl9z/7C3B4IGfhzIzrOghFoPk9M/Th4C7IovLz
      HyXa0Eaqbxhn2I+vuhjVff1VoiXlIBlJGrg0BZ/TnqAmi6Su8/Lxo2xpOEMkmaQwGOKjS+tZ
      Xjw3iwPnJFJCOgrn34WBRpAmBIqg/H4rI3ES7uOEDIDb7SYSiQDW5H7mzJkbbt/b29upqanB
      5/NRX1/P888/P+b1S/2Ek8kk/f39LF269JrnuZRyeiuYpomu30KDcXc2oupDqA2vIDoPgysA
      8QFMzY2x4GMgVbjFMUw2Uspb/h6mFAU8NUV4sO6jCZjXGZ8p4Vh3glPdcXTT8kLmBxwszXHg
      cMyia5ogpmne1vM6EdKmyde2vMWh1lbuKS8nx+fnZHcXX3n9F/zWPfeyqWZilfqmac6+Z2+C
      GLMwdVhJjaAe+x6mnsTIqgWhogw0oB74DsaST2H6Cm74ftM0rSLJG9ynCRmAp556imeeeYYj
      R46gKAqPPfYY2dnZ1/37SCQy2i5S0zSklEgpx6xIXn31VQ4fPkxZWRkVFRWA5XN8/+R9O13H
      bjXcIXMWQagYtfckIjWMLFyJkVmL1DyXG9zOMBMM4cwYe1uitAynqSvwkuPTiKclJ7rjbG+J
      8/A8B17H5O0GzEQKI55CC3hGU2enk0vP+XTx9plTHGpr5X9sfoTa3DwATCn5weEDPLfnPZYW
      FJLrv/1q/UvXc6c+e9dj1l3TubeQ0sRY9ptIh9VG1SzbgHLqRcSZl5FLP3vDXcCla7nRNd12
      Qxi43BQ+kUhYPtmbaL/7/X5aW1sBa1IXQly1Hd28eTMbN25k//79bN++nfvvvx9N08YEfW8n
      CGwYBg6H49a3v84c8OcAIIDZFCLSdf2ODMT1x9KcH0pxT2mQymzPaIv4vICTX5zqp3EgzYri
      icuJ6NE43W/sY/hII2ZKR/N7yFq/hPA9i0brFaaaSyvL6bxPu1susDC/gLqi4jHP+yMLF/Py
      8eMc7+6iOPP2Yyd2EHgaSMdh6DwUrcbhu7Lw1AnFaxBH/wWnEQHv9e/jlAWB9+/fz7PPPnvN
      127UFL6goIB33nmH1atXc+bMGQoLCzFNk5aWFsrKymhqaiInJwen00k4HObcuXO3MzybWU5P
      NI0mBAVBJ1eaY69TJdur0TmSmvBnGMkULc//kmRnP5nrFuHMDBJr7qTr1d2kh6LkPbp2VvnC
      rXhIEoGCQ72NhcoVxFMpsv3+q87hVDWcqko8NXdcN3MWUwdpWPHG96NdPGYkJ/wxt2UA6urq
      +OpXv3rN1/x+/3Xf5/V6Wb9+PS+++CKBQIDNmzdjGAZHjx6lrKyMVCrFK6+8gpQSr9fLpk2b
      bmd4NrMcRQgkVhzgSqSUmFKiTMLEPLj/DPELXVT87ofxFFs7uIwVNbiLcuj48VZCy6vxFF7f
      XTldSClpG2rhJ0d+xLm+RjRVo66wno8s+RW8Tt9tGYKa3DzeO3+OkURitCPbpUrpSDJJ1Q3c
      tDazBKcP3GHob4DCVZddPVJC/1mrJskz8Qy42zIAQ0NDnDp16pqvrVmz5rpbQyEEtbW11NbW
      jjn+2GOPAbBgwQJbSvouID/gQAJN/QmWFPhGdwFDCYPuiM7iAt+EPyNyohlvWd7o5A+AEASX
      VNL92m6iZ1pnhQE423Oar771Z+T681lVuoaknmTnua0cbT/Ef/vAnxHy3Lq09ZNL6tja2MD/
      9+brfHLFKjK9Xk53d/Pd93ayqrSMRQV2B79Zj1CgYiMcewHOvgKFK61jvaegZSdUPAjqxF1w
      t2UABgcHOXTo0DVfW7FixZzyDdpMPn6nSl2Bj0PtEQbjOvkBB7GUydneOAGXQk3OraezmlLS
      1NfD0Y42IqkkroDOAnl1TEoI61/SNCfhSiZG2kjx3d1/z4K8RXz+vv+M2+FGSsnjiz/Kn776
      R7x45Ad8ZvVv3fIuIDcQ5H9sfoS/3fYuf/zySyhCIID1lfP43Lr1k7LDmrVISbKpichbb6O3
      t6NmZuLf+ACuRYumXBV30smshgUfhsY3oH2/dUx1QtkGKLln5tJAq6urR+UekskkiURi9LWb
      BYJtbIQQLMzz4nEoHO+M0T6URFUEpWEXNRkqTvXWfqimlGxtPMO+lmZy/QECbjfdxRm8mYjj
      6upkfp6lRCqlJNLQhhFN4Kuc+VVwx3A7FwbO8/TKf4/bYf1uhBBk+bK5r2oju85tI6HH8Thu
      rZBOYLmB/vKJj3Cur5fBeJyijAyKQhlzvhgsumMH/d99Di0zE0dxMXpXNz1/9TWCH/0IwSce
      v7OMgBCQuwQy58FIO5gG+PMtiZpJMuITSgM9f/48X/3qVxkYGCAUCjE0NMS3v/3t6waBbWwu
      oQhBVZaH8rCbpG6iqQKHohCP37rI3rm+Xva1NPNwTS11hcUoQpCIxXll+05eO3mUUOcIAb+P
      WHMnvVsOEaqvxlOWNwVXdWvE05ZInt91ddzM7wyQNtLohn7bqWduh4Pa/Bvnis8l9L5++v/x
      u/g3PkDo1z6O4nIhDYOR195g6Ic/xDW/Bvf73M+zHiHA4bWMwBQwIXO4ZcsWPvGJT7B27Vq+
      8Y1vsGzZMlR1+vOsbe5cVEXgdVqr/ttd1BzrbCPH7x+d/AHcXg8Prl6JLiUH3t7FuWd+Svcb
      +8hYtYDCpzbMigyggmAhboeHo+2HrpK2PtpxiLxAAV7nxOMhdwux3btBVQl+9CMoF+VohKoS
      +OAm1OxsYjt23vI5ZXwQo+cMMjE82cOdFUxoB+D1epFS4vf7aWxsRNd1Lly4cFWQ18ZmKomk
      kgRc7qt82x6fF7fTgX/zCuZl5OHICqI4J5ZiOZkEXEEeW/hhfnz4B2iKg6VFy0kbKd488zon
      u47xxQe/hKrc/oIqnjZoG0qRSJtkeDUKAk7USerMNhsxBgdRgwHE+7TIhKqiZWZiDAyO+1xm
      fIDklv+Ffvo1Kx1TceBY+ASuDV9EXGPHdqcyIQNw//3309HRwQc/+EH+5m/+hmAwSFVV1WSN
      zcZmXOT4AjT19ZDS9TGdwgbjMaKpFPk52bhzZj7j5/0IIXhyyVOkjBT/dvj7vHDweaSUBN1B
      fufeP2BRft1tn7t5IMHuCyPohsShChK6SbbPwfqKEAHX3NylO0uKGXn1NYy+PpSCy64vMxoj
      3dqK7/77x3UemYqRePkLmMPtuB76Ekq4ArPnNKl938GM9uJ5/BsIdZYUjE2QW5aDTqVSvPPO
      O2zevHnM8UunEUKwY8cOamtrycycGsVMuym8xXilk+8krrwmKSWxtMlATEcIyPI5cKlXV493
      R0b41wO7qc7OZX1FNS5NYzAe47XTx5FS8vSKtThmyDU5HjloKSU9kS4uDDTjUB1UZM0j4Arc
      9rPaH0vz+ukBysJulhT4cKqCoYTOe80jOFTBpprwhHYCs7US2Ewm6fyv/w01I0T4M7+BlpWF
      GY0y+K8vkDh1irwv/w8c+dduTXplJXD6xEsk3vwzvJ/4V9Ts+ZYfXkr09oPEf/QbeJ74Jlrl
      A9N3YbfJlFQCG4bBiRMnWLXq+s1QTp06RXl5+a2e2sZmDMc6YxzrjI6Kxbk1hRXFfioyxxry
      XH+AR2uX8Oqp45zq7sTtcBBNpcjx+Xly8bIZm/zHixCC3EA+uYHJ6Zt8qjuOx6GwqiSAQ7W+
      p1y/k7VlAV4/PUDnSIqi0NzpT3AJxeUi+z/9IX3f/P/p+tJ/RwkEMaMRFK+PrN/7netO/u9H
      b9mDklWFmnNFTZIQqAV1iFAxesueO8IAjIdbNgCapuHxeHjmmWeu+zculwufzw5e2dw+Qwmd
      Y51RFuV7Kc1wY0rJmZ44O88P41AVSjLGTmDVOXkUhjKsatdUgmxfgIrM7Fk/+U8Fg3GdTK9j
      dPK/RNCl4dIUBuP6nDQAAM7SEvL+36+QOHSYdEcHamYmnuX1qIHxa0sJoVgpl+9HYh0Xc+eZ
      umUD4HA4+O3f/u2pGIuNDWC5RI51Rpmf42VJ/mU5hDWlGvG0yeH2CEUh51VBX5/TRV1h8UwM
      eVbhdijEUsZVSrspwyRtSDyTqLQ6nIhzoLWF/miMknCYpYVFY+IwM4HiduNdu+a2369W3E/6
      5M/RW/aiFa8cdQEZ57cjh9vRKjZM4mhnlpm9UzY216EvqrOm1DNmAhNCUBhycrAtQiJt4nXO
      nZXYZFKV5Wb7uWHO9SdG3WVpw+RIRxSnKigITs7qf3/LBb659R1GEgm8TicjF3WG/vPGD1AY
      Ck3KZ8wEWsV9aPMeIv7yH+Ks+zhKZgVGz2nSx17EsfgjqEXLZ3qIk4ZtAGxmJZoqSBpXyzWk
      dEssbibTGaWU9MV6aR1swaW5KAuXz6p8/ZIMF9XZbnY1j3CmJ47XqdIfS5NIm9xbEcTjUNCN
      NG1DrfRFe8n251AYLEZTxz8dtAwO8LV33mRpYTFPr1yN3+2ifWiIv9u+lb986w3+8omPzPhO
      4HYRmgv3B75Cas8/kj7xEjIVRbiDOFf8Os4Vn0FMIDV3OhHSQER7wIhbLWw9mfC+sd+Zd8hm
      3FzZFOJa/RdmJ4KyDBenu+MUBJw4VAUpJQld0tBrHbtVuYjJwjB1Xjz8A14/9QopPYlEku3L
      4TdW/xZLi5bPiu9XEYKVJQHyAk6a+hJEkgZ5ASfzczyEvRp90V6+vfNvOdF59KKkgGRxfh2/
      te7zhL3jy9x77eQJ3JqD39/wAL6L2UAht4f/uGEj/89PX2R/ywXuqaicwqucWoTTh2v9H+Bc
      /ZvIxBDCE0ZcS5p5ViIh2oN2+mcw1GKJyAHk1EL1o5bS6EVsAzCHMU2T9gvNdLReIJVM4g8E
      KK2qJpw1+3Lir0QImJ/r5XhXjFdPDVAccmJKOD+QQBWC+iL/ZPbFHjdSSn5y5Ee8euJn/Er9
      J6krXE5Cj/PGqV/wjXe/yp9s+p9U58yf/oFdA0UIysJuysJjtbni6Tj/+50/xzAN/tPG/0pB
      sIj2oVZeOPA8X3vnL/jvm/8cl3ZzF1HzQD8VWVmjk/8lCkJBwl4v5/v77mgDcAnh9CFm0e5u
      XKSicPRfMRU3LPkUqjcTRjqs/uYnfgRLPz1qFGwDMEcxTYMTBw/Q3dFGVm4+wVAGQ4MDHNi1
      ndq6egpLy2Z6iDdEU6x89SMdUc4PJBECikMu6gp9eGagrSPAYHyAV0/+nI8t+wSP1D4xutqv
      WFdFT6SbHx/5AV988EsoYvYKju06t422wVb+95N/S44/FyEE+YECikIlfPGl32f3+R1smPfg
      Tc8TcnvoiUUxTXNMe9Z4Ok00lSTDM7fqU+4o2veDnsRY9mmEK4DqcFi9A9whOPhdq8dAVg0w
      QS0gm9lLV1sb3R3tLFm5hrpVa5i/ZCkr191HSXklZ44fIXEbomvTTYZH476KII8vzOSheRm4
      NYWd54fZdm6I5oEE5vs7ykwxbUMtJPQ4dYX1Y1w9qqJSV7iMtsGWUYG32UpD7xmKQsXkBvJG
      r0EIQV4gn4JgIQ29Z8Z1nvur5tHc389bZ09jSitWk9TT/OjgAVRFYXVZ+VRdgs3NGG4BfwE4
      r5CsEAJ8eZaS6HDr6GF7BzBH6WxvJRQOk52XP/pDV1SVksp5tDWfp6+nm6LS8pkd5DgQQjCS
      1HmnYQjdlGR6NUaSOtvOJajMdLO2LDht+vYuzQ0S4umxxlNKSSwVw6E6UGd5jrhbcxNPxzCl
      OWanIqUkrsetaxwHK0pKeWzRYp7ZvpU3T58mN+Cnqa+X7pERfv++B8iy64BmDtUJ6WvoHkkD
      jPSYRjK2AbgDkFIipXlxIh9fIFdPpXB5PFf9raqqqJpKOjXxvrvTgW5IdjUP43UqbKzKwO2w
      AsItQym2Ng6S43MyL9szLTGBkoxS8oMFvHbqFSqzqtFUDSklA7F+dp7byuqye8blP78eEklK
      T7GneSfn+pvwuwKsLr2HolDxpAWXV5Su4Y3Tv2BP8y7WlK1DCIGUkveat9Mf62Nl6fjy51VF
      4TdW30NtXgFvnj5Fy8AAVdk5/MGGjdTkzrzU9l1NzkI4+RPEQONlGWkpofMw6AnIuhynsg3A
      bEZK2htPcXLnmwz1dOIJhKhZdR8VS1ej3CQVLZCRQW9XJ+l0eowWSGRkmFQqRSB0660GZ4K+
      WJr+mM6mmjDuiwVMQghKQk5KMlyc7Y1Tle1GMPUWwO3w8Jk1n+Nr7/wFX3n9T6grqieRjrHr
      3HYC7gAfqfv4hCbq7pFO/nrLV2kbaiEvUEAkOcJLR37Ex5c/zYcWPjkp11Cbu5DNCx7lme1/
      zf6W3RSFSmgZvMDeC7t4dOGHbymIrSoK6yoqWTcHgr1ziuwFkLMQ7dSPkLlLrPTPkTboO2u1
      mfRdbpOqfvnLX/7yzI309nh/4Gk8XBKQmw1peuPl5O4tbPvhP+J0e8gtm4eeTnF8+xskoiMU
      VS9CN4zrCj15fX5azzcxPDiA1++3Vqp9vZw6fJBgRpjK6vmz8rt4v8HqjaZpHUqyuMCHS7t8
      z4UQ9MXS9MV0anK80+YGyvHnUVdYT1NfA0c7DtEz0sXyktV8bt3nryngJqXENM2bihem9BTf
      ePerSCn5k03/kycXP8WmBY/idrj50aHvU5lVRX5w4s1dhFBYXLCUsCeTYx2HOdl9DEOaPFX3
      cR5d9OFrBrD7Y/0caN3Lme6T6KZOhjsMMKd6f5gXW4TOiWsSCmTVIBUn9J9FDF0ARYOqD1zs
      LXz5GbV3ALOUkf4e9r7yAxZv2MyyB59A1TSkNGk6vJcd//ZdiqoXk11ec933e/1+lqxcw6nD
      B9m7bQuKomKaBlm5edQuXX7HtMYLuFVMCQMxnYDr8uNqSkl/TCfgUpnOmjAhBJXZ8/jCxj8m
      kU6gKgpO1TVhY9rYe4am3gb+6OE/pSBotavUVI1HFj7B4bYD/PL0q1cFn28XVVF5sGYTG6o2
      kjJSOFXXNYvAJJIdTe/yL/ueI6kncagOEuk49UUr+fVVvzXr1EBtrkDR0AtWIfJXWLVfiuOq
      IjCwDcCs5cKJQ6iaxsJ1D6NeXD0KoVBZt4rj217j3JE9NzQAAJnZOaza8ABD/f2kkkl8gQCB
      UMYt755mkgy3RmHQyb7WCD6nSvCiQTjTE6dzJMXGqowZaXKuCAWvc/JSHbsinTg1F/mBsat8
      TdEoDpdxvOMIpjQnNcisqQ60G+jan+k+xbO7nuGh6k1sWvAhXJqbc32N/ON7z/D9Q//E59Z9
      fkINa2ymAUUFbRLloG2mh2QsgtPtRXOMXWUJRcHtC5KMRcZ1HofDSXbe5MgMzwSqIrinLMi7
      TUO8crIfn1MlbZrohmR5kZ+i0NxYhWZ6s0npSQbi/WT6skaPm9Kke6SDTG/WtNYXmNLk58d+
      QmVWFZ9c+RtoijVVhL2ZPJ3+DP+w6295fPFHKckonbYx2Uw+d85S8C4jq7CM6FA/w71dY44n
      YhH62y+QVVQ+MwObAbxOlc3zwzxQFaIyy83ifB+PL8pi0RVKoXc6NTkLKMwo5l/3/xNDcSuF
      z5QmWxvf4XjHUR6s2TSt12ppBbVQk1s7OvlfojKrGoGgbbBlzPE42YW4AAAgAElEQVSUYTKU
      0EnpV2s42cxO7B3ALKW4to6sojK2/uBZ1jz+SUK5BcQjw+x/7UWEojB/9fja280VFCEoDbsp
      Dc/0SKYGt8PN59Z9nm9s+Uv+80u/T0m4jOHEED2Rbj648HFWla6d0s+XUtIb0xmIpXGqClk+
      Bb/Tz2Cs/ypZ6ZHkMIY0CLqDAKQNk0PtURp64+imRFMElVlu6gv9ODV7jTmbueWWkLOBu6Ul
      ZGSgl20/+i7dzQ1oDid6OkUgK5f1T/0GuWXz5nxLyLnAeFpCXslgfICtDW9zrr8RvyvAmrJ7
      qc1bNKW+9pRu8t6FES4MJFAVgSnBoQr6o1vZ2/wi/+XBL1GTW4sQgng6zjPb/5qukQ6+/MGv
      4tY8bD03RNdImtpcDxleB0NxnZPdMbK9GhuqMtDugEb0V7aEnCuMpyWkbQBmOYaepqeliaGe
      LrzBDPLKq3G6LVXCuTZZwty7pls1ANONKSU7zw/TMZxiTWmALJ8D3ZSc6o5xpifK6a7n6I+e
      YV52DX5XgMbes0SSI/zOuj9gcdFSWgeTvN0wyAdqwuQHnVjaotATSfH66QHuqwhRnjm+6uKZ
      5G41ALYLaJajag7yK+aTXzE7VCZnA6aUjCQMhICAS50yoy4lJHWTeNrA51JnTIJ6KumJpDnX
      n2Dz/DC5/ssB9dUlAZK6JMv7OVYU6xzvOEQsHWNdxX3UZNdaszzQMpQk5NHIDzhGS/EEVg/i
      TK9Gy2DyjjAAdyu2AbC5Y5ASzvXH2d8WIZayAo0ht8qa0gD5AdekykFEUwZ7Wka4MJAEQBVQ
      k+OlvsiHYw4ZgnjaRAiuahMphMDnVOiNpsny5fBgzabR13RdHxWA8zgU4mkDU1rf0SVMKYml
      TPIDc+e7movYBsDmjkBKybn+BLuaR6jIdFMWdiElnOmNs6VxiAfnZZAXmJyU0KRu8k7DIGlD
      cm95EL9LpTea5nhnjHjaYENl6I5zJV6PoFsFycWiurGFdr1RnaBbRb3BpVaE3RzvjHKkI0pd
      gY/O4VbebniLtFEKoppYqhXDrLPrBWYptgG4HaQEPW41WTB18OeBK8S0KJLdpUgJ+9siVGS6
      WVsWGC3+Kgg6eevsIAfbI2yuCU/KxNzYl2AkafCh2kxCbusnkhdwEnJrvNMwSHckPWnGZqbJ
      8GgUZ7jY2zKCW1PI8GgYpuRMT5zuSIqHqjNu+J0G3SqrSgLsbYlwfiBK22ATplxIhreEkfhu
      vvveC7QMPMLH65+2jcAsxDYAt4qU0HsCzr4GqRFAgOqAojWW0NIsagaSSibpbGshMjyMy+0m
      v6gEr99/R65eh5MGsZRJeaZrTOWvqghKwy4OtUdI6CYex8Qnmc6RFJlex+jkD5ZfOy/gwONQ
      6BxJzRkDoAjBmtIg288N8caZAdyagm5KpIRVJQEKbnKdQghqcryoSpwXD++iNLyQolAW1Tke
      cn1PsC0/wP/Z/W1qchaMW2nUZvqwDcCtMngOTrwIeUuhaJWlsdF3Bs69bQkulW2YFTuBoYF+
      juzdTSqVxOvzk0zEaW44w/y6ZXdEH4D3c+krvVbO2mTnsQku91Ie+0FW7PNONKA3wuNQeLg6
      g/bhFP0xHacqKAy5CLjGb0y7ho9zsvN7/LuVX6cgGBo9fl/VRt5tfJttje/YBmAWYhuAW0Ga
      cH4LhMpg/hOXZyVvttVsoXmbpbY3wz1E9XSao/t24wsEWF2/EafLhWmaNJ0+yekjh/H5A2Rk
      Zt38RLOIoMvSATrbGyc/4ES9mFueNiSNfXFyfA7ck1R0VJzhYs+FEXqjabJ9VgqdlNAymCSR
      NikKzo3V/5UIISgKuSgK3V666kB8AI/Di//KLlRYmklZvmy6hjsmY5g2k8zs8VfcCegJiPVZ
      TRauXAUKAZnVYCQh1ju+c0kTUhFIxyZ9CdvT1UEymWT+kqW4LtY+qKpK5fxa3F4v7ReaJ/Xz
      povVJQHah1O80zDImZ4Yp7pjvHGmn1javNgofnJW5uVhN3l+B2+dHeRQe4TGvjh7WobZfWGE
      BbleMr32uun9FIWKiaZG6BwZO9En9SQX+s9TbGsGzUrsJ/lWEIrl5tGv0ff10jH1JisoKS03
      0vktEO2xzplRDpUPgztjUtxH8WgUp9OFyzU2/1pVVXx+P7Ho+ITkZhNCCAqDLjZWhTjYFmV/
      q3UN2T4H91QHCXsmr4DHoQruqwxxpCPKmR5L3sCtKSwt9LEg1zvnXECTwcK8JZRnVvLc7m/z
      m/f8HnmBfBJ6nJeOvkhfrJfPzf/8TA/R5hpMqwGQUtLa2sqOHTvIyclhw4YNY6rU0uk0+/fv
      p7m5mXA4zIMPPnjLFb9TiuqyVv+dh6FoNTgD1oRtpKH1Pavpsjf7+u+XEvrPwrEfQKgEs+Q+
      ehvb6N7eDvt+Ts7ajeTMK0KZYJ652+slnUqSSiXRrvh+TdMkFo0SzLgzBXWEgIKgi/yAczR/
      3a0pUzIhuzSFlcUBlhb6SOkSt0O5IyQNZgqn5uR37v1D/nbb1/jTV/+IDE+YWCqCoqh8ds1v
      U5k1b6aHaHMNplUKIh6P89xzz/H0009z5MgRUqkUGzduHH394MGD6LrOggULOHToEFJKNmzY
      cNV5ZlQKIjUCh/7JWvHnLLYygPobLNfP0n9nxQeuh5GGvd+CYDF61RMcfmk3rUfO4Q37IR0j
      NmJSuLiM+o+uQ3PdfEV7PdmEdCrFe1veJBAKs6h+BQ6nE9M0OXfmFOfPnmbp6ntmrUS0LQUx
      +9F1HdM0r9kQJmWkONx2gJaBZkKeDOqLV5HpzZyBUd4ad6sUxLQagMbGRs6fP89DDz1EOp3m
      e9/7Hp/5zGdGX79yKDt37kRRFO65556rzpNKpW65qUkqlZq8DkbpGDS/ixhoQkgD05cP5fdb
      O4AbICIdqAefxVj6GU7t7ad571mWPbWOnKoCxIVtDBw9wL7jBRTXV1O7eflNh5FMJq87sQz2
      93H8wF5M08TnD5CIx0kmLDeVqqoUlJRRuaAW9RqdoGaSG13TnYhpmhg3aN15J2Ka5rjaXN5J
      GIaBlHJOXZOu66Pxv+sxrVcbiUTIyLCakTscDqSUY6RmhRAkk0nefvttYrEYTz5pNcLWdR1d
      18ec61btlpQSwzAm4SoAxQUVmxBlOiBBcVjSKDc5v2KkUYFU0uDC/gbKVleTVZlndXpSFLJz
      JRW+Khp3N1J538Kb7gJudE2BUAbL122gq72V5rOncTidVC9agtfnJxYZ4UJjA9FohMX1K2dV
      e8hJvU+zgEvP+Fy7pkuGba5wqSfwXLqmS8/ejZhWA+D1eunosLIEDMNACDHGJZNKpXjhhReo
      ra1l8+bNo6t8TdPGWObbcQFd2rJOrr/4FleqSgE4vJhtRzFSOuGibGu1axow2AD+fDKyijC2
      N2AmDVSXi+HOAfS0TiA3A3fAM2b8hmHccLXscrmIjgSRUrJ09T0EM6xKWSklGZlZ7N3+LsOD
      A+QWFN7uFzDp3Oya7jRmiwtISkkiMsxAVxuKopJZWILD5bmt38ONXEB3KnerC2haDUB+fj7v
      vvsu69at4+zZs+Tm5mKaJt3d3eTn57N//35KS0tZvnz5qEW+k/rX3hTNDeX34zz1JirFRNo7
      kYUGom0PRDqRS3+d6LERVFVhuHOA3c+/TbQ/ggBUp0bVvbXUPFB3S0Hi/p5uvP4AofBlP6wQ
      glBmFl6fn/6e7lllAGwmH2maHNv2Oke2/IJUPAZIfKFMVj/2a5QtXmFnNd3FTKsB8Pv9rF69
      mu9973u43W4ef/xxdF1nx44dPPXUU6NZQj/84Q8BWLhwIcuWLZvOIU4tQkDRWhwIipuP0bTz
      ONmRTjIL/bDkUwyOeGjYvht/ToiDL+4gv7aE5R9bj+bS6D7Tzqm3DoGE+Q8tHfePVlhlrTf4
      g8m5NJvZiZSSEzvf4sAvf8KS+z9E+eIVmIbOqfe28O4PnuUhp4vi+Utmepg2M8S0GgAhBEuW
      LGHx4sVj3D9PPfUUAOvWrWPdunXTOaTpRwgoWsOCX6sj9uNd7DigEmjNgH3HGekeJKs8DyNt
      ECzIZPnH1o+u9gO5Vuzk9DtHKFtVgyc0vkyZrNx8WpvPM9DbQ0ZW9qgLqL+3h1g0wvzcpVN2
      qTYzj55Oceitn7Hw3g9Q//CTo7+5ez9aRnxkiENvvkRh9UIUW6jtrmTaQ97v9/vflQiBw+dl
      5a/dT8fJFrrPtAOSqnsXklOVz7Z/eJWS5fPGuHqEEOTWFHHijQOM9AyO2wBk5+aRW1DI4b3v
      UVJRhT8QJDIyTMu5RvKLSsjMyZ2ii7SZDQz3dpGMRShZMHbXKBSF4gV1HPzlT0lEI3gDoRuc
      5faJppJsOXuWQ20tCCFYVVrGfZXzcM8hX/udzNzJeboDUR0axXUVFNdVjB7TUzqKqqIn0lc1
      49aTaZDW+8aLoqosql9J06kTtJ5vwtB1VE2jqLScyvm1cyvGYnMVmsMK1KaTV1evp5NxFFVF
      uUGa4EToj8X4i1++xrm+XqqyczCl5JntW9nW2MAXH/wAAbfdKWymsQ3ADZBSoifjjHRcIJ2I
      4fKHCOSXoDqmLvtBdajkVhfSduQcVesXjmb+mIbJufdO4Q37CebfWiWvpmnULK6jcn4tqVQS
      p8uFptkrsLuBQFYumQUlnNz1NgVVtWgOJ1JKkrEoZ/ftIL9iPi7P5IsXSin5zns76I9G+dqH
      n6L8ovjg6e4u/uy1V/j+gX38h3vutb0BM4xtAG7ASGcLnUf3AKC5PAw2N9DbcJyi5evxhKam
      ulEIQc3GOnqbOtn6d69QvLQSzeWg+2w7Q+19rPrkAzjGUSV8LTSHY4w0hM3cR1EU1n3k07zx
      3b/mlb/7C0oX1mMaOo0H30MoCise+diUTMIjyQTbmxr53Lr1o5M/wPzcPJ5YXMfPjh3hUytX
      4XPOnZTfOxHbAFyHxPAgnUf3EPRr5BTmIDwhDE8enaeO035gO+X3PYI6Ratop9fFus9u4vTb
      h+k4cQHTMAnkZrDu328iXHIDrSGbmUFKZDKNHIqBaSICHoTPPSv6QgDklFbxyOf+iENv/Yyz
      +7YhhELhvIXUP/wk3tDU6EINxOIYpjmmN8Al8oNBkrpOJJG0DcAMYxuA6zDU2oRqRMlNNqO0
      OMFMozj95BXfz7nj3UQ6WwkVV9z8RLeBEAKXz82Sx1ZjpHSkKdFcDoQtRjbrkFIiO/oxmrqs
      dFshLCOQF0adVzDTwwOs5ymrsJQHn/490om4lYTgmgRdrBuQ4/fj0jTO9nSzrKh49LOklDT0
      9BBwuQh5PFP2+TbjwzYA18I0SPW34XQ5Ueo+YfX81ePQvA3t3GtoahWp6PCUD0MIMS5ROJuZ
      Q/aNYDR0oBRnoxSEQQjkYBSjoQNTU6AsZ6aHOIoQAqdneoT2vE4nH6xdyE+PHqYiK5slF4sN
      915o5vVTJ/jYsuV2JtAswDYA12K4BUesjZi7BBmusrRyXEGY/wTmyHcwImk098wrVkop6Wpv
      ZXhwEIfDQU5BIT5/YKaHddcgTYl5oQcR9qNW5I8W1Yk8J1I3MJu6EIWZd23bpadXrqEvGuXL
      r71Cjs+PlJLeaIQP1i7iI0vs+pPZgG0ArkWki5A2xFAsg77GE2RVLUQoCoYUdMtyhDpMoKBk
      RoeYiMU4uvc9IsNDuL1e9LROw6kTVC9cTFlV9YyO7a5BN5CJFEpOztiKagFKhg/TNJGDEciY
      2RahM4XH4eC/PLSJDy1s53BbK0IIVpaUMj83z87+mSXYBuBaOLy41TQ5pWX0NJ1gqO08Do+X
      VHQYmRihIM+L5nBBpBNGOqyeAKFSa5cwDZiGwfFD+9F1nTX3P4jX78c0TFrPN9Fw4hg+f2DW
      6v3PKVQBqgKp9JjDMq1jtFxsDXqmA0VTMAqzUEpzEBNs9nOnoQhBXWERdYVFMz0Um2tgG4Br
      Ea5AONyElW48Kzcw1NmKHo8R9EpCtODKfxjO/Aw6j4CiWv19FQfM2wR5y6Y8+2N4aIjBvl7m
      19UTCFkSEaoKZfNq6O/p5kLjWYLBIA737ak92owPoSgo2UHMzgGU/DB4XWCaGCdakP0RCLgR
      JdkYQ1Fo60Mm06jzi+x7Mh1ISWxkiLP7d9DXdh63L0B53SryK+bbxY9XYBuAa+H0w7xHEKd+
      imekHU+wGFwjEGuC/AUQ7Ybu4zD/caufr6lD+z44/XOrTWTm1La/i0cjCEXB6/ePHpNSEh3s
      IzbQQzQW56VtPye7uJxlDz1JRl6hPelMBUKglOYgh2Poh5oQYT8YJnIgAk4NbX4xptcJGV7U
      cADj+AVkQRgRujtdQpONlJJUPMZQTweqw0kopwBV0xBC0Nt+gXe+9y2S8Sjh/GIGOts4u287
      i+7bxIrNH0UI2wiAbQCuT+4iq0l76y4YagaHD+Y9AuEK2PMtqNoEeUsvr/arNkO0C5q3QbjS
      avY+RbjcbkzTJJlIjB4b7uvi9X/8Gq7cMjILy8hbvo7m4wd49dtfZdO//wLZxeVTNp67GeHQ
      UJeUY7b1IfuGkdEkeJxodRUIj3O0SZDIDIDLYe0MbAMwYaSUlsT1Oy+TjEUBCOUUsO4jnya7
      uJztP/oO/owsHvu9L+HxBzFNk7P7tvPeS8+TXVxO+eKVM3wFswPbANyIYBHUPgVIRqN8A03W
      ij9cMdbVIwRkVELbbtCT4BhHjrOE4e5BmnaeZLC9D6fXRVFdBcVLK1C16+uzBMOZ+ANBLjSc
      ISs7B4fTyd5f/AipufFm5TNvUR35xaUsvv8R3vynv2HXT/+Zx37vv9u7gHQa4nFwu2ESm5kI
      TUUtzUGW5mCcaIFU2pr8baYEKSXHtr7GgTd+wuL7P0hpbT16KsnJXW/xy+e+Qd0DH2Kop5NH
      f/uP8fituJyiKNSsXM/5o3s5vftdyhbZfRDANgA3RwjGpHhcmthTEfBdoaQppXVMdVpxgXHQ
      3dDO/h9uw+lzEy7JJhlJcOzlPfQ0drD8o+tQrmMENE1j4bLlHN7zHrve/iW+QADdFSJzXgEl
      FVXkF5danYCcLhas2ciWf/17ooP9+MOXS/KllESGhxgZHkLTHGRkZuGcQ524xqCn4dAhOHva
      MgKaA+ZVQ309TJaukxAIQMn0YzR0ICNxhP/yIkAORCCZttxENhMiGYtwZMsvWPLAh8ZIXOeV
      z+OVv/9fHNnyCzSHE08wY8z7hKIQzMqlo+n05aK9yUJKGBqCvl5QFMjNA6931lSDXw/bANwq
      3hzw58OF7RAotLp8SQmxHug6DAUrrIDwTUjFkhz5+W6yq/Kp/8g6NJfVI7n7bDt7v/8uFw42
      Uray+rqrlGBGmCWr1tLX1clgXw+p6DBV5RXULB4r++t0e5BI9HRq9JieTnP62GE6W1tRFIEp
      JU6nk5rFS8ktmGPxAtOE7duhrQUWLITMTBgchJPHITIC92+0IuiThMgJIboG0Y82o5RkI10O
      GIpidA0icjMQ45Txtrk+g13tJGMRyhbVj3lWFVWjtHYZPReaMFWDkb5ufFdIXZiGzkBnG8Gs
      3MmdmA0DDuyDUyet/5cSNA2Wr4T586fUHTxRbANwq6gOK/h7+HnY/6wVBDZS0H8WvNlQun5c
      D1f/hR7iQzFWfeL+0WpfIQS51YXkziuk9fA5ylbeOJ/f6XJRtaAW06ihZe+bdDccZeGqe0df
      l1LScuowHn+QQGbO6LEzx4/Q09nBovoVhDKzMPQ0FxobOHZgLyvv3TCmfeQdT0c7NDXA5keg
      sMi6N1JCQQG8+gq0tkBZ+aR9nNBU1IWlGE2dmE1dIE1LcrkgE6U8d24Z1xnikgaXkU5f9Zqe
      TuELhXF5fex++QU2fvK38YWzMHWdkzvfoqeliYd+/T9O3n2QEo4esSb/FaugpARMae02d++y
      3I3lUyMZMxnYBuB2CBbDit+ydgFDF0DRoPgeKLnHcgGNg2Q0gepQcXrHul2EELiDHiK9Q+Pe
      piqqSv3DT7LlhW+z66V/oWb1fShCoenwHk7v2cqaxz+Bqlm3OhoZoaO1hdql9eQXXy5mW7C0
      nsjIMOfOnmbpqrVzZ6JqbYFAEAoLL3+XQkB+AYQyJt0AAAinhja/CFmVj5FIYWgCh617M2lk
      5BcRyMrl5K63yS6pGO1mloxFaDy4i6KaRdQ98ChvPf+3/Pjrf0IgK5dkLEo6EWfFB5+iuGbx
      5A0mnYajh2FxHdQuvPyMrVgFw8Nw+CCUllluoVmIbQBuAT2VYLC5gWhvJwC+nHmEl25CdboA
      cUvbymBuCCNtMNTRj+eKrBAjbTDQ0kswL3yT80mUxAC0vg0j7ZSqbtbfu4x9+/dxevc7gMDl
      87HqkV9h/uoNo++KjlgaRhlXSPSCFSQLZ2XT3dGOaZqoU9QkZNqR8mII5xrf5aXdwFQgBMKh
      WQJ+uj41n3GXojmcrH3iU7z9vW8RGx6kpHYpeirJ2f07rMXQBz6ML5TJ47/3Jc4f3UdvWzNu
      n5/yxSsJ5U6yQN/wsGUELu0uLyGEdWx/ByQSVjxgFmIbgHGSjkdp3bcVPZnAm5mDBAbOnybS
      1UrRivtw3KI2UKgwi9zqQo6+vBdFUwnlh0kn0zTuOEGkd4i6x9fceBU+eB7XiR9aMYhgESId
      o9LXR/EH6+nPWIVEEM4vxu0LjDmP42JDkHQqBVdkI0opSaWSqA5t7qz+wfoRnjwBXV2Ql3d5
      0u/thaFBWLpspkdoc4sIISiev4RNn/lPHHrrJY6++yqKopJftYAVm5/CG7T8/prTxbwV9zJv
      xb03OeMEcF3c8Seu7rhGIm7Fl2bxYso2AONASkn3yYNI06Tsnodx+izBtVRkmJZ979Jz+jAF
      dbfmNlFUhaVPruXQT3ay+5/fxuFxYqR1VKeDZR++58a6/3oCTr+M4StAW/Kro4FoMdCI69gL
      FBQshMJV19xBBDIy8Hi9NDecYdHyVaiqipSSkaFBujvaKZ9XM7cMQFExlJTCO2/B4iWXg8BH
      j0BBobU9t7njEEJQULWAvIoakrEoiqrgdHun/9n1+a2Mn+NHIS/f8vlLaSUYnDltxQQmMeV4
      srENwDgwUkkiPe3kLqgfnfwBnP4g4bIaes8exUynLrqCxo874GH1pzbSf6Gb4c4BHB4XOZX5
      uIM32U0Mt0K8n1T5I2jaxb6qQkC4CrJqoOsIFK7kWm4Ph8PJgiXLOLz3PfZu20JGVjbpVJLe
      rk4CoQxKq+bNLQOgqrDhAdi3Bw7utzI2VBUqq2DVGitbw+aORVEUPDOpgKsosO5eeP1VePln
      1o7TNKDlAni8UL9iVqeC2k//ODDSKaQpcVyjd6rm9iKliXEbBgCsnUB2RT7ZFbcg3paKWoFn
      x/vGI4QlSBfptPSJrpN+lpWbx6r7HuD8mdP093Shag4qqudTUlGFqs7BR8LphHXrYeUqiMYs
      f+xcrXmwmX4ys+CxJ+HIYejqsH53NfOtwPAsf87m4K998nF4vKgOJ7H+bvw5BZctupTEB7pR
      Ha7p7Q/gywFpIKIdkHlFUMvUrd2BNwfEjf2OgWCIxStWIS8GQYUQc2vlfy2cLusfG5vJJhCw
      dgLSZDQh5A74PdkGYBwoqkZmxXz6Gk/g9AXw5xaChJGuVoZaz5FdvRhlOgM9vjzIqsF14R3w
      hazCNCNlyVCMdMDST4/r4bsrJn0bm+lCiJsuvGYbtgG4AVJKUpFhhtvPk4pFEEKh8+gey9Uj
      wTR1wmU1ZJRNcwMWRYWax+DEj+HI9yx5CiNtHZ//GGTYgc27EakbmF2DyJE4QlMROUFEcAYC
      ozZ3DLYBuA5SSobaztF1fD+KquG46OtHCHzZ+XjC2Xgzc3H6QzPzA3P6SVQ/hTfVZfn8NY+l
      QuoOTf9YbGYcGUuiH2uGRAq8LmTagLY+lNIcuwLZ5rrYBuA6JIYG6Dq+n3BZNTk1dVZLyHSK
      zqN7iPZ2kbdwJepMp3cJYU364cqZHYfNjCINE+NUK0JVUNfMR1zUlTI7BjDPtiN8bkTuXbgw
      ME1oa4P+PisYW1wCfluM70psA3Adhtqa0NwesquXWE3hAdXhJLe2nqatv2Ckq4WMkqqr3hcf
      7GOwpZFUZBjN7SWjpBJvlt0D9a7GNJGJFGiq1RJykp8FORJHjsRRl5YjrtCVUgrCyL5hzI5+
      yx10Nz2D0Qi8uwW6u8Djsap19++F1WuhumamRzdrsA3AdUjHoji9/quCu6rDheZyk45FxhyX
      UjLcfp6u4/vR3F5c/hDp2Ait+7aSXb2YzMraa/4ApSmJ9A0z0j2I0+MiVJiJw317O4t0MkFf
      +wXikWEycvIJ5RaM6qRcia7rjAwNkkom8PoD+PwBu03eFCBNE9nWh2jrRzdMUBWUvAyrN/AN
      +j3cMskUKALxvudGCIHwuDD7hidf/ng2YxiwfRvEY/DIo5ARtiTBjx2DXTshGLSKtmxsA3A9
      nF4fkZ5OTMMYYwSMdBI9mcDhHbuV1BP/t707C47quh88/r29t9TdUrd2JLV2ZARiEyAkVpty
      HJsYx3aSmYwTv8QOk9Q8xJWHVOUpVdkf/1Wp/Kcq45STf8YJKRMbQ4yJPbFZhFksQCCxCqFd
      Aq3d6r373jMPF7WRkQy2Ba3lfKr0oJa6+5xezu/e3zn3/ELcbP2YjOIKcqpXYjCaEEJj7MZV
      hq6dx+7OIe32jpyT4pEYbQeb6W3pQKAHg3SPk5W7NpBT/jn2LBGCW90dHH/rz4zf7EMxGEEI
      SlbUsXHXC9jSP2mrb2yUSy1nCfh9+pmNEOQULOGR2tULtx7AdITQUwRC6BeGzfZRuRBo1wf1
      o++8TIyuNEQ4htY/ighFMS4rnr0C8VYLaAIRjk0JAkIIRCiq37ZYBn+A4SEYHIAdX/lkoLda
      9etAbg3CxTb96t3F9JrMQAaAaQhNxebOZrznOsNXz5NTvSo5B3Dz4hkMJhPO/OIp95kY6AGD
      gezK5RhuX0ylKAbcpUsZ72nH3985JQAIIbhw4DQ3r/Sy8kStfR4AABvUSURBVJmNeLy5xEIR
      2o+0cvr/HmbL7idx3mfedmJsmP/3X7/Dk19Ew/e/g92ZwXDvDU4d2MOxvX9kx3f+F4rBQDgU
      ouXUCdIdDuo2bcVqs+EfH+dq23nazn7M6vrGxZEmiEah5ZxeI0ATkJMDq9eAa/by5GIijNY3
      glK9BM3jwHw7uCoeJ+r5G4hhP0pe5j0e5f4oTjuK047aMYiyvATF9skcgBgLYKwpXhzv66Tx
      cf0Kb7d76u1GI2TnwMBAato1B8kAcAchBOPd7Qxfu4AaiwIweuMyvt4OTLY0YqEARpOZwjWb
      MX6qklQiGsZksaJ86kpaxWDAZEsjEY1Mud03MErfhU7WfmMTS1aU6F/QLCdrv7mFo//7Ha4d
      aWXN8/c3ILcdew+T2cz2F/4n1ttXKzs9OVjt6bz32n8w2HmVgvJH6OloR1EUVq7fiPn2BLY9
      LR2LxcKZE02MDg+RlZP7WU81/4WC8O5BiEXBW6oPCn29sH+fXjMgO+eeD3E/xMgEWM0oWa7b
      FwfplIw0lHQb2sgEhtkKAEYDxmVFJFq7SJy8AmlWfQfSmKqnm7Jds/I880Zamt7/SATSp+x4
      CIGAPicgASATv7cJIRjrvMqtS2dxFZZSvOFRCtduJi0rDzUew2A2k121gpJNT9yVygGwOjOJ
      h4MkIqEpt6vxGNGAD6tz6tGlf3Aco8mIuzhnyiBvspjwlOQy3j9y31sVD/feIKe4PDn4g57/
      9SzxYk1LZ7S/GwDf+Bgutzs5+E/+nyMjA4vFwoRv/L6eb14RAuIxCAZvV25q1vPBX3sGGhqh
      fiN8bRdkZcPxJj0tNFvPO+0O1AoYZn8basVuxbSmAkNVAYrLjiE3E+Oa8sW5BDQ3T1/tc7ZZ
      D/Sgv95dnXqBIDkJnCTPAG5TY1FGrrfhKasme+lKEAL/QBeJ29u8xib8JJzuGb9Mzvwihtvb
      GLxwirzldZhsaajxGEOXzwGQUTR1qabJakZTNdTY1KpGQgji4Rhmq5lpR5BpmG12ouEgQogp
      7VPjcdR4HLNVP+IxmcwkYvG7/k9TNVRVxWS6dynLeSUahfPnoKNDH/Rtdn11SO2qqcsBLRZY
      vgLeOwQTE5Dx5VNBSmY6dA8h/CFw2pK3i2AEEYhgyLejDfvAYtaXac7CfIBiMmJcknXvf1zo
      rFZ976cP/w373tSDeySsbwFeXqlvBLjYguIM5BnAbdGJcdR4DGeBF4DRzisMXjiNLcONI7cQ
      TU3gH+ii78yxaUvRGUxmCtduJhGL0Nn0L24cPciNowcJj4+wZFUDlk9NGnu8OZjtFjo+uoyW
      UPUJOyEY7xvhVns/Bcu9M47/QgjUhIpQNYQQlK5Yx62udgY7riT39tFUlcsnPwBFYUllDQB5
      SwrxjY0yOjyU/D+hafR2doCArNwFlP6Jx+HwB3DtKlRWwroNeq5fVSEUuvsIfHICPBa7+7G+
      AMXtQMlyIq70oQyOo/mCaINj+sVaqobWN4La1oN69ro+JxCM3PtBpftXsASeelrf7jscBqsN
      Nm/Vz/rkirekh34GoKoqfX19ZGRkkDHDkZbf7yc9Pf2hVqVSFAV9KY4gHg4y0t5GduVysipq
      uHX1PNGAjyWrG+g5fZjx7nayKpbd9Rg2VyaljV8hMDRALDiB2ZaGI3fJ3buECvD1j2I0G+k8
      dZXR7ltkVxSQiMYZaOsmc0kWZfXV055tBEb8XDvcyljPEEKBgupiyhvr6L1ynvf/9B+UrKgj
      PcPDre52bnW2s3HX/8Dh1o8K8wuLGL45QMvJ4+QuKcRmT8M3Nsr4yDBLV6zEnnb3bqfzVsd1
      GByEJ5+CyXmNqqX6BOG1K1BTA5O1j4WA/j4wm2fl6B/0z5NxWTFcH0DrHEIVtz75o92CsTwf
      xWFDROJoHYMkWrswralAsciT8lmTkQH1DaluxZxm/NnPfvazh/Vkqqryt7/9jVAoxEcffYTL
      5cLj+aQAeSAQYP/+/ezfv5+1a9dis9mmfRxN0z73uvVEIoHJNHO1K4PZgr+/E01NIDSN4PAg
      +SvW60ssL50hLSuPTG8lUd8oEf/otBeBASgGI1ZnBmmeXGwud3JF0J3amy7Ssu8jMvI9FNR4
      SURi9Ld2MXHTR+WW5dR+bQOmaQaC8b4Rmv7Pv4iFY+RWFmC2Wxlo62bgYg/133gGm9PBwPVL
      DPfcwJbupOGZ71Bauz7ZZ8VgICe/AJPZwujwEP6xMSwWK9UrV5NfWDQncsXxeByzeRZSUWeb
      Ic0OK1dPrQVst+vBIRLR14fHYtB+Dc6dhVVrptYO/pIUgwHhTkfLdWEqyEJx2hCjExhXlmHI
      dOglI+0WlCwnWs+wfp1AxtwPwpqmn3kumLKh6H0CFlSfVFXVD0Q+o08P9XBjaGgIm83GE088
      wdjYGAcPHqSysjL590gkwvr161MyEBlMZnKqV+lbPQzpy8R8vTeYGOwGIciuXK5fWGMwJNMn
      X0Rg2M+l985Q/dgqKjcvx2A0IDSN/rZuzrzRROYSz7SDv6ZqtLx9EleBm/Xf3o7FbiEUCvFI
      VKPpD4doP3KRlbu+wrKGHWhqAqPZMm2QNBiNFJdXUFRWnqz9OxcG/lmnafrmeJ/uW16ePhfQ
      1QndXfrfDQZ9DqB25YPJDZuMGKxW1CEfWC0oadYp6T3FatbPBvyhmR9Dkh6AhxoAhoeHKS7W
      189nZmYSiUSmTEhmZ+tlEJubm6fcT1XVZIQG/Sgx9jlztZqmEQ5PU7fzDmZ3LlnL6vB3XUG7
      nQayZeXhWVZDXChExkcJjt4iPaeQUOiLfVl7zndgtJjIqy0mcsfSUHd5DulZTnpaOnB5757I
      C40GGO8dZvV/20RCJEiEEvqZkNVAwUov/ee7KBtfhun2VgBxdX7mlDVN+8Kv7Z3MWdmYrlwi
      MnQLcceFcMa+XizRCNHGzYACQkPLdOv7uUdm/zWbnNtRVRWDpmJQVcKhEHxq0tcUSyBMBmKz
      0PcHbfIAKLGAit1P9ik+zfzefHU/fZoXCUdFUaYczVosFkyfs5RfOBzGZrPd82g3raSCrOIy
      Bts+ZmKgG0dWLhajgYR/hJGOSxgUAzlVyz93EfhJIqFhtllJdzjuOtK3Oe1ocZW0tLsfOzqi
      DwwuT0by76FQiLS0NNIznYiEhsVswZY2v9c4T/bpS1u+Arq7sB87qhd+dzr1fWFaWqCkFFvV
      0oeyEkRVVRKJBFarFVFgINE3itUXwVCYhaIoeoAYmUCNxDCV52Odjb4/YImEfvBhSfVmiLNo
      cpCclfTjHBGLxVAU5TP79FADQHZ2NsePH2fDhg34/f77GpCBu1IZD/rIQzEYyKtZi9FiZbi9
      DaG2AJDmyaVg/bYvPPgDZBZm0X60jeCIn4yCT+Y/osEIvoExyjdWT3u/9GwXJquZofYBMm8P
      HqBH+aH2AdLcDiz2RbSVw73Y7fD4E/BRk74cEPSLvqofgbr1KVkGqKTbMJTmoV0fRIwFUJx2
      RDiGGPKh5GWieFJY21ZalB5qAMjJySEajXLw4EH6+vp49NFHiUaj7NmzhxdffJH29nba29vp
      6OhAURRKSkpYs2bNw2xiksFoImfpSrLKlxELTmC0WDHb0790vjz/kWIyC7P4eM9RVjy1Dmdu
      BhF/mIv/OoPJYqJk3fTFZcw2M5Wba7h2+AImq5m8pXoaquPCRW5d62f9f9+KYbb2llkonE49
      CASD+sZgTpe+3DOFcx4Gb46+QVvfCNrgGIrZhKGiAEOBB8WwAOdipDlNEV9mRvMLiMfjDAwM
      4HQ6yczUL4UPBAI4nU4ikciUPL3FYiE9/e5VEZMrej6P+00BPQxhX5Cz//iIkc5BDEYjWkLF
      mZfJ6mcbyPyMC3m0hMql98/ReepqMrdstppZ9pW1eNdULIgBZNZSQHOEqqokYnEsRiMYjfp7
      pCgI7fZmdIbbZTnnwOfyfskU0PxwPymghx4AZsN8DwAAakLFNzBKcGQCm9OOuzgbk+XeHz4h
      BMGRCXwDo8QTcfIrC7E67HOmX1/WQgoAQhOoAyP6pnBxDUwGDPluDEXZs7cTaArIADA/zLk5
      AOkTRpMRT3EOnuLPt/mYoig4sl04sl2EQiFsC2SwXGiEEGg3BvXBP9uFwZUGkRha9xAiGMX4
      SGGy0JAkpYoMAJL0IAQiaD3DKFUFaNnOT7aDznKhnu9EZLsWZ5lGaU6RhyCS9ABoI36wmFBy
      pg7ySmY6isOm/12SUkwGAEl6EDQx7aZjye2gtXk39SYtQDIASNIDoGToOX8RmHr1uQhHEYGI
      /ndJSjE5ByBJD4DicaK4HWiX+1C82YhMByIcQ71xE2yWWasGJklfhgwAkvQAKIqCcbkXrvWj
      XR8kcTvjo2Q5MVYVopjlV09KPfkplKQHRDEZUaoKEIVuTJqCYjWBzbJgrtmQ5j8ZACTpQVIU
      sJoxWOU+TdLcIyeBJUmSFikZACRJkhYpGQAkSZIWKRkAJEmSFikZACRJkhYpGQAkSZIWKRkA
      JEmSFikZACRJkhYpGQAkSZIWKRkAJEmSFikZACRJkhYpGQAkSZIWKUUIMe9KE0Uikc+9o6Kq
      qhiNxgfUotSQfZr7hBAIITAsoALwsk/zg6ZpKIrymWPlvAwAk2/WF7nPYnuD55uF2KeFFtRA
      9mm+uFef5uV20F9kgEgkEgALLgAIIRbUh1ZVVRRFWVDvUywWw2w2p7oZs0r2ae4TQqBp2mf2
      aeF8yyRJkqTPRQYASZKkRWpezgF8EZPdXEi5Zdmn+UEIsaD6A7JP88H9fJcWTQCQJEmSppIp
      IEmSpEVKBgBJkqRFal4uA51JJBLh1KlTaJoGwJo1a8jIyKCjo4MLFy6wdOlSHnnkERRF4dat
      W5w8eZK8vDzq6urm7FLKYDBIc3Nzsk/r16/HYrHQ3NxMJBIBYNmyZeTl5TEwMMDp06cpKipi
      zZo1czqf2d7eTltbGy6Xi61bt2I0Grl48SLXrl2jtraW8vJyNE2jubmZwcFBNmzYQF5eXqqb
      PaN4PM6JEycYGRlhxYoVVFZW0tfXx7Vr1wCw2Wxs3LgRTdM4efIko6Oj1NfXk52dneKWT29o
      aIi2trbk73a7nQ0bNhCJRDhy5Agmk4lNmzZhs9lQVZXjx48zMTFBQ0MDbrc7hS2f2eDgIJcv
      X07+7nA4qKur48aNG3R3dwOQkZHBmjVriMfjNDU1EQ6H2bx5M06nM1XN/kxCCK5evcqVK1fI
      yspiw4YNmM1mfD4fTU1NOBwOGhsbMZlMRKNRmpqaiMfjbNmyhbS0tIV1BnDr1i2GhoYoKyuj
      rKwMm83G0NAQH3zwAZs3b+bMmTN0dnYSiUR48803Wb9+PWNjY5w6dSrVTZ9Rb28vfr8/2Sez
      2Yzf76ejoyN5m8PhIBAIsH//furr6+nt7eXcuXOpbvqM2tvbaW5uZuvWrXi9XjRNo6Ojg5aW
      FhobG/n3v//NyMgIp06dYnR0lHXr1vHGG28Qj8dT3fRpCSF46623cDqdbN++HYvFAsCpU6fI
      zc2lrKyM4uJiAI4ePUokEmHVqlXs3bs3eX3KXONwOJKfr8zMTC5evIgQgr1791JWVkZOTg77
      9+9HCMH777+P0Whk+fLl7N27F1VVU938aTmdzmSf0tPTuXLlCgBNTU14vV7KysooKChACMHB
      gwdxOBxUV1fP6T719PRw+vRpNm/ejNls5t133yWRSLB3715qamqwWCy89957CCE4cOAAHo+H
      8vJy9u7di6ZpCysA3Lx5k7KyMgoLC/F6vVitVi5fvkxjYyNZWVls376dixcv0tfXR0VFBfn5
      +Wzbto2rV6+muukzunnzJhUVFRQVFVFSUoLFYsHn85GTk0NhYSElJSWkp6fT1dVFTU0NeXl5
      PP7447S2tqa66TM6d+4cO3bswGKxUFpaitlsprW1le3bt5OTk8OWLVtobW3l+vXrbNq0iYKC
      Ampqarhx40aqmz6tSCRCNBqluroaq9VKcXExQgiCwSDFxcUUFxdTWFgIQGdnJ42NjRQVFVFa
      Wkpvb2+KWz89u91OSUkJJSUl9Pb2smXLFmKxGJqmUVVVRW1tLeFwmFAoRF9fHxs3bqSkpIS8
      vDxu3ryZ6uZPKz09Pdmn7u5utm3bhqZpJBIJioqK8Hq95OfnE4/HGRkZoa6ujvLycpxOJ2Nj
      Y6lu/rQSiQRutxuXy0V+fj6JRILR0VHcbjelpaXU19czODhIMBgkGAyyatUqqqqqMJlMBAKB
      hZUCMhqNtLa2cuHCBVwuFzt37iQQCFBRUQGAy+UiGAzi9/vJysoCSJ7CztUlYGazmY8//piT
      J0/i8Xh46qmnEELQ29vLX//6V4xGI8888ww+ny+ZTrDb7cTj8Tnbp8HBQd555x1sNhsTExN8
      +9vfJhqNkp6eDkBWVhaXL19GVVWsVmvyNp/Pl8pmz2h0dJSuri72799POBzG6/Wyfft2bDYb
      +/fvJxKJUFtby7p16xBCYDLpXzu3283ExESKW//Z/H4/w8PDlJWVEQgESEtLS36mnE4nwWAQ
      s9mcvM3lchEKhVLZ5HsaHx8nGAyyZMkSEokEFouFN954g0gkwsaNGyktLcVutyf75HA4kunW
      ucbr9XLkyBH+8Ic/4Pf7+d73vkcgEMDlcgH6ElCr1UogECA9PT3Zp7S0NGKx2MIKAGvXrmXt
      2rUAfPjhh7S0tGA2m5Opg3g8jsViwWq1JgeTub7uvKGhgYaGBoQQHDp0iMuXL7NixQoqKioQ
      QtDa2sqxY8fIyclJfkjn+n46Ho+H5557DpvNxpkzZzh79ixGozF5mh2NRrHZbAQCgeTcRzQa
      TQaDucZisVBbW8uuXbtQVZXXXnuNxsZGvvGNbwD65+61116jpqYGg8GQ/MxFo1EyMzNT2fR7
      ampqoqGhAaPRiNlsJpFIJA8sJr9Pd4rH43N6OwUhBB988AHbtm3DYDBgsVh44YUXAP1M7s9/
      /jNFRUXJzx3oR9mTQXuuuXTpEl6vl0cffZRbt27x3nvvsXXr1inpUk3TsFgsU9KNk31aUCmg
      np6eZMcNBgNGo5GSkhIuXLgAwMWLFyksLKSgoICrV68ihKCjo2POTsQBdHd3T9nHyGAw0N/f
      nxzsJ/tZWFjIpUuXEEJw+fJlCgoKUtnsz+TxeLh+/TqgfxBtNhtFRUXJPPO5c+coLy/H5XLR
      3d2Npmm0trZSUlKS4pZPz+Px0NfXRyQSSQ6ORqORzs7O5O8GgwFFUbDb7QwODpJIJLh27RpL
      lixJdfNnFIlE6OnpobKyEtADnd/vJxqNMjExwcTEBC6XC0VRGBkZIR6P09XVRU5OTopbPjO/
      38/4+DherxfQg3B/fz9A8n2yWq3EYjHGx8eJxWIMDAzM2UA9Pj6O0+lEUZTkXGBmZiZ9fX3J
      VJYQgoyMjGT2IxqNMjo6qp/NLaQLwc6fP09zczNmsxmbzcauXbswGo288847+Hw+zGYzzz77
      LGazmaampuQg9PWvf52MjIwUt356zc3NnD9/HpPJhMPhYNeuXXR2dnLs2LHkyqXnnnsOu93O
      hx9+SHd3N4qi8PzzzydTKnNNKBTi7bffTg6Ozz//PEII9u3bRyQSweVy8fTTTxMIBHjrrbcQ
      QlBaWsq2bdtS3fRpTa7EOH78OCaTiZqaGtauXcv+/fsZGxtD0zSWL1/O+vXrGR8fZ9++fQBU
      V1fT0NCQ4tbPbPIMuqamBtD7ef36dQ4fPoyiKDz66KOUlZUxPDzMvn37MBgMrFy5krq6uhS3
      fGanT5/G7XYng1o0GuXAgQMEg0ESiQT19fXU1NRw8+ZN/vnPf2IwGFi3bh21tbUpbvn0QqEQ
      Bw4cQFVVIpEIjz32GF6vl5aWFs6ePYumaTz99NPk5ubS3d3N+++/jxCCLVu2sHTp0oUVAIDk
      pM6deUkhBLFYDIvFMuW2eDyunwbN8Z0nNU1DVVVMJtNd7f90P+dLn2Z6Tz592+T7+elUw1yU
      SCSSuy9Otn/y7O3OFMJ86tN0puuTqqr33HlyrhJCJHehvXM5+Hzp03TfeyEEiUQimSGY9On3
      bsEFAEmSJOn+zO3DREmSJOmBkQFAkiRpkZIBQJIkaZGSAUCSJGmRkgFAkiRpkZIBQJIkaZGS
      AUCSJGmRkgFAkiRpkZqbOxxJkjSntLW18e6777Jjxw4qKir4+9//jtlsZuvWrYyPj7N69epU
      N/EuQojkJoJzdWPEVJNnAJIkTSGESP6AviXCb3/7W0pKSigsLOStt97i2rVrrF+/nqGhoWQ1
      rTvvO9Pvn7cN07Xnfu+XSCT4yU9+Mue3p04leQYgSVJSPB5nz549nDhxgpqaGl566SVef/11
      +vv7OXfuHIFAgIMHD+JyuTh27Bj19fXJbbpbWlrYs2cPRqORV155hZ6eHv7yl79gt9v5wQ9+
      gBCCDz/8kNzcXG7evJnchvlOk9XVjh49SlVVFS+//DLvvvsuhw4doqSkhJdffpmenh56enp4
      8sknOXz4MHa7nerqav74xz9iMBjo6uriu9/9Lh0dHZw/f55f//rXrF27lueee+5hv5xznjwD
      kCQp6ciRI5w4cYIf//jH9PX18eabb7Jp0ybcbje7du3iscceo7q6mnXr1vH444/T29vLhQsX
      GBsb41e/+hU7d+7kW9/6Fqqq8otf/IIXX3yR1atX8/vf/57x8XH+9Kc/ceDAgeRunJ/20Ucf
      8fbbb/PDH/6QDRs2cOXKFV5//XVeeeUVTCYTr776Kn19fckt3q9evUpnZyfhcJhDhw5RV1fH
      8uXLkyVfMzIyePbZZ9m4cePDfBnnDRkAJElKunjxIjt27KCsrIydO3fS2tpKYWEhNpuNqqoq
      vF4vHo+HgoICSktLk/fr6uqioKCAxsZGamtrk/vpHzx4kNbWVjo7OwG9stvPf/5z6uvrp33+
      lpYWnnzySSorK6mrq+PKlSts2rSJ8vJydu7c+ZnlW7Ozs9m0aRO1tbXE43Hy8/OxWq1UVVXN
      6boLqSRTQJIkJWVlZdHV1YWqqnR2diZLp96L2+1mdHQUn8+H3W4nLS0Nk8nE448/jtvtTubh
      s7OzcTqdMz5OXl4ely5dIh6Pk0gk8Hg8nDx5kkQiQU9PT7JuRzgcJhqNEgqFZqzlMbm988jI
      COnp6VO2RZZ08gxAkqSkJ554ggsXLrB792727dvHN7/5zWSlrEmT1c3gkypaXq+XhoYGdu/e
      ze7du/H5fDz//PP85je/4Ze//CX/+Mc/pjyOEAJN06b8CCH46le/Sn9/Py+99BI//elPqaur
      IxwOs3v3bv7zP/+TF154gbKyMo4dO8b3v/99jh49mix/eucAbzQaMZlMNDQ08KMf/YhXX331
      4b6Q84SsByBJ0hSapjE8PIzH4/nctXAnS5XabDZAr7ilqippaWlT/i8UCvG73/2OcDicvM3h
      cPDKK69gMBgIBALYbDZMJhNCCIaHh8nIyEgW0QkEAiiKcl9V73w+Hzabbc7WlE4lGQAkSXro
      JitW3Tn8KIoypeqd9ODJACBJkrRIyTkASZKkRUoGAEmSpEXq/wOXPaRR8u5vzgAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      3uLhhx9G1/W0OW+muFwu/H5/elxf+ewmN0OTySTZ2dnEYjGWLl3KU089xdq1aykqKmLRokUZ
      rTgkSWLevHmcPn2a0dFRAoEAbrebvr6+9IZsIBBIb9YnEglKSkqor68nHA5nrFAnV6B9fX20
      tLSkV26tra2YpkljYyOxWAyn05kWpNFolEgkQigUmrKanQkFBQV0d3fj9/s5ffo08+bNIx6P
      093dTWVlJc8++2y675YvX051dTXnzp0jFApx7Ngx6urqMmpbYWEhjY2NDAwMkEwmsdvtd74X
      UFlZGU1NTfT09PDAAw/gdDppa2tL22Cbmpqw2WwMDg6Sn59PdXU1J0+epLe3l82bN6eXYB+E
      JElUVlZy5MgRYrEYW7duRZIkmpubKS8vJxAIMDg4mJ6FVFdXU1xczLFjx7Baraxfvz4j7wCL
      xUJWVhYnTpyguLiYpUuXEo1G0wLlyvISiQQul4tAIMDAwAB9fX3Y7fYpZofr4fV6CQaDnD9/
      nrVr11JYWMjQ0FDanjw+Pp6+t8vlorCwELvdjs1mw2azUVxcPOOyZFlO942iKGzcuDHt5VNU
      VDSlbYFAgMrKSoqLizl+/Dh+v58tW7ZktA9gtVqxWq2cPn2a+fPnU1NTQygUYnR0lKysLPx+
      Pz6fL20aWrFiBV1dXTQ3N5OXl8eKFSsyenYFBQUMDAzQ1NSUHl/9/f2oqoqqqpw6dYr29vb0
      vcvKymhpaaG9vZ0HHnggY6+V8vJy6uvrGRoaYtu2bdhsNi5fvkxxcTFjY2M0NDTQ1dXF6tWr
      KSwsZGxsjKGhIfr6+hgfH6eiomLGQlmWZYqKijh27BgWi4UNGzakn115eTnt7e00Njbi8/nY
      unUrHo8n7Z2jKAplZWUZr4ZLSkpobW2lra2NBx54ALfbTWdnJ263O23z7+jooLKykoULF1Je
      Xk5bWxtNTU2sXr06o8kJQGVlJcePHycQCLBt2zYsFguNjY1UVlYyMDDAuXPn6O7uZtOmTRQU
      FJCVlcWpU6cYGxtj27ZtGe07qKpKTk4Ox48fJycnh1WrVqU9psrLy9N9J8syFRUV2O12HA4H
      J0+eTLc3E4VaVlZGY2Mjvb29bNu2LeVdKE4CCwQCwd3JHW0CEggEAsGNIxSAQCAQ3KUIBSAQ
      CAR3KUIBCAQCwV2KUAACgUBwlyIUgEAgENylCAUgEAgEdylCAQgEAsFdilAAAoFgxoRCoRsK
      6yy4PREKQCD4CDAZDO7Kg/26rqPrevrvWCz2gbF/JoOEvf87yWQyHcTthz/8IQ0NDde8Rzwe
      n1Lm5O9FwIHbkzs6HLRAcLfyzW9+k5qaGvbt28fXv/51vv3tb6NpGuXl5fz5n/85+/fv5xe/
      +AWqqvJ3f/d3/OAHP6C7uxtJkvjWt751VRY30zT5/ve/T0NDA5Ik8Zd/+ZccOnSIXbt2pYOq
      feUrX2HPnj2cOnWKjRs3snLlSurr62lsbOQLX/gCly5dSiel+bM/+zNaW1t59dVX0TSNwsJC
      vv71r/MXf/EX/M3f/A3RaJRvf/vb/NVf/VXG8YEEs4dYAQgEdyAjIyOcOXOGb37zm1RWVvKn
      f/qnfOlLX+Ls2bMMDw/z05/+lL/+67/mO9/5DsPDw1y+fJlvfOMbFBUVTRu22O/3s3v3br75
      zW+yZMkS9u7dy8TEBOvWreO73/0uyWSSsrIyNm/ezO/93u/xta99jWg0yptvvsmXv/xlqqqq
      OHjwIN/5znf48pe/zL/9278xMTHBpk2b+Kd/+qd0+OvKykoOHjzI4cOHWbhwYcYpFAWzi+h9
      geAORJIkfv/3f5+ioiLq6+v5h3/4h3Su4clY8bm5uTgcDiYmJvD5fPzLv/wLhmGkk7pcSTgc
      JhgM8s///M+Mj4+nExJlZWVht9tTseNlGUVRUBQlnXPi0UcfZd26dWiahsvlwuVyUVZWlk5X
      OBk1Ni8vj3g8zpNPPsmbb77J3r17efjhhzPOESyYXYQJSCC4A5EkKW066e7uxuPxpFNpejwe
      srOz+dGPfoTX6+W+++7D4XCwZMmSVBpA9erXvri4mNzcXGpra9N5BaYjLy+PnTt3pu8xWYeC
      ggKi0SgvvfQS58+fZ82aNUAq3aiqqjQ2NvKHf/iHeDweYrEYFoslozDigpuDCActENyBnDx5
      ksWLF+N2u4lEIrz22mvk5+djsVhYt24duq6zb98+TNPkkUceYWhoiCNHjuB2u1m6dCnHjx+f
      sjG7adMm7HY7Bw8exGazsWXLFsbGxpBlmcrKSo4dO8bq1avRNI0333yT/Px8amtrCYVC6cQk
      g4OD7Nmzh4KCArZt28Yrr7zC+fPnWbZsGffeey9lZWVIksTf//3fs2DBAh577LFb1X2CdxEK
      QCC4y5jMLnclRUVFGWdbux6TG8BPPfVU+rPvfe97NDc3861vfSujlIaCm4NQAAKB4KYw6Tp6
      5UbvZB5osfl7eyAUgEAgENylCDUsEAgEdyn/Py4tKP30cJcIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
      NQr0bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='UnitCompositionAndAllegations' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd2BU15Xwf296lWbUu4SEQIAAIdExxhTbGGzsuMTrGsexE3sTO443ZZ3Y
      ibPZjbOpjrP7JV47TmLHvcQNG9N7BwFCIFBHvY1Gml7f98fAgJAQGhUkwvv9A/P03rnnvZl3
      z73nnnOuIIqiiISEhITEFYdstBWQkJCQkBgdJAMgISEhcYUiGQAJCQmJKxTJAEhISEhcoUgG
      QEJCQuIKRTIAEhISElcokgGQkJCQuEKRDICEhITEFYpkACQkJCSuUCQDICEhIXGFIhkACQkJ
      iSuUixqAjo4OduzY0ePY4cOHKSsr6/X/keLIkSPDLtPhcFBSUkJJSQm1tbUEAoEhyauoqOCT
      Tz5h3759nFteKRAI8Morr/CjH/2Ijo4OvF4v//d//8ePfvQjHA4HR48eJRgMDvV2gOG7p1On
      TuFyucKfRVHk5MmTw6KjhITE2OGiBuDdd9/l+eefp7a2NnysurqahoaGXv8fDvbv38/OnTt7
      HNu4ceOwyT9DRUUFf/jDH9i7dy9vv/02Dz/8MFardVCy3n//fX7729+iVCpZv349zzzzTPhv
      GzZswOPx8Mwzz2A2m/nkk0/QaDQ888wz6HQ6tmzZMmTjM9z3dPjwYf785z+HP2/cuJEvvvhi
      WHSUkJAYO8ifffbZZ/s74eWXX+bhhx9m3759FBYWAlBWVoZarSY7O7vH/yHUge/fvx+TyYTB
      YADA7/ezb98+Tpw4gdfrxWw2IwgCpaWlFBcX4/V6iY+Px2q1sm7dOurr61EoFCgUCvR6PfHx
      8cTExACh0emZTjUpKQkAi8WCy+Xi0KFDHD58mMTERDQaDV6vl507d1JZWUlMTAwajSZ8Xy0t
      Lfh8Pr7xjW+wYMECZDIZZWVl5OfnY7Va+eKLL7BYLKSlpSEIArW1tRgMBhoaGmhpaSE2NhYA
      l8vFr3/9a/70pz8xYcIEFi5cyKZNm0hISCAYDPL5558TFxcHgMfjYe3ataSlpeHz+YiPjycu
      Lo74+Pjw3/fu3Ut9fT1JSUnI5XJqamrYuHEjMpksLKeyshKz2UxpaSmiKIaf83DdU25uLi++
      +CLz5s1DrVbz85//nKeeegq1Wt2nHFEUe32X/ekpISExNuh3BlBeXs64ceOYO3cuu3fvvqiw
      t956i02bNmE2m3n66afp6OjA7/fz7W9/m5KSErxeL8888wwej4fDhw+zZcsWAF577TVWr16N
      3W6nubmZlpYWKisr6erqAuD3v/89AMePH+fnP/85JpOJzz77jFdffRWAPXv28M1vfpOamhr8
      fj8/+9nPAPjxj39MfX09NpuN119/vV/dVSoVoijicDj43ve+h9Fo5OjRo/zxj38M6/j222/z
      3HPP0d7eHr6usrKSoqIiFApF+Ni1115LcXExVquV9vZ2mpqaqKyspKmpic7OThoaGqisrCQQ
      CPDCCy8Aoc7/scceo7q6msrKSvbt28fRo0d5/vnnSUxM5K9//Wt4ZvTCCy/wq1/9ivfeew+n
      0zns9ySTyXj00Ud58cUX+fDDD7n++usxGo0XlNPXdxmJnhISEqODor8/rl+/nqVLl6JUKklJ
      SaGmpoasrKwLnr9582b++Mc/IggCfr+f9evXk5aWRkFBAQ899FD4HICCggLy8vJoaGjAYDCw
      YcMGVq5cyfz583G5XKxataqX/HfeeYennnqKzMxMFi9ezMMPP8z9998PwAMPPMD1118PwKZN
      mwDo7u4mPz+f/Px8BEHoJa+srIz33nuP9vZ29uzZw29+8xs2btzIzTffzJIlS1iyZAmPPPJI
      +Pyqqir+53/+B5nsrN3s6urCZDL1kBsdHY3VaiUvL4+CggJyc3OZM2cOACUlJSxcuJApU6b0
      uGbjxo0sXbqUO++8M3zs2Wef5Qc/+AHJycnk5+fz85//nPnz51NXV8eyZcu46aabRuSeAGbN
      msVbb73F6tWreemll8I69iXnQt9lf3pKSEiMPhc0AKIosnHjRsrKynjjjTdobm5m/fr14Y68
      L+rr6/npT38KhEa0s2fPpqOjg8zMzF7n7tq1i9dee405c+YQCAQG5Afv6OggNTUVAEEQ0Ov1
      +P3+Xued6ex/+MMf8sYbb/DCCy+wZMkS7rrrrh7n6XQ6EhISyM3N5cEHH0SlUtHR0RF2YwEo
      lcpwG4888kivjjI+Pp5t27b1ONbc3ExCQsJF7+dcWltbmThxYq/7/dOf/hS+nzNusPT09At2
      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
      QcBut2Oz2TAYLp2743JlRKNRGhoacLlcVxzReYaJiQkaGxtRqVRoNJppeWazed6WzN3d3bS1
      taHT6VCr1XR0dGC1Wqfrzc63DJVKRUdHB729vZjN5nl5IDc+Ps6JEyeIxWIYT9dzGBgYQCKR
      zFvgz/kyXC4XDQ0NyGSyebunrjX6+vrQ6XRIpVIsFgstLS0kJSXNKlwzHzIkEgltbW10dXVh
      MplQKOavJoPNZsPn86E5HY0/32PB+TJGR0c5deoUdrt91ph2Ta8A3G43Pp+Pqqoq9u7dy4ED
      B8jPz6e1tRWfz/fuDVyGjJ6eHgoKCnC5XFgs85OEa2BggLS0NLRaLa2trYiiyIEDB2hvb5+X
      9i8k4+2336aiomK6Tut8yVi0aBGHDh2ira0NuVxORkYGR44cmTcZcrmcZcuWsXfvXiwWC3a7
      HalUSltb21WRMTY2hkKhoLCwkP7+/nlpPxQKsWzZMhobG4lEIrjdbvbs2cPIyMi8tH++jHA4
      zM6dO6mrq7toIZfrnZMnT3LgwAH8fv901bJFixaxb9++qyZDp9NRW1vLrl275k3G2NgYDQ0N
      0/fa1RgLzpfR0tJCSUkJeXl5s469pg2AXq9nwYIFNDU1kZ+fTzAYJCMjg8rKSqxW61WRUVFR
      gVKpxGq1Tq8IrpTCwkJSUlJob28nLy+PI0eOUFdXN68Pgc6XYbVaOX78OB0dHfMmY9myZVgs
      FoxGI3l5eRw7dow9e/ZQUlIybzJkMhn19fXk5ubS39/P4sWLqaqqmjdjfL6MjIwMCgoKOHbs
      2PRs/UpJTk5m165dKBQKZDIZ+/btY+3atfPS9oVk+P1+7HY7e/fuZXx8dj2EDwMLFiygrKwM
      iD+gXb58OadOnSIj472XGZ2LDKlUSiQSYfv27ZSWziU756Uxm82sWrVq+vXVGAvOl+H3+zl6
      9Cijo6Ozjr2mDYAoimzdupWSkhIqKiqmK3YFAoF5W5KdL2NiYoI333yTe++9d96W616vl61b
      t7Jp0yY0Gg0nT56ko6ODnp4e3G73vMswGo1kZmayYcMG3G43odCFi5/MlYMHD+Lz+Vi/fj2n
      Tp3itttu46677prX2UtmZibr1q1jaGgIhUJBIBAgEonMq6/0uTIikQgvvfQSK1asmLetMo1G
      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
    </thumbnail>
  </thumbnails>
</workbook>
