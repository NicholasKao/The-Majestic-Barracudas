<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Custom SQL Query+ (postgres)' inline='true' name='federated.0ndqeix02xiluh10yolbj1htt724' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='codd01.research.northwestern.edu' name='postgres.1rquaw11sljsw2170mnlm0asdt6n'>
            <connection authentication='username-password' class='postgres' dbname='postgres' odbc-native-protocol='' one-time-sql='' port='5432' server='codd01.research.northwestern.edu' username='cpdbstudent' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, sum(allegation_count) as allegation_count
FROM
(SELECT date_part('year', incident_date) as Year, dpu.id as unit_id,
dpu.description,
COUNT(da.crid) as allegation_count
FROM data_allegation da
LEFT JOIN data_officerallegation doa ON da.crid = doa.allegation_id
LEFT JOIN data_officerhistory doh on doa.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
AND da.is_officer_complaint = false
WHERE doh.effective_date << incident_date
  AND (doh.end_date IS NULL or doh.end_date >> incident_date)
  AND dpu.description like '%District 0%'
GROUP BY date_part('year', incident_date), doa.officer_id, dpu.id) q1
  WHERE q1.year >>= 2010
  AND q1.year <<= 2015
GROUP BY year, q1.unit_id
ORDER BY q1.unit_id, year]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
          <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[active]' value='[data_policeunit].[active]' />
          <map key='[allegation_count]' value='[Custom SQL Query].[allegation_count]' />
          <map key='[asian_pacific_count]' value='[Custom SQL Query3].[asian_pacific_count]' />
          <map key='[black_count]' value='[Custom SQL Query3].[black_count]' />
          <map key='[created_at]' value='[data_policeunit].[created_at]' />
          <map key='[description (Custom SQL Query2)]' value='[Custom SQL Query2].[description]' />
          <map key='[description (Custom SQL Query3)]' value='[Custom SQL Query3].[description]' />
          <map key='[description (Custom SQL Query4)]' value='[Custom SQL Query4].[description]' />
          <map key='[description]' value='[data_policeunit].[description]' />
          <map key='[hispanic_count]' value='[Custom SQL Query3].[hispanic_count]' />
          <map key='[id]' value='[data_policeunit].[id]' />
          <map key='[native_count]' value='[Custom SQL Query3].[native_count]' />
          <map key='[officer_count (Custom SQL Query2)]' value='[Custom SQL Query2].[officer_count]' />
          <map key='[officer_count (Custom SQL Query3)]' value='[Custom SQL Query3].[officer_count]' />
          <map key='[officer_count]' value='[Custom SQL Query1].[officer_count]' />
          <map key='[race_entropy]' value='[Custom SQL Query3].[race_entropy]' />
          <map key='[serivce_years]' value='[Custom SQL Query4].[serivce_years]' />
          <map key='[tags]' value='[data_policeunit].[tags]' />
          <map key='[unit_females]' value='[Custom SQL Query2].[unit_females]' />
          <map key='[unit_gender_entropy]' value='[Custom SQL Query2].[unit_gender_entropy]' />
          <map key='[unit_id (Custom SQL Query1)]' value='[Custom SQL Query1].[unit_id]' />
          <map key='[unit_id (Custom SQL Query2)]' value='[Custom SQL Query2].[unit_id]' />
          <map key='[unit_id (Custom SQL Query3)]' value='[Custom SQL Query3].[unit_id]' />
          <map key='[unit_id (Custom SQL Query4)]' value='[Custom SQL Query4].[unit_id]' />
          <map key='[unit_id]' value='[Custom SQL Query].[unit_id]' />
          <map key='[unit_males]' value='[Custom SQL Query2].[unit_males]' />
          <map key='[unit_name]' value='[data_policeunit].[unit_name]' />
          <map key='[updated_at]' value='[data_policeunit].[updated_at]' />
          <map key='[white_count]' value='[Custom SQL Query3].[white_count]' />
          <map key='[year (Custom SQL Query1)]' value='[Custom SQL Query1].[year]' />
          <map key='[year (Custom SQL Query2)]' value='[Custom SQL Query2].[year]' />
          <map key='[year (Custom SQL Query3)]' value='[Custom SQL Query3].[year]' />
          <map key='[year (Custom SQL Query4)]' value='[Custom SQL Query4].[year]' />
          <map key='[year]' value='[Custom SQL Query].[year]' />
          <map key='[years_in_unit]' value='[Custom SQL Query4].[years_in_unit]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>allegation_count</remote-name>
            <remote-type>131</remote-type>
            <local-name>[allegation_count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>allegation_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_963F61354B5244539A906926BDC30BA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_males]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_males</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_females]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_females</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_gender_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_gender_entropy]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_gender_entropy</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_4539CF261AD64A1BB33BFD18C5A6FBDC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_A48CBA8714214813A68592CFEE880792]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serivce_years</remote-name>
            <remote-type>131</remote-type>
            <local-name>[serivce_years]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>serivce_years</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years_in_unit</remote-name>
            <remote-type>131</remote-type>
            <local-name>[years_in_unit]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>years_in_unit</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_C13C793BA40A4260993EEA151D4C4E8B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>white_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[white_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>white_count</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>black_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[black_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>black_count</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>asian_pacific_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[asian_pacific_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>asian_pacific_count</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>native_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[native_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>native_count</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hispanic_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hispanic_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>hispanic_count</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[race_entropy]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>race_entropy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_FA2304309C354BC0B3BDC3A5AA18B99C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit_name]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>unit_name</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>11</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>38</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>39</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[updated_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>updated_at</remote-alias>
            <ordinal>40</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='gender_entropy' datatype='table' name='[__tableau_internal_object_id__].[_4539CF261AD64A1BB33BFD18C5A6FBDC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='allegations_per_unit_per_year' datatype='table' name='[__tableau_internal_object_id__].[_963F61354B5244539A906926BDC30BA3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='approx_unit_sizes_by_year' datatype='table' name='[__tableau_internal_object_id__].[_A48CBA8714214813A68592CFEE880792]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_metrics' datatype='table' name='[__tableau_internal_object_id__].[_C13C793BA40A4260993EEA151D4C4E8B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='race_entropy_table' datatype='table' name='[__tableau_internal_object_id__].[_FA2304309C354BC0B3BDC3A5AA18B99C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data_policeunit' datatype='table' name='[__tableau_internal_object_id__].[data_policeunit_9EC03FD39C2F4896887253843F9E4A83]' role='measure' type='quantitative' />
      <column caption='Active' datatype='boolean' name='[active]' role='dimension' type='nominal' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
      <column caption='Unit Name' datatype='string' name='[unit_name]' role='dimension' type='nominal' />
      <column caption='Updated At' datatype='datetime' name='[updated_at]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[year]' role='measure' type='quantitative' />
      <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[none:year:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>2014</bucket>
            </map>
            <map to='asterisk'>
              <bucket>4029</bucket>
            </map>
            <map to='circle'>
              <bucket>2010</bucket>
            </map>
            <map to='circle'>
              <bucket>4025</bucket>
            </map>
            <map to='diamond'>
              <bucket>2015</bucket>
            </map>
            <map to='diamond'>
              <bucket>4030</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>4022</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>6040</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>4023</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>8052</bucket>
            </map>
            <map to='plus'>
              <bucket>2012</bucket>
            </map>
            <map to='plus'>
              <bucket>4027</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>4024</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>100568</bucket>
            </map>
            <map to='square'>
              <bucket>2011</bucket>
            </map>
            <map to='square'>
              <bucket>4026</bucket>
            </map>
            <map to='times'>
              <bucket>2013</bucket>
            </map>
            <map to='times'>
              <bucket>4028</bucket>
            </map>
            <map to='triangle'>
              <bucket>4021</bucket>
            </map>
            <map to='triangle'>
              <bucket>6039</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:description:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Bureau Of Internal Affairs&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;District 009&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Forensic Services Unit - Et North&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gang Section - Area 4&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Special Functions Division&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Airport Law Enforcement Section - North&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Det Div Admin.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 021&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Office Of The First Deputy Superintendent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arson Section&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Detective Area - North&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 025&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Public Transportation Section&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bureau Of Support Services&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;District 013&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gang Enforcement - Area North&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inspection Division&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Targeted Response Unit&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bureau Of Organized Crime&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District 010&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Forensic Services Unit - Et South&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gang Section - Area 5&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Special Functions Support Unit&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asset Forfeiture Investigation Section&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Detective Area - South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;District 006&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gang Enforcement - Area South&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Recruit Training Section&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Crime Control Strategies Section&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;District 019&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Forensic Services Division&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Narcotics Division&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Violent Crimes Dda 1&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Airport Law Enforcement Section - South&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Detached Services - Goverment Security&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 022&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Office Of The Superintendent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Communication Operations Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;District 017&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Executive Officers Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marine Operations Unit&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Transit Security Unit&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bomb Squad&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Detective Section - Area 4&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District 007&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gang Enforcement Division&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Research And Development Division&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canine Unit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District 014&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District Reinstatement Unit&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Intelligence Section&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Technology And Records Group&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central Detention Unit&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;District 015&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Education And Training Division&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Juvenile Intervention Support Center (Jisc)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Traffic Enforcement&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Court Section&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;District 018&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Field Services Section&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mounted Unit&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vice &amp; Asset Forfeiture Division&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deployment Operations Center&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;District 020&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Forensic Services Evidence Technician Section&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oemc - Detail Section&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Youth Investigation Division&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bureau Of Patrol&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;District 011&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Freedom Of Information Section&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Human Resources Division&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Special Investigations Unit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bureau Of  Detectives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detective Section - Area 5&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District 008&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gang Investigation Division&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Special Activities Section&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alternate Response Section&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Detached Services - Miscellaneous Detail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 023&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Police Documents Section&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Central Investigations Division&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;District 016&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Evidence And Recovered Property Section&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Major Accident Investigation Unit&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Traffic Section&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bureau Of Professional Standards&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District 012&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gang Enforcement - Area Central&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Information Services Division&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Special Weapons And Tactics (Swat) Unit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Area 1 Pat Narc Prog&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detective Area - Central&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 024&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Prop Crimes Dd Area1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='gender_entropy' id='_4539CF261AD64A1BB33BFD18C5A6FBDC'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
            </properties>
          </object>
          <object caption='allegations_per_unit_per_year' id='_963F61354B5244539A906926BDC30BA3'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, sum(allegation_count) as allegation_count
FROM
(SELECT date_part('year', incident_date) as Year, dpu.id as unit_id,
dpu.description,
COUNT(da.crid) as allegation_count
FROM data_allegation da
LEFT JOIN data_officerallegation doa ON da.crid = doa.allegation_id
LEFT JOIN data_officerhistory doh on doa.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
AND da.is_officer_complaint = false
WHERE doh.effective_date << incident_date
  AND (doh.end_date IS NULL or doh.end_date >> incident_date)
  AND dpu.description like '%District 0%'
GROUP BY date_part('year', incident_date), doa.officer_id, dpu.id) q1
  WHERE q1.year >>= 2010
  AND q1.year <<= 2015
GROUP BY year, q1.unit_id
ORDER BY q1.unit_id, year]]></relation>
            </properties>
          </object>
          <object caption='approx_unit_sizes_by_year' id='_A48CBA8714214813A68592CFEE880792'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
            </properties>
          </object>
          <object caption='time_metrics' id='_C13C793BA40A4260993EEA151D4C4E8B'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
            </properties>
          </object>
          <object caption='race_entropy_table' id='_FA2304309C354BC0B3BDC3A5AA18B99C'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
            </properties>
          </object>
          <object caption='data_policeunit' id='data_policeunit_9EC03FD39C2F4896887253843F9E4A83'>
            <properties context=''>
              <relation connection='postgres.1rquaw11sljsw2170mnlm0asdt6n' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query2)]' />
              </expression>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query2)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_4539CF261AD64A1BB33BFD18C5A6FBDC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query1)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query1)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_A48CBA8714214813A68592CFEE880792' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query4)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query4)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_C13C793BA40A4260993EEA151D4C4E8B' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query3)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query3)]' />
              </expression>
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='_FA2304309C354BC0B3BDC3A5AA18B99C' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[unit_id]' />
              <expression op='[id]' />
            </expression>
            <first-end-point object-id='_963F61354B5244539A906926BDC30BA3' />
            <second-end-point object-id='data_policeunit_9EC03FD39C2F4896887253843F9E4A83' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236024680450]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236024680450]' derivation='None' name='[none:Calculation_1294081236024680450:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[officer_count]' derivation='None' name='[none:officer_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]'>
            <groupfilter expression='CONTAINS(LOWER([description]), LOWER(&apos;District 0&apos;))' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='District 0' user:ui-pattern_type='contains'>
              <groupfilter function='level-members' level='[none:description:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024680450:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:officer_count:qk]</cols>
      </table>
      <simple-id uuid='{E7E43837-57B3-449B-A70C-B64773BF18A5}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegation Per Officer By Unit Gender Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236032729092]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236032729092]' derivation='None' name='[none:Calculation_1294081236032729092:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[unit_gender_entropy]' derivation='None' name='[none:unit_gender_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[unit_gender_entropy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236032729092:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:unit_gender_entropy:qk]</cols>
      </table>
      <simple-id uuid='{4506DCEA-AB86-4D79-97A7-5B4424FCBCAC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Unit Race Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236041748485]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236041748485]' derivation='None' name='[none:Calculation_1294081236041748485:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[race_entropy]' derivation='None' name='[none:race_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[race_entropy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236041748485:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:race_entropy:qk]</cols>
      </table>
      <simple-id uuid='{A268F188-D5B6-4779-B1C7-4BF1F6AC0180}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Average Service Years of Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236049309702]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236049309702]' derivation='None' name='[none:Calculation_1294081236049309702:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[serivce_years]' derivation='None' name='[none:serivce_years:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[serivce_years]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
              <tooltip column='[federated.0ndqeix02xiluh10yolbj1htt724].[attr:year:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236049309702:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:serivce_years:qk]</cols>
      </table>
      <simple-id uuid='{C5C99F19-767A-477D-965A-5B1883B685AA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Allegations Per Officer By Average Years in Specified Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.0ndqeix02xiluh10yolbj1htt724' />
          </datasources>
          <datasource-dependencies datasource='federated.0ndqeix02xiluh10yolbj1htt724'>
            <column caption='[allegation_count]/[officer_count]' datatype='real' name='[Calculation_1294081236056621065]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[allegation_count]/[officer_count]' />
            </column>
            <column datatype='real' name='[allegation_count]' role='measure' type='quantitative' />
            <column caption='Description' datatype='string' name='[description]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1294081236056621065]' derivation='None' name='[none:Calculation_1294081236056621065:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description]' derivation='None' name='[none:description:nk]' pivot='key' type='nominal' />
            <column-instance column='[years_in_unit]' derivation='None' name='[none:years_in_unit:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[years_in_unit]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236056621065:qk]</rows>
        <cols>[federated.0ndqeix02xiluh10yolbj1htt724].[none:years_in_unit:qk]</cols>
      </table>
      <simple-id uuid='{B708DB93-59CA-4E8F-A4FC-08C3A057C7CA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='UnitCompositionAndAllegations'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='32250' id='3' name='Sheet 1' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33875' id='9' name='Sheet 2' w='49200' x='800' y='65125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='15' name='Sheet 5' w='49200' x='50000' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33875' id='16' name='Sheet 3' w='49200' x='50000' y='65125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='17' name='Sheet 4' w='49200' x='800' y='33250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='146' h='65750' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12200' x='92500' y='125'>
          <zone h='65750' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type-v2='color' w='12200' x='92500' y='125'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='25' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='24' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='250' h='32250' id='3' is-fixed='true' name='Sheet 1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='65750' id='8' name='Sheet 1' pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type-v2='color' w='12200' x='92500' y='125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='17' is-fixed='true' name='Sheet 4' w='49200' x='800' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='15' is-fixed='true' name='Sheet 5' w='49200' x='50000' y='33250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33875' id='9' is-fixed='true' name='Sheet 2' w='49200' x='800' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='33875' id='16' is-fixed='true' name='Sheet 3' w='49200' x='50000' y='65125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E7A5D069-DB21-4D68-93C3-EA73B292A3D2}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='UnitCompositionAndAllegations'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:years_in_unit:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236056621065:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236056621065:qk]</field>
                    <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
                    <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:years_in_unit:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>0.25943970767356883</value>
                  <value>&quot;District 008&quot;</value>
                  <value>16.749086479902559</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{A969535A-030C-4D5E-8F21-2B55B81DEB4B}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236023721984:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024651777:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236024680450:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAF5ECE4-0F0F-4D28-B2B7-689A9A3091CC}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A5EA4BA0-A9BB-489B-91E3-84C32936D20C}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236041748485:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D153A33-B296-4160-892F-B985DA795A5A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:Calculation_1294081236049309702:qk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D0B3E6E-1FBE-4631-8F4F-ABBC81CAD756}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ndqeix02xiluh10yolbj1htt724].[none:description:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4C2789E-B681-42C4-9C7F-561D3D244DB1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      gEQikaxR/j9CEFLxoBX8lAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      3uLhhx9G1/W0OW+muFwu/H5/elxf+ewmN0OTySTZ2dnEYjGWLl3KU089xdq1aykqKmLRokUZ
      rTgkSWLevHmcPn2a0dFRAoEAbrebvr6+9IZsIBBIb9YnEglKSkqor68nHA5nrFAnV6B9fX20
      tLSkV26tra2YpkljYyOxWAyn05kWpNFolEgkQigUmrKanQkFBQV0d3fj9/s5ffo08+bNIx6P
      093dTWVlJc8++2y675YvX051dTXnzp0jFApx7Ngx6urqMmpbYWEhjY2NDAwMkEwmsdvtd74X
      UFlZGU1NTfT09PDAAw/gdDppa2tL22Cbmpqw2WwMDg6Sn59PdXU1J0+epLe3l82bN6eXYB+E
      JElUVlZy5MgRYrEYW7duRZIkmpubKS8vJxAIMDg4mJ6FVFdXU1xczLFjx7Baraxfvz4j7wCL
      xUJWVhYnTpyguLiYpUuXEo1G0wLlyvISiQQul4tAIMDAwAB9fX3Y7fYpZofr4fV6CQaDnD9/
      nrVr11JYWMjQ0FDanjw+Pp6+t8vlorCwELvdjs1mw2azUVxcPOOyZFlO942iKGzcuDHt5VNU
      VDSlbYFAgMrKSoqLizl+/Dh+v58tW7ZktA9gtVqxWq2cPn2a+fPnU1NTQygUYnR0lKysLPx+
      Pz6fL20aWrFiBV1dXTQ3N5OXl8eKFSsyenYFBQUMDAzQ1NSUHl/9/f2oqoqqqpw6dYr29vb0
      vcvKymhpaaG9vZ0HHnggY6+V8vJy6uvrGRoaYtu2bdhsNi5fvkxxcTFjY2M0NDTQ1dXF6tWr
      KSwsZGxsjKGhIfr6+hgfH6eiomLGQlmWZYqKijh27BgWi4UNGzakn115eTnt7e00Njbi8/nY
      unUrHo8n7Z2jKAplZWUZr4ZLSkpobW2lra2NBx54ALfbTWdnJ263O23z7+jooLKykoULF1Je
      Xk5bWxtNTU2sXr06o8kJQGVlJcePHycQCLBt2zYsFguNjY1UVlYyMDDAuXPn6O7uZtOmTRQU
      FJCVlcWpU6cYGxtj27ZtGe07qKpKTk4Ox48fJycnh1WrVqU9psrLy9N9J8syFRUV2O12HA4H
      J0+eTLc3E4VaVlZGY2Mjvb29bNu2LeVdKE4CCwQCwd3JHW0CEggEAsGNIxSAQCAQ3KUIBSAQ
      CAR3KUIBCAQCwV2KUAACgUBwlyIUgEAgENylCAUgEAgEdylCAQgEAsFdilAAAoFgxoRCoRsK
      6yy4PREKQCD4CDAZDO7Kg/26rqPrevrvWCz2gbF/JoOEvf87yWQyHcTthz/8IQ0NDde8Rzwe
      n1Lm5O9FwIHbkzs6HLRAcLfyzW9+k5qaGvbt28fXv/51vv3tb6NpGuXl5fz5n/85+/fv5xe/
      +AWqqvJ3f/d3/OAHP6C7uxtJkvjWt751VRY30zT5/ve/T0NDA5Ik8Zd/+ZccOnSIXbt2pYOq
      feUrX2HPnj2cOnWKjRs3snLlSurr62lsbOQLX/gCly5dSiel+bM/+zNaW1t59dVX0TSNwsJC
      vv71r/MXf/EX/M3f/A3RaJRvf/vb/NVf/VXG8YEEs4dYAQgEdyAjIyOcOXOGb37zm1RWVvKn
      f/qnfOlLX+Ls2bMMDw/z05/+lL/+67/mO9/5DsPDw1y+fJlvfOMbFBUVTRu22O/3s3v3br75
      zW+yZMkS9u7dy8TEBOvWreO73/0uyWSSsrIyNm/ezO/93u/xta99jWg0yptvvsmXv/xlqqqq
      OHjwIN/5znf48pe/zL/9278xMTHBpk2b+Kd/+qd0+OvKykoOHjzI4cOHWbhwYcYpFAWzi+h9
      geAORJIkfv/3f5+ioiLq6+v5h3/4h3Su4clY8bm5uTgcDiYmJvD5fPzLv/wLhmGkk7pcSTgc
      JhgM8s///M+Mj4+nExJlZWVht9tTseNlGUVRUBQlnXPi0UcfZd26dWiahsvlwuVyUVZWlk5X
      OBk1Ni8vj3g8zpNPPsmbb77J3r17efjhhzPOESyYXYQJSCC4A5EkKW066e7uxuPxpFNpejwe
      srOz+dGPfoTX6+W+++7D4XCwZMmSVBpA9erXvri4mNzcXGpra9N5BaYjLy+PnTt3pu8xWYeC
      ggKi0SgvvfQS58+fZ82aNUAq3aiqqjQ2NvKHf/iHeDweYrEYFoslozDigpuDCActENyBnDx5
      ksWLF+N2u4lEIrz22mvk5+djsVhYt24duq6zb98+TNPkkUceYWhoiCNHjuB2u1m6dCnHjx+f
      sjG7adMm7HY7Bw8exGazsWXLFsbGxpBlmcrKSo4dO8bq1avRNI0333yT/Px8amtrCYVC6cQk
      g4OD7Nmzh4KCArZt28Yrr7zC+fPnWbZsGffeey9lZWVIksTf//3fs2DBAh577LFb1X2CdxEK
      QCC4y5jMLnclRUVFGWdbux6TG8BPPfVU+rPvfe97NDc3861vfSujlIaCm4NQAAKB4KYw6Tp6
      5UbvZB5osfl7eyAUgEAgENylCDUsEAgEdyn/Py4tKP30cJcIAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
      NQr0bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='UnitCompositionAndAllegations' width='384'>
      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
      //d//xfRO+gfJ83n8w3QcVmW8Xg8aLVatm/fzokTJxQDoHBheDweXC4XiYmJSmOuoPAlMVx6
      pxgABQUFhTGKsgagoKCgMEZRDICCgoLCGEUxAAoKCgpjFMUAKCgoKIxRFAOgoKCgMEZRDICC
      goLCGEUxAAoKCgpjFMUAKCgoKIxRFAOgoKCgMEZRDICCgoLCGEUxAAoKCgpjFMUAKCgoKIxR
      hmQAfD5fJMb7qX8rQG9vL83NzZHPPT09tLa2XkSJLn2UvAFfDopeR4fH46GhoYFgMAhAX18f
      DQ0NSJJ0kSU7f85pALZu3co999wTySADsHr1arZt2zbg7+HAZrPR3d3d77vHHnvsgq5ZW1vL
      Qw89xCOPPMKPfvQj1q1bN+RrHTx4kAceeIAHHniAH/7wh3R1dUV+W7NmDY8//jhr1qwB4N13
      3+XJJ59k48aNOBwO/uu//uuC7uNUTr2n73//+7z44osEAoFznufz+XjhhRf6fffiiy/2e76D
      lfWXv/wFCOcLqK+vH/Q4WZZZsWIFDz74IPfffz+//OUvBzzLofCjH/1oSOedWkcn/9lstjMe
      f7Z7u9y4HPR6MIZT17u6uvjhD38Y0feDBw9Gfquvr+f+++/n/fffx+l0UllZyfe+9z3ef/99
      vF4vjz/++LAZ0BHVdfkc/Pu//7v8P//zP/KmTZsi361YsULesGHDgL+Hg3Xr1snvv/9+v+/a
      29sv6Jr79u2Tn3vuOVmWZdlms8mPPvqo/Nlnn0V9HafTKd91111yS0uLLMuy/Nlnn8kPPvhg
      5Pfvf//7ssPhiHx+4IEH5EAgIMuyLEuSJHd0dFzIbfRj37598p/+9CdZlmXZ4/HIzz//vPz6
      66+f87y+vj75X//1X/t996//+q9yX1/fGc/x+/1yd3e3LMuy3N3dLT/++OODHvf666/LTzzx
      hOz1emVZluUjR47ITU1N53U/Z+PUOo6GU+vofDjbvV1uXA56PRjDpeuyHNbfsrIyWZZlubm5
      Wb7rrrtkl8sly3L4Xd+8eXPk2BdeeEEuLy+PfO7o6JAlSRriXfRnJHVdfTYL4na78Xg8fO1r
      X+O5557jqquuOqvFaW5u5ne/+x2iKJKVlcWDDz6IIAh88sknvPvuu+h0OiRJ4sknn6S1tZU/
      /vGPSJKESqXi3/7t3+js7OSVV15BkiR27NjBsmXLWLBgAW+99RYPPPAAPp+P3/72t7S0tKDT
      6Xj44YfJysqirKyMXbt2UVdXR19fH1/5yle4+eabB5XRYrFw6623cuTIEaZOncpTTz2FzWbD
      aDTy6KOPEhsby/Lly7n66qv5y1/+Qm5uLv/4j/8IwMaNG7nllltIS0sDYM6cObzzzju0tLSw
      Zs0aDhw4wM9//nPi4+Mxm81UV1fz4x//mOTkZB5++GHefPNNHnjgASDcw1q3bh2yLHPPPfdQ
      VFQ0qCzPPfcc119/PX/4wx+48847mTt37oB70uv15Ofn09jYyM6dO7HZbNx4440ArF27FqvV
      yqxZs8767CDcS/vzn/+Mw+HA5XKRnp7OY489Rm9vLxs3buTmm2/mP//zPzl+/DiPPfYYEydO
      5Jvf/Gbk/FWrVvHiiy+i0+kAmDBhQuS3srIyli9fjkaj4brrruP6668/43OTZZlXX32V3bt3
      o1Kp6O3tBcDr9Q65jk5lsHKvueaaAfd20003sXr1atLS0nj99df59a9/TU1NDS+88AI6nY4Z
      M2ZE3o1f/epXOJ1OHA4HaWlpPProo7z22mssWLCAgoICAJ599lnuvvtuYmNjz/ksRpJLXa8/
      +eQT3nvvPQRBYNasWXzjG98YVO5TdX3OnDksX76cPXv2IIoi3/3udykqKjqjrjc1NWE0Gpk9
      ezYA6enpLFu2jE2bNmE2m1m5ciVms5k1a9YwadIk1q5dy549e3jnnXf48Y9/zBtvvMGDDz4I
      jJyud3d3s3z5ch5++GEA6urq2LlzJ3fdddc534GTun5WA7Bt2zYWLlxIeno6XV1deL1e9Hr9
      GY9/+umneeSRR8jMzOTZZ59l586dZGdn8+abb/LUU09hNBr5wQ9+gCRJxMfH89Of/hSTycTu
      3bt57bXXeOSRR/jGN76Bx+Pp14BXV1cD8Oabb1JUVMR//Md/0NjYyK9//WueffZZenp6CIVC
      /Pd//zcADz300BkNgN/vZ926dSxdupQ33niDmTNncsMNN7Bz505efvllHnzwQRoaGnjiiSf4
      53/+Z0pLSyPnNjU1sWDBgn7XKyoqoqmpiXvuuYeDBw/yy1/+MpKDs7q6ml/96ldAOA3isWPH
      It9v2LAhIq/T6TyjLLt376aqqop///d/JyPNJWLjAAAgAElEQVQjo1/ZFRUV/PnPf46sOTz6
      6KOIosh9993HDTfcgCAIrFy5kt/85jdne8wRAoEAdXV1/OY3vyE2NpZHHnkEt9uN1+ulsbER
      o9HI448/zu9//3t+9rOf9TvX4/FgMpnQ6/X09vbyzjvvALB06VKSkpL461//yu9//3s0Gg0P
      PfQQ8+bNO+Nz27RpU6TREQQhokhDraMXX3wx8vmee+45Y7mn31tHRwfvvvsuU6dO5emnn0al
      UvHHP/6RP/zhD8TExPDkk09SXl5OaWkpNTU1PPXUU8TFxfHSSy/x0UcfMWnSJN58801+9KMf
      4XK5OHz48EVv/OHS1+tXXnmF5557Dq1WS2Nj4xnlPlXXDx48SGNjI08//TQ2m43HH3+cZ599
      9qy6XlRU1O96RUVFlJWVcd9999HU1ERhYSFz5swBwOVyccUVVzBx4kSAL0XXT3Yy29raSE1N
      5aOPPup3D2fjpK6f1QBs2LCBq6++mvLyclJSUtixYwdLliw54/HNzc1UVFRQUVGBLMscPnwY
      m83GTTfdhNFoBIikL9PpdLzyyis0NTXh8/kivcazsW/fvsg8enZ2NqIoRnLTTpgwIdLwnp6D
      FmDdunVUVVUhCAJXXnkl8+fP5+233+aKK67gww8/RJZljhw5Ejn+u9/9LjNmzOh3DY1GM2Du
      LRAIDFre2SgvL+e2226LnJeQkMD+/fsHlUWWZX7+858TFxc34DqZmZnMnz+f7u5u1qxZw/79
      +1m4cCFTpkxh165dpKenk5SUhMlkOm/ZcnJyIo2UyWSKLHCdC1EUI8caDAbmzZvHunXraGho
      oK+vD51Ox/r164Hws6+pqQEGf25bt27lO9/5TiRh/cn/h1pH8+bNi3w++f6d6305SXJyMj/+
      8Y8RRZHKykpmzJgRqc9ly5axa9cuSktLiYmJiZS/dOlSXnvtNW655Rb++Mc/4nQ62bRpE9dd
      d9151eVIc6nrdWlpKY8++iiLFi3i2muvHXC9wXT9lVdewWAwsGrVKgA6OzsjZVzKuv61r32N
      9957j+9+97vs27eP+++//7xly8nJObMB6Ovro729nZ6eHnp6esjNzWXDhg1nfVG0Wi3p6elA
      eMiUmprK0aNH6ejoGHDs888/z+TJk7n33nux2+08/fTT5xRYq9Xi8XgiL1UgEIg0Dudi6dKl
      AypHo9GQmJhITEwMEO5hnCQ7O3vANXJzc6moqOhnZffv38/f//3fn5cMJ9Hr9Xg8nvOSxWKx
      DPpCACQlJTF58mQAJk6cyK9+9SsWLlzIHXfcwTPPPENhYSE33XTTgLJP96pxuVzo9XpcLldU
      93EqOp2OQCBAT08PCQkJTJw4MbJoptFo0Ol0kXfjrrvuoqCggPb29kGvdVLhT2eodXSyVzYU
      srKyIu+YTqfD7XZHfnO73Wi12gHndHd3ExcXhyAI3HLLLaxatYqysjKefPLJIcsxXFwOev3t
      b3+bnp4ePvvsMx566CH++te/9suLeyZdN5vNkfv4wQ9+EDlnMF3PyckZsIBaUVERmc47X0Za
      1xctWsTLL7/MzJkzmTlzZr96Ox9dP2Mtb9u2jRtvvJG77rqLu+66i3vuuYeOjg68Xu8Zb7ag
      oICGhgaysrLweDzU1tYyb948Vq9ezauvvsoLL7zAvn37gPCLaDab6enp4eWXX45cIzk5md27
      d9PT0xOZ+z3J1VdfzbPPPovdbmft2rUkJSVdUELkxYsXs3XrVjIyMtDr9Rw6dOisxy9atIht
      27axdetW7HY7L730EqmpqSQkJERV7qJFi3j99deprq6mqqqKqqqqqGWBsJfC0aNH2bt3L889
      9xzTpk0Dwo2WJEns3LlzwNy/KIrEx8fzwQcfYLPZ+OCDD4iPjz9vQ2o2m6mrq6OtrY3Ozs5+
      v33rW9/i0UcfpbKykoaGBo4fPw6EDWd3dzeSJJGRkUFDQ8OAZ3sqc+fO5c9//jNdXV1s3boV
      h8MBRP+8INzTO3LkSOTf2bwnznZvEG4UqqurOXDgAJ2dnbz88sssXrwYCE+BNTc3U1NTw3PP
      PcfSpUsBuO6661i1ahUWiyWi8BeTy0GvX3nlFfx+P6WlpYiiiHweac3nz59PWVkZ8fHxJCYm
      snfv3rO+84mJiSQnJ/O///u/2O12PvnkEz799FOuuOKKc5Z1KiOt6yqVimuuuYZf/OIXLFu2
      rN8556PrqieeeOKJwQpsbW1l7ty5kSHeyUoxGAyYTCYSExOJj4+PfB8fH8+8efM4ePAgmzdv
      RhAEFi9ejMlk4tprr8XtdlNcXMyJEydYunQpU6ZM4f3336e8vJwlS5aQnp5Obm4uKSkpkWFO
      WloaKSkpABQWFjJu3Dg8Hg9vvPEGwWCQ733ve5HeYkJCQqQhFgShn6UWBAGTyTRgXq2wsJBg
      MMjq1avp6OjgqquuiljgnJycAcM9tVrN4sWLWbduXUS+++67D5VK1a/cky/vYHIUFBQQExPD
      5MmTWbVqFbW1tUybNo0ZM2acUZbBeh2CINDU1ERDQwNdXV3MmTOHG2+8MVJ2KBTCbDYPOid4
      Uhk+/vhjNBoNDzzwQKQnq9VqycnJiZSRl5eHSqVCr9eTnZ2NSqUiLS2Nd999l1Ao1G+eNC8v
      j9zcXNauXcu+ffuYOHEiixcvRqvVsmDBAjZu3MiuXbvIzMxk6tSpiKI46HPLz8/H5XKxcuVK
      jEYjU6ZMobi4+KzP62x11NjYGPlXUlKCVqsdtNzB7u3U+hBFkfnz57Ny5Uq2bNnCN77xjchC
      94oVK+js7KS6upq7776bwsLCyDtTWVnJjTfeGOl9XkwuB712u92sXLmS8vJy7rnnnsi1Th4z
      mK7HxcVRUFDARx99xNGjR5k3b17EmWMwXQdYsGABR48eZcWKFbhcLn7wgx9gNpsjv6empvZb
      08nIyOhn5AsLC78UXU9NTaW8vJx/+Id/GHDuuXRdkM/HfF4AbW1tbNiwgSlTptDc3MyHH37I
      H//4x5EscsxTV1fHb3/7W37yk5/0Uw6FkePhhx/mf/7nf/p95/P5qK6u5k9/+hPPPffcBY1W
      RxuKXo8OOjo6WL58OdOnTz/rNN6ZGPFQEImJieTm5rJv3z58Pt95e6QoDJ0NGzZw7733Ko3/
      l8j1118/4Du73c6OHTv4yU9+clk1/qDo9Whh165dTJgwYUiNPzDyIwAFBQUFhdGJEgxOQUFB
      YYyiGAAFBQWFMYpiABQUFBTGKIoBUFBQUBijXJAB2L17d2Q79YVwPqFNB+NsIYxHA6NZvtEs
      WzAYPO8QFBeD0Vx3cOHyXWy9Pp3RUt+jRY7h1I8LMgCNjY2XVPIDBQWFc6Po9djhgtxAOzo6
      UKlUWK3Wft97vV527NiB1Wpl6tSpke927tyJIAgsWLCgX7ClUCg0JD/pUCgU2YU7GhnN8o1m
      2U42PucbnuLLZjTXHXwhn0qlOmNcpbNxsfX6TPdzsRktcgynflzwPoCVK1dy66239vtu48aN
      zJs3jz179jBlyhTi4uLYsWMH48ePx+1209XVFYllAUOLsgecd7TBi8Volm80y3ZyeDuUxuvs
      yJxw1bOzfQuuoIPC2BJmJ1+BTnXmUMiDMZrrDoZHvoup16czWup7tMgxnPoxIl0sWZYxGo1k
      ZWVFIgZOmjSJt99+m1WrVlFcXDwSxSoonJVWdzNbWlYzI3Euy7LvwBPysKV1DSH5wue7xwKK
      Xl9+jIgBOLmA1NfXh8FgAMILS9/61re488472bNnz0gUq6BwVipt+xlvmUJB3ASSDKnMT7kS
      m7eLXl/PxRbtkkDR68uPqA2A3W5n06ZNkc+DxaDIz89n9erVHD58mPT0dMrKykhJSWHr1q18
      +umnkSh8CgoKowNFr8cmUU8iGY1GNm3ahF6vj4Q6PZ3CwkKys7PRaDSIohhJm1ZUVIQgCCMw
      t6ugcG4mxE9lfdMHWHRWLNp4Krp3Ea9PJF4XXT6HyxFFr8cmUT8xSZJYvHgxfX199PX1nTEZ
      w2CLJcOxIKSgMFTSjBlclX4jO9s3hxeB4yYyO2khonDxPTsuNopej02iNgAqlSqSb3M0JLhQ
      UDh/BLJMuWSZ/t/FFmTUoej12CTqNYDGxkYmTJhAYmIifX19F5RHVkFBYXSg6PXYJGoDkJOT
      w5EjR/jss89wOp39UqIpKChcmih6PTaJ2gD4fD7mzZvH008/HdkNqKCgcGmj6PXYJGoDYLPZ
      qKmpAeDQoUO43e5hF0pBQeHLRdHrsUnUBiAjIwNZlvnNb35DamoqMTExIyGXgoLCl4ii12OT
      qLyAmpqaCAaDmM1mSkpKgNETIElBQWFoKHo9donKAEiShF6vJykpKdJDGI5ofwoKQ8UZcNDU
      V49JbSY9JhuV4tMfNYpej12iMgBbt24lIyODuro6rr322pGSSUHhvKhzVLO5ZTWJ+mScAQcW
      XQLXZNyMTnXxIzZeSih6PXaJygDcdtttvP322xw/fhy9PhxC9+tf//qojduucPniDroo69jK
      dVm3khGTQ0gOsebECo7Y9jE9cU5U1/KFvOzq2MYxxxGS9KlcmX49Zk3cCEk++lD0euwSlQHY
      smULN9xwA/n5+SxatGikZFJQOCeugBMEgQRdEgAqQUVWTC4t7hNRXSckh9jSsgZREFmWfQdN
      fQ28U/s3vlH4XTTi2AhxoOj12CUqA1BQUMDbb79NV1cXra2tAHz1q18dEAQqGAxy4sQJDAYD
      qampke9bWlrwer1kZGSMisQKY41mey/rjh7hRG8vWlFkXt445uflo7kEF/vMmlj0KgO1zmpy
      TQV4Qx4aXDXkx0YXk77X14PN18VNOV/HpIklyZBKnfMYdc5jFMWVjJD0owtFry9fAqEQO+pq
      2dVQjycYIMti4brxJaTHWYAoDUBxcTHjxo1j165d9Pb2Mm7cuEEjAFZUVGA2m6mqqmLx4sUY
      DAba2tqoqakhNzdXyTd6EXD7/bz02Q5mZGRx6+RpdDkc/N+eXWhUKubn5V9s8aLGoI5hYerV
      bG/byMHu3chAYdwEiuMmRXUdtRh+f70hLyZNLCE5hCfYh0FlGAGpRyeKXl++lDc2sK6qkm/P
      W0isXs+ntTW8+NkOvn/VNRi12uiDwfX29rJnzx6WLFnCRx99RGZm5gCf4d7eXkpLS1Gr1bS2
      tpKfn09VVRUajYb6+noSEsLhd08mmJAkaUhZ7od63pfFaJKv1d6Lw+Nhbk4uZq0WfVwcpZnZ
      lDfWMzsr+2KL14+TDcm56s6itrI0/RYcfjtalTY8by9BUDr/OjeKJvJMRWxuWc242GJa3U2Y
      1XGk6DPOWP5oeq6DcVI+URTPex5/NOn1me7nYjOa5IBz6wdAeWM9pZnZZHwe2mNuTi5bjlfT
      au8lJz4h+o1gsiwjiiIqleqMrmInQ8lKkhR5AWVZJjc3l4KCAvbu3RttsQoXiEGjRQYcXi8A
      kizT7nJiNV7aG360oo5EfTKxGgsC0bsuCghMt85hmrWUbm8H6cYsrs28GXFkkuWNWhS9vjyx
      GmNodzmRPn92Dq8XmXB7AFEmhe/p6SEhIYF9+/Zx4sQJ8vPzmThxYuT7k+zevRuj0UhtbS3X
      XHMNra2taLVaamtrSUpKwu12M2PGjMjxSlL4kUeSZVYe2MeephPMyc6lxW6jsbeX7y26itRR
      Fvhr5JLCDw+j6bkORrTyjTa9vtD7GSlGixzR6Eerw84zW7eQZ00kxWSmrLGemZnZ3DplKqIg
      oHriiSeeON+C33rrLUwmE1qtlqSkJNRqNT09PZSXlzN+/PjIccnJydjtdnJzc4mPj8fv90cW
      jWRZZvz48f2GppIkDWnXYSgUGrWNBIwu+QRBoCApmRitjsr2VsxaHXfNKiUlNm4I/eaR5eQQ
      dzjdEIP+PvrsDYSCPtTamAva6DSanutgRCvfaNPrC72fkWK0yBGNfph0eialptHUa6PNaWdx
      QRFXFRah/vzcqEYAb7/9NvHx8QMeak5ODvn5Q19IVEYAXz6jWbbhHgE4e45TXf4MAV8vACm5
      S8iZeCeiSjuk643muoPo5Rtten06o6W+R4scw6kfUV0hKyuLuro6MjMzycvLIz09XdksojCq
      Cfr7qC5/hsTMeaTmX4vfY6Pys99gNGeRkjcw8flYRNHrsUtUIwAIW/WGhgbq6uro7u4mJyeH
      kpIS4uKGvnNSGQEMH7IkEeruRvJ4USclIhoGd2cczXU3nD0cZ88xDm//BdOv/R06gxWA+kOv
      4rLVMOmKx4d0zdFcdzA0+UaTXp/OaKnv0SLHRRsBVFRU4Pf7AYiNjUWr1VJdXY1KpWL27NkX
      LIzChSEHAjjXrsNTXg4IiGYTcXd8HW1W1sUW7aKh0oS9nPweG1p9PB5XKy5bLVp9wjnOHDso
      ej12icoAlJeXM3/+/MjnmJgYrFYrVVVVyosyCvDs24d3/wES7r0XMdaMu6wM+5tvYf2X+884
      EogKKQjdx6DnGGjNkDoVDPEw6paRv8BgSiUld8nn0z4ZdDXtQAr5McUX4Ow5jjmh4KLJZvf0
      0uuxYTHEE2ewXDQ5FL0eu0RlAG655RZiY2Npa2sjLy+PY8eOkZ2dTVJS0kjJpxAF3n37Mcyc
      gSYrEwDjnDm4P91JsLMLbfYFjgJkCZrKoOc4JBaDtxeqPoTiZWAYvb1pQRDJmXgnfo+N9vqN
      ZBTeTEreEmxt+6guf4apV/0StfbL3wuxr3kPKw+8gyAIyLLMrVNuZ1rGzEGP9QTcbKvZQm33
      cfKtBVwx7koMGuOwyaLo9dglKgOQnJzMqlWrqKysZM6cOWzatInvf//7pKSkjJR8lxQt9l4O
      tbUAMCk1Hav+yw0noIqPJ9jZiSxJCKKI5HACMqJBf+EX99qhqxKKb4aY5LBBqFkHbfsh76pz
      ny+Dv8dB754qAvY+zOOzMU3IQVSPfBwiUaUl4HeQPfHvyZ30DwDojEm01qzG42rBnFA44jKc
      So+7m7/tepHvLPge6XGZtNhP8OdPnyH7ulwsgNzXiRCThGi0EpKCvLjzT4iCwISUSVS2H6Kq
      o5L7Fz6EShweLylFr8cOsiwhO1uR/W7E2LToQ0GYTCaSk5MxGAzceeedmM3mkZDzkqPR1sOG
      6iOUpKYDsProIa4eV0yu7kvqRckyuvHj6X7+zwTb2tHm5uCrPoahtBSV1Xrh1w+F54g52fMU
      RNBboK/jvE739zhofnsL+nQr+tQEenYcwt/twLpoKoI48lNIOmMSHlcrshRCEFX4PTYA1Jov
      v/d/tP0wWfE5FCdPAKA4uYSs+Byqd/8fk1v3RUYFutnfptoQT4erjZ9e91+oVWoWjVvCz9b+
      kKqOo5SkRhf36Gwoen35I4f8+Pe9RvD4xvCueUNcdAZAEATmzp1LbW0tVVVVQDiS4GjYHHGx
      2V53jAV5hRQnh3tN8YYYDne0kpuYhBzyIPm7EUQ9gjYBQRh+F7tgRyeO99/HWDoLORTCvXs3
      mowMTNdeizAcLn16S7jx7zgCySUQcENXFWSc3xxx754q9OlWUm+ahyCKxBRm0vLOFmKn5KNN
      OPdO5KAUpM55jHrnMWI0ZkosU7Hozn/9IaNwGYe2/SdHdz2NwZRGR8NWUnKXoDelnvvkYcZi
      SKC3r4tg1/FwYx+bQcjVTl7zXrqv+DfEhDySg168639Kz6x7SDBaUavCOqZWqUkwWun19Ayb
      PIpejx5kWUL29yBLXkStFWEYgxIG67YRatiB/pqfIujjCR5bF/0IwGazIcsyV199NYCSN/Rz
      nD4f8cYvHla80YAvGCTkacbXugI52AfIqC3T0SYuQRjmWPN927ahyc7G8g93IYgigcZaHG8u
      R7a1QkpWuMceLacv+qbNgNa90HEg/HviBLCe3/RJwN6HPjUhYozUMXpAQPIFzi2GLLGvu4x6
      53HyY4tx+HtZ3/wh12Yuw6I9v/UHY2wGk654nOZjH+Ky1ZBTcgdJ2QtHxBifiyJLFtd1HKF+
      xbcREJHiMsn0O2kUVHzUuBMad5Iem8HXLTkUBTy8Z2ugquMI6XFZtNhPcMLWwLdm//OwyqTo
      9cVHlgL4uzYR7K0ABAR1DLq021AZMobl+qH67ajzFqOyhh0f1IVLozcAsbGxNDY2snnzZgDu
      uOMOpacAFCelsOdEIwvzw5W750QjKTFafK0rUJsnorbMRA468Ta/iahNQmOZcY4rRkfIZkOT
      lRVuYF3tqLu3Yy4MIdR/BP6pkDkHopkzHmzRt6kMCq4DBFBpQR933obFPD6bnh2HiCnMRB2j
      x36gBpVRjyb+3FMNzoCd4/ZKrsm8mUR9MpIssbV1HUds+5mf8sX6gyxLeFxthAJ9GEzppy3u
      ChhjMymced/518EIEdr9v0zPms2B9OnUddewsKeGqb0NmEQN31vwMKjUrNz3Gp3th8grvYe7
      U0p4fc/yz6eGJO6efS8JxmGY1jsFRa8vPkHHQYKOw+izvomgNhPs3Y2vdQWGnH8alpGAYEpC
      crREpkFlry16A6DVarnlllu+uKiSPBqAebnj2HCskpUH9wGQEBPDpHg9clcfastMRE0saGLR
      xE4l6Dg07AZAP20qnk83IY8TEXqOEuj0YT8goemWMLSsI1B2gJCQTMwVV6BOPo91iTMt+nZW
      nt+i72mYJuTg73bQ8s4WQEBl1JNywxxU+nOHY/BL4fUHgyq8/iAKIrFaC93eL9YfpJCfhsOv
      016/CQCNzkJR6YMX1c3zTASOb8Dwld8xJ6mIUnc3oRPl+Op3oM2ajWH771BlzOKWzmqOq3UU
      pE9nmqgmL2HciLqMKnp98Qk6DqGJnRrp8astswjYypH83agMmRd8fc2EZXg3/Azftt8hxqYT
      rN0SvQEIBoMcPXoUgMrKSqZMmaIMFwGdWs31xROxedwAxBuM+PvakJCRg07QxCLLEpK/G1Ez
      /ApsKM5B69DgP/AZKoMfQdSjSwjirKhCKDSgMtTgOlCJt/Io1m//M1j67/CUgTaHnU3VVfS4
      +5htNTJLllGda9H3PL17RLUK66KpxE7JR/IF0MSbz9n49/p6ONK7n15fN46AnWP2wxTGTcQT
      clPrqGKa9Yv1h87G7XSe2MHEhT9Ba4inrXb9RXXzPBuiKRnJfgLZ1Y5v11+QXR1Y5CC+nPmo
      VFpCrftp1JnYljWHOZ+P2uIMlhHdK6Do9cVH1FiQAt3IsoQgiOF2AxlBjN6LLxAKUd7YwJ4T
      DSQYY1hSVExqXCb6a54gUPkBUvdxNFP/PrpooBCOQGe1WsnNzaWxsZGSkpJIIumhcrlEAxUF
      AaNWi1GrRRQEJDSIgg9/12YIugn27ibkbUKXehOCengbJaFlF4IpHqFwCaKvDV+3EX2Cj4BT
      jXluEeq0LLxNfahiY5HsvaiLi/rVXdvnYWNNOj0ZcRa2NzSQ4G0lNSYmPNXj7YWmzyBlCsR8
      MYI46d2jMujQJVmw760m5PZhyE4Z0IsUBAGVQYfabBxgIEJeP/7OXqRAEEGrxh7oZVPrKnQq
      A1Z9Ms6Agyr7IU646qh1VDEutpjxlimIn09B1R9aTnzqdJKzF+H32hFFFe31m0hInxUJATFc
      XOh7J8Sm49/+NIHKD1BZxyF7HQRmfAtVxXIqMmdxNC6LNd01fG3m3SSZkr8U+UaTXp/OaNHz
      kZZD1Cbg796G5GlG8rbh79qIOm4q6tiJ/XTpXNFAJVnmg4P7+aTmOBNT0+n1elh79AiTUtMw
      xyWjzixFnX8lqoT86EcAPp+PrVu3ApCYmIjJZBr0uFAohCiKAxoBWZbH0PBSQJu4BFGbRNBx
      CFFjwZB1N6IucfiL8jsRYpJRpeSAfyqajg0IYgBTPqhNIGXMRxCPoTKZCNlsA07fVF1FnjWR
      e+bMQyWKTM3I5JVPnOS0HMRylkXfC/XuAfC29tC+uoyQ2wvIxEzIoaqwi0R9KovSliIKItmm
      fNaceI9ZSfNx+O10+zrY1bkt4g2kMybhtjdSd+BvdDRsJujvw9vXht878F4vNurMWYTGLcFf
      8SqIagzX/5KY1Em4WipwH9+A19PLP6p15LUeRI7PRdAOrmPDiaLXFx9Rl4gh624CPTsJeZvR
      Jl6JOnZy1I4KnS4nO+rrePCKK8lJSCAkSfy1bCcbq6v4h1n9vfaidoHQ6/XExsbi8XhITEwc
      1MK3t7ezefNmNm/ezKmx5lwuF6+99lq0RV7SCKIGjWUGhuy70aXdjKhLAgTkkIeQpwnJ14Us
      D0Mu1YTCsFumuwuSJ6LJHY8cgoAjSF9HPO6Ko0g+H/4TJ9BPmzbg9B53HykmM6rPexWxej29
      opne3BugaBlM+CpkzRuwkByw96GNNw/JuwfCPf/21WWYijPJ/tZ1pN9+Je7jzXTX1RKrtUR6
      +AaVEZWgpsZRRZ2zmkR9Cv6Qj/XNH9Lrt5FRuAxb+37qD72CKb4AlVpPfNpM6g++StDfdwEV
      O/wE67YTrNkEQS+SsxXZ0wuhIKK7m0V93XzFOo68klsJte7Du+FnyFGkuBwqil6PBgREXRK6
      tJsxZN+N2jwBydcedRvhCQQQCOswgEoUSTGZ6XEP1IOoDUBraytdXV383d/9HbW1tTgcjgHH
      HDx4kMWLF2OxWOjoCM8Zy7JMWVkZsaMs+9RQCEkSXX0uuvpchKJMhC3JMh5XA676F3E1/A1P
      w4v4O9cjS+fXYJ4RayEkFEDVB3DkHQQhhE87nb4amd53V2N/9z0IBDDOmY09P4839+3lma2b
      2VFXSyAUYmZWDmWN9TT09GBzu9leW4NZryfZkgimlHDMn0F6Iubx2TiP1ONt6yHodEfl3QMQ
      sDkJub3ETRmH2mxEn5pAbEkuSc06ah1VdHk76Au4qLYfJiQH6fS2cWX6DcxInMuitKUk6VM4
      YtuPMTYDc0Ihprg8QCZ/6j2UzH+MgK8Xj6vlwup2GJFc7Xi3/ArdVf+BuuBqZJ8Dz9r/wLvm
      MQj6QKNHv/QXaKd8Df3SXyDZmwi1VO3MfyoAACAASURBVIy4XIpejy5CnmY8DS/hPfFq1G1E
      ssmM+fME8F0uF1trjvFx5WEcXi+tDjunhn8ekhtoV1cXn332GS6Xa9B5QlmW0Wg0JCQk4HQ6
      SUlJoaamBovFgt/vj4SJDQTCNxQKhSLzWtEQCoXw+XxRn3ch+INBPqk/js3jAcBiMHBlXgFa
      1cCqPF2+kCRxuK2eBMd7tIXSaZMnMzvNSnzvOiQxHtE89axlewIeuvo60KsNJMYkDhwaJs+E
      uAII+UBvQVOoJXbyXKS+sOUXY2Lo0mn5845tZMVZyDDHserwQZpsPVxfPIEmWw/PbNuCAJh0
      Ou6aNhOVLJ+1jrX5qeg7bBHvHtGoI+GaGQQFmeB5PJugEJ7T9NgcaLUqkGQ8Xb3kxhWhMUqs
      b/oAAdCpDEyzzOZA7x5UIXVEphjRRLevE5/Pj9aYgqg2kTv1n/C62rF1VCNJEpKsGdb3JNr3
      rrb7GDsbtgNwhRQkLWEcocRJCFf8ELFqFdL+V5HUMQiTvo50Yif+oBQ2BoBsTCLQ20oo6fzL
      OymfSqU67znr0aTXZ7qfi82XJofkJdDyHoKxGFXsdOSgi0D7e5E24mSdhkKhQU9XAXdOncGr
      FXtYdeQgvmCQ0sxsRFHkD59s5r55C0n5fKd31AbAYDBw/fXXI8syWVlZaLWDe3L4/X46OjrI
      y8vD7/fT09ODz+ejqamJ+vp6CgsL+8UKv1TyAew8UY9KVHHr5PA0yvba4+xpaeLKguJzylfV
      0U59x3EKYwVSc5ZxtKePss4urkueBO6j6BLPvKv2RG8jb1W8gsvnRJahNHsOS8d/BY3qtHo7
      TXF1mf3dx1bu3kVeYhLfmD4Tg17PzJxcntm2hcWFRdw+fSaLC4vwBAIkm8wYz/Bs+xcAKVfN
      IDC98Ly9e05Fm6zFMmUc3at3YS7JxW9z4m/rIf32K0lPjGV8wmT8kp/Yzz2njvcdpcFznMK4
      EjwhNw3uGqZZZ6PT6cgefysHtvyIfevux+tqA1kiPm06prhUVOrhe0+iee8q2w7xtz0vsSB/
      EQDrD6/k7qAPrVpE0CUgT78T97HV6CYuQ7Rk497/Cuquw4gJ+Ug9tQR6jqO7+seIUbznQ9GL
      0aTXpzNa4vB/WXKEPJ0EQ24MiXPD7uMk4fdNI/R5G3E++QAKU1P5xzlz+d3mjTx4xZVMSE1D
      lmX+WraTbfW1kbWAqA1AW1sbx44d47bbbuPll18mPz8fo7F/ZMKpU6eyefNm1Go1iYmJVFRU
      RMLKGo1GCgu/3OBbw0lVZzu3TZ6GWRduaGdmZbPi4L5BDcDp1HZ3kpOYjiZ0GL3gY3xyKpVt
      LdgdzSTFnnlh2BNw81bFK0xOm8acnPk4fQ6Wl79EsjmV0uy5Ucnf4+4jtceG6+W/4bdaMc6a
      iUB43lAUBFLM0Q/lBVE4rwXfQEjC5ZPQqARitOGFREEUSFg4Ga01FufRRjRxMaR9dRHqeBOi
      IBKnje93jYWpV7O9bSNHew8gA4VxE8g1h98nrT4eldqAPiYFS/IkLMlTaTn+MV0ndly07F/v
      7n+Dv5t6BzMyZ9HmaEWUYc+23zJ73Y9RZcwi1LwbMS4TVfp0BFGN/srH8G5/OhIPSH/lDxGH
      4AkULWNdr0cTYbfP4XEf16nVpMdZEAUBBIEUk5kGW3fk96gNQHJyMvX19bz11lvY7fZBh4rJ
      yclcffXVqFQqBEFgxowvNj3NnDl4yNtLBbNOh83tIdkUbvBsbg+SJLOu6ggQjgKaHjf4gzLr
      dDiDIqq46Xib3yRkLKFEOIqJAJqEZWcss8vVicvnZE7O/Ig/+IzMUvY3743KAMiSxES7k9X1
      dRQlpRFr62Hnm29gnjKJZNPIBv+yeYJUNLvwBcPD12yLjvHJRlSigKhWETs5n9jJ4fyzJ3s4
      g5GoT+GGrK/iCPSiFbWYNXGRhWKPq4VQ0MOUq56MuH4GAy46m7ZfNANg8/QQq4/jpc+ep8XR
      jDfgwRmXwbTEIrSt+1GlTUNTsgzh88V1dd4ViCkl/SKCfhmMdb0eTQjaBNSWcBuhiZ2K5O8i
      5G3CkHV3VNc5dS1gQf44HF4vZY31fKUkHETQ5gkObSfwt7/9bbq6ukhJSeHo0aOUlJQMOG40
      +O2OBAvzCllffQSbJzyvvqepAfhixX310UNcW1RCdvzAGDUT0zJYc/QQ2+V04iUfYssBshNz
      iU276qyuoXqNAVkGp89BnMGCJEl09nUSb4wuDn+ou5uivfvoWjifvzl6EWJ0GOQQd3oD5zfd
      M0QCIYmKZhfpsVpy4nX4gjK7Tjgx61Rkx0fva65T6UhSDQxVfGr2L53BiiyF8Lha0RkvXlz7
      2dnzeP7TP5CTkMc3Z93Dh4dX4A/6WKPScsd1vxj0HNFohS+p4T/JWNfr0YQgiMPiPm7UavlW
      6RxeLi/jk5pjyMD83HxKs3MiOjmkpxkTE0NMTFjZqqurB31RLley4xO4YfwkdjXW4fL7QIZr
      ikr6RQHdXneMu+LnDDg33mDkhvGTONTaTIcvn/zsOVgSk86ZgNsak0hp9hyWl7/EjMxSOvs6
      aLQ1cO/c6OLaSB4vGknmtpmzmBcKERLA8OlONG1tA46VJZlAr3NI8/qn4/JJ+IISOfE6DBoV
      Bg1kxelotvuHZADOxKnZv5KzF+FxtuDsOTbk3L/DwbLJX2VD9RraHC0sL/8r6XEZfGfB9/jL
      jme4Y8Y3L5pcgzGW9Xq0cdJ9/EJDxuQkWPn+VdfQ4XJi0GhIMpkRBQGbO4gvKA3NAIx1PIEA
      Tp8PQQB3IIA/9MWURbzRgPMsngIWg5GF+ec/VyrLEvh7uCZnGslGC/vbjhBvTODeufeRZI4u
      YYc6KRHRbMK7axeJ06ej9vqwHTiIfum1/Y6TgiF6th/EcaiWU+P26NMGH3FIwRCuyobIHL5l
      Wi7aJGvEbVSjCm8Q8gVlDJqwK6zLH8KgHd5InCezfxnNWXQ2bUdnTGLSFY9jjB2eaIpDwagx
      khOfx7TMmUzPmEVqbBp7m3YT/yX38BUuIyQvkr8HSWM8r/DyRq2W3IT+79tJnbxgAxAXF3fu
      gy4jnF4v66uP8JWSKSTGxPBpXQ0bjx0l1RyLXqNhz4lGipOHJ8b86eFhJ6pjmDFt6OFhRYOB
      uDu+jv3Ntwhu/xRREDCUlmKY1t/91FXZgKuqkfTbr4xE7mxfXUbmXVcPGAnIkkzP9oO49u3H
      bO3F7zLTfPgwGTeMR1s0C0Q1MVqRbIuOXSecZMXpcPlD2NxB5uUOv++4qNKSkrfkos35D8ZX
      p/49fyt/KfyhCT6t28rds//p4gp1DsaaXl8qhDzN+FreQw72ERAYcnj5kzoZtQHwer288cYb
      kZ2Ct99+e7SXuKQ50dtDkslMliXsnXJFfiENtm5WHKzAoNGSEBPDvJz8YSkruvCwMnhs4RSN
      fmd4Z7C1cMDOXW1WFtZ/uR9PSwu62FhUVmu/hDH+YJBPq6s5aPKS0XScJUXFJE0Zh73iOAGb
      E1Va/55EoNeJ40A16ZM96IvnISdOoG1tBb2flpFsjYOkCQiCwPhkI2adima7H51aICNOy6HW
      PgxakXFWA2bd5Rt4bHzqRO6ddx/baj8B4N5595GfOLo8Zsa6Xl8KyCEPvtYViDET0FhmIsju
      qMPLO30haro9ePwSqbHa6A1AT08PwWCQpUuXAlxwwKhLDZNOh9PnJSRJqEQRtSiiEkUmp2Vg
      0urIsiSgG6aFsqjCw3ps4V3AptRw+ObmXeDpCYdvOG2IKBoMqDMzESWJQFMzokGPympFCkms
      KCtjV1czxT0Bmtps/L6+ke9OnQXIiLqBvQzJF4CAG7VBBcklCFoT2gQL3lZ9OJFMUjjtoUoU
      yI7Xk2XRcaTdTbPDHxkN7Kx3MC839rI1AgIC4xKLGJdYdMZjRjrx+7kY63p9KSD5u5GDfeHG
      Xm1GpY6PKry80xdiZ4ODeIMai0HNsS6PkhAmWjLi4ok3GFl15CDZ8fE02my4/X4q29tQiQJ7
      mhqZnzuOcYkX7nkSVXjYtv3hxn/c0nCDH58fNghJJeEwDqcRbGrCsWIlktMFyBhKS+nJLmBH
      TQ33L7gCzZbD+B0uVtZ08FHXNu6YNBmNZaCrqCbejMqSiL2+kbhCO8GQH+eRehLS1eEsYqfR
      55do7PUxLycWi0GNJMvsaXJR0+1hWvoXAcgCIRmnP4AcdKAJ2jCY0kZdWOcLRXJ3I/d1IhsS
      eHHv8hFN/H4uxrpeXwp8sT/AhaCOfn9ATbeHeIOamZkmREEgbSgjAIPBwO233057ezvp6elj
      Lma4ShS5/nNPnmZ7Lxa9gabeHpYUjicxJoauvj4+OnKAZNMctBcYHVGTMA/Pib/ha34HUWsl
      0LsblTEPQTuwQcfvDPf8T/b2T/YeTyZzPwXJ46HvvRUYpk7BOGcOksOJ7W/LaT1Uh5idQHJ+
      JjFpqdjKjmA9cghXbhIJCycPmrxdpdeScuN82lcFsf9tA0ghYlO9mNL1kDow6Jw/JOEJSBxs
      7cOsVzHOasCkVdHr+WIh3eGT2NNkx97bDLKEzr6TNI5TXPovozLBy1AI1m3Dt+svCIJAMBQg
      ThvDXbc+P6KJ38/GWNfrS4GT+wP8LW+jjptCMNBDyHMCXepNhDxN58wh7PFLaNUCB1r78Pgl
      rDGa6A2A2+1m/fr1TJo0idWrV1NQUDAqtml/mejUamZm5QBwpK2F1Ni4yJpAlkVLksnMid4e
      xsWfv6eHLAU+n/MP+/069UV80rgPm93N3JgKstVOBE08PkclknotKutidJpTesQJheFpn/j8
      z5O3HwaNkaA6Bq/DjkqtRo8PoX0/cncL6hgPB1OT2LN/LwnGGGaPLyJ+6240Rk1k44hrUibV
      HdXcVlQ4IH7/qejTEsj8xvUEmusRnTVoLEaE1KlwWgITWZZptvvDRiAogRe219mRZZiUGjZY
      gZDEvpY+dM49ZNg2kFf6b+zv/Do+27pRm+AlWk4GhDMs/TliQj5Hq1Zz9c5nET3dYEoZkcTv
      50LR69HPyf0BaBIJ2Q8has2I+jR8rSsBAUFlQNSnIoe8qGMnhUNJn7I4nGTS8FmjE53KR3VH
      PZ2uIewDcDgcWK1WSktLqa2txev1jukX5fQ1gZAk4fR5MekGTtN4Am66XJ3oNQasMYmRHayy
      LIW9fRyH0cROxeGqp7n+Y1BPJitxIkHHJo5pxtESsFLTVsEN7nUcb6hgSvE3ybJkhy9uLQzP
      +Vd9EP6sMeJKLOX4/gME/H70go9CdR3ahGywZOAb14ytuYyczLm0O5z8pbON/zd9Ijfa4eNN
      O9h44CBSIMiCggJmZeecsx5UBj2qgvHA+AG/nVx4cnpD9LgDzMmOpa7Hi9MXwukLkWzSkBEX
      fodcPglPIERS7w6SM6eTak3DFnTTLs9H1bkOj6sFc8LoWkCNllDTHlSJhagywvO2KUVLqdn1
      F9TV6zBOvHXEEr+fDUWvLw0C/iBOdyIa0/UYVE0Euj9Bn/VNZMmLp/4FQt4WtNZF+Lu2IPm7
      0CZdE3ETdfpCuLwutjTuJVYfR5YlIXoDkJaWRlJSEitWrGDcuHFjPgzsYGsC8QYjGXEWgoEv
      wreeLZib7O8h2FuBPuubiIZ0trS8jtbtJd9qJ6TJIMlg4tnaI5iNadw95xEsnsPYGtbyVsUr
      3L/w4fBioagOL/gmlUDIT1Adw/H9B7Amp5CcloHQ8AldzQLqnCnIRjN/23Ocf4nvRuhowdvc
      zSsuN6tMOqbQyVcCZjprmym+ciElc0pRXcBc8KkLT2adiia7jz5/iIW5sfT5Jep6PPiCMqrP
      p5fC/skC6JLwuFqRpBAufwi1FA5PrNZc2r1/+Dw5t6sdORRAUGmI18VSYIhn1YkyajsqRyzx
      +9lQ9Hr0Y2trYs/a9/D2hdftJpa4yShZgsqQga/1A9QxhUj+TtRxU1DHTcV7YjmauBkIukSc
      vhD1Ni+NtkbGJycxMX0SCcYop4AaGhoIBoMEAgGsVitut3vUpGu7WJy+JpAZZ2FSWgYqUeTk
      rPa5grnJkhdkmVBfLd6O9Rjs5QgqHTFCiPUn9nBdrBstAWZmzSYjLhOf6zPyU2aytuoIXa5O
      suI/76ELYmTB1+uwE/D7SU7LQKfXAz4wWOhq78CYbcCu0oNOS7CuHrUphdRJJRzu7mDOHXej
      jzFRf3A3zcfKKZ41DZVm6M/31IWnkCTT2RfgaIeH9Nhw2swud5DxSV/MW8ZoRXIS9NT5ltLW
      vYPGymbsPhFr+woycpegN4X3WIQkmWa7j2a7/5JzJVWlT0eMy8R7SkA4vXUcN1/5GL1ex4gl
      fj8Til6PfvxeD3vWvkdG4USySqbj7XNhP7acoLcdjSwh+buQfB3huEF9tahjJwJCuG0hrIc6
      tYg34CEvM43pGWa21dqjMwAWi4VAIEB2djZGoxGXyzUS93rJceqawGCcK5ibqE1ARqKvZQUH
      +1Rk6EWyNTJy0myuTs2g4tAz3JggowvW4Gt+m5C3Ca/5SmSOoNcMvuhzstce8PvR6fXICQWY
      2tYTis3BqhVYZAnQpzGi/erXcQRkyjesZsm4AuJTwy6nuZNnUbu/DFdvNwmpmYOWcSohSaap
      10edLfzC5cXrybTo8PglLAY1YsiP6O1laoLIlmaZHfWOsGuoRReZ/oFw3uBCq45OZ9L/b+/M
      guO8rgP9/X/vC3pBowE00Fi6sZEEQIIgJUqkFlKyJTmWvCh5iJNKZcqeqSnHqXkaxzU1D3Hl
      aSoPMw+TqplyJS7PTFxO4ow1lhU7kmyJtCRSBDcRJAgCIIitG0A3et+Xf5mHJiGCBEiABNGQ
      1V8Vq8Du23+f//597r3n3HPPIa1/DaOYRK/Lk2n+I+q72yrRUKrK9fBnN5RUELUYv/CXlK/9
      AvmOhHAmvRV7FU4I1/R695NJRCnmMnQOHkZnsmC02siEnyAy+y+4BQU5ewOlGEZj3UM5+iFS
      ahRBa0HUV35P+ZJCu8PAi71+fnltjFzZhqRotzYB2Gw2ZmZmmJub4/jx45w5c4aenp5dcWpQ
      VVRK6crgo68zrhuxUi0elMwtngmSy8UoI+ISUuhFHYq+kYs3f8kHKT2xTJ7/cOhVCvFLfDA7
      i1w3xKWZN3mi7Qguy/oJoowmM42eFiauXsbd7KGQLWDRNOAtXEGYvMrxeh3/J+Zm8r33UYFW
      qYAzuoiiKIiiSCGbQQW0Wj3hpSCRUAiD0YinrQOzZa0b5vaAPBbKVQZzFc7Op8mUZFrseiaW
      k3jC5zEUQsQELy5jHwfaGjFqVCxKGqFYqhSev+WrLEoqubLCc34HDlPDaqjoTEJmyLz5UNLd
      jKC3oh/6RrXFAHa3XteooDMYUYFCNoPOZEFVFcLBGAbDYVyFJQStHV3dAEp+HlUpIWcmMfv+
      bDUqqNWu5/pKnifaO0nks7w3eQ5RELa+B/DWW28xPz9PNBpFo9GsWzxakiRmZ2exWq00Nzev
      vrawsEC5XMbv92+reSmXZZYvzlFK3ZoAbEaahzvQ6HbHavB+ydzy5Ry/uvpTXqgzYPf9WxZi
      0/zwwt/zur+dfa56FvV12Aw22ttfJd34HDduniSei/GFvi8x1HpodSNZlmTCk0FCk0GMNjNt
      Q37afF2YLJbVwdt58CsIogRyCUE08cda42qSKGOxwJk3/hfnf/lPWJ0NzI9/Qse+YWLxONGV
      ME6Xm0QsQnQlzMDwE2smgWxJ4Xo4j6/eyCFv5fdwISBwPZznC34TraUZzqj7wHQQg97AoexJ
      HPEmSM5DOVe5SMNe8B4BUYukVCwBg7YyiYuCsCZUtCxXitpt9H6NrbMb9brGp1jt9XT0D3P2
      rZ/g7dtPOh4hGQpy7Pf/DWLmV2iMrejcJ1BLMZRShOLi/0XQWlfHhchEEEkS+DjeitPWwdf2
      N9HToEfz/e9///ubFUIQBI4cOYJWq6VQKKDRaOjv778nm+X777/Pvn37uHr1Kg6HA6PRSCwW
      w+Vyoaoq4+PjeO+oVKUoykPFHd/2UwbPTGNqqKPlSR/OLjflXInY5DL29uom3LotnyAI9Dbu
      od+zn3Qxhc/VzVcHf586o43FZID3Z05zpLEVYzlEU+OTODQlrLnL/CKUwVnXyZ88+S1MOjMW
      g5V9zQMMtz1Bq92LRqz0mSIrjL55lmwsje+pPWg0IqNvnkWRFebP3CAxEcVksOD2taIxWUBv
      RVbAZDDgMJmxGgwYzRb8Q0+h0etRVYX+Y1/E0dLB3I0p6l0uZiauEZm/QTGfI58v0OhpQbz1
      zHJlhalInha7nqY6PYIgEM9LhNJlukwZ2hNn6Bl4ih5PPT6XGaOag5n3oOfL4HsBmg7A4jko
      ZcHmRSuqhDNlVjISVr3ISqbMeCjHgVYrZr0Gg1ZgJVu5/nrv79RzlRSVhUSRZEHCatBUim7s
      Arbqv99tev2o9/O4qKYcgiDQ1NGNp2sv+UyKBm8nQy+8htFiRdTaKIZ+gahzIGgMlKMfIujq
      0DqeZvTNEbKxNP6n99BQZyDz0WWG+powzC+z+N7VrVsAi4uLXLt2DZPJtGG9T1VVMZvNtLW1
      EQ6HsdvtNDQ0kEqlOHXqFK+9Vil+sl01gXPRDM69Tav1Og0uE5HxxarXEb27hqhFY+VQSyVN
      tFSWkZAxayzIikrI+CRGZYbSjb9Bl44gNXyZbx/8cuWDCve9l2wkRTqc4MAfHMVYZ8LoNNO4
      2MrUB1fZ8/IwlnorcyNTXPmXETjcyj+NfkIkk+GY38/X+/djuqNsX32rj/pbueZymTS5TIp0
      PEqbz4dt6CBTVz8hGlpiYW6Gllv7HgYBmq0axkM5bif4HA/l8Fg1GI1mFEVBTi6h1HlBldHF
      boK+DklnR711XxqrFyG5gOQeQlEUhpoNjIcLvDcVx6QVONBsok6rrPbDgUY9Y6Hcuu/LpQKl
      ZAxRb8Bgq4dtHphlWSaRLXByJoPp1vh2KZjhhM+KUVv9SeBhagLvJr3e6H6qzW6QQ2s04917
      EICyJIEkgbYF0f06+eV/ASmJUDeEzv0KiVDinnGhKdTOuX84hcvnovvZ9q1PABaLBbfbTTQa
      JRAIkMlkcDjWRizcLlaczWZX/Yi5XI533nmHr3/966v1RrerJrDZZaUYzWN1VULXMnMJzC5r
      1eOY71dDVJVklPkVHCtJvmX5Mj+98AtEh4VYVqapbi/f8r2CQbc5+Us6HYIootfrV78vH8vi
      9nvoPFg5OWt12njzJ+9w8qNZ/uTpp2kwmfjXyev86MIIf/7scbTr1CTQ6XSYTCaKWh3u1g7K
      pSKiwUJp5Sa5VKryXVIB5j7gaGSSS3IPV643oerN+FqbONBiRacRwfc84tRbYG2EQqpyUE2j
      R19OgsUBigyZANjb0BgMSJKEDjjiM3NvVYUKBuCIz3jP+5nwIqFrFzHU2ZEKOXRmK82DT6LR
      Pnpt2tsUi0U+CeTZ02hmT2PlANv1cI5LywWOd+1c9M5GPEzt2t2k18pSDDkQAUDjbYB6S9V1
      GXZPbeJ1awIbBsE1uKZdOZO4Z1zQarWIooy9PotGMG7NBQSVJFEDAwMMDg4yPDyMy3Wvm0VV
      VUZGRggEAhw5coSRkRHC4TD5fJ5wOIxOp1sTZ7wVU7GQyJFZSoAgIOhEtFot5oY6li/MkV5K
      kJyNkl1O4j3aXfU9gI1MRlVRkacWQVHQdrVgczYwVG7D4HBwqPsYr+x9Ff0GRcxVSUaZDSNP
      BlEjKTDq0TusxBdWiM6GMDmsxOdXmDk7SWNvKw2+Ss0AqVjm55NjHNm/l5f37sOq07OnuZlf
      Xhuj02QkOTtBMZfBYnOiqirLs5OszE8TD8yQzeWJRaLkczm87e2kEgk8nX5y8TAf/uR/cPnc
      ebLmTiSMNJcXsJSTmOQi7qamipvI7KqcT0CFXBQKcSjnIXQZ0gFYOANaE3Q+D6J2ddX4oEI5
      dyMVC4Sunaep/zCurr3YvX4y4SBKqYTJ8fDuwGxJ5vRsiguBDOFMiQazlrFQgaEWCwZtRUa9
      RuDqco59TTuXwG0jHsZVUW29BlCLZeRr8yiBKIJRj6azCSUYQVEUtI7qb+7vFldUNhknMDFK
      KZ/FYnOuyeZ7Jzqj/p5xYfLUFUBm70vP0tjXv3ULIJ1O873vfQ+fz8fk5CQej4e/+Iu/WLNp
      1NPTQ3t7OzqdDlEUOXJko3Xc1ohcWyQ2HcbsshK+EqSuw4nnQAc6sx7/ywNklhLk41nMDVYy
      y0ns7S5E7fYWHdkW8kXIF9Hsa0cw6BCsRoz5EoeL9WiaWzb8mKqoyDeWQABtfwdqvoh8YxFN
      byst/e1c+OmHzJ2bQmfS031sH8GxOWxNDsz1dcx8fJ1S7l7ztZjLcOoff0B3i5dsMobFVjlH
      kE3FsdjriUdWMDf7kKQyAjA/c5M6lxutKnH2Z3/Hwb4GjK/8GWPXJjCXCwzu80IpxVgGlgLz
      tPm6Kl+ks0AqCCYX9Hypkr10+h0wNUDrU2Bvh1AYPrmIJpuBDh8cGAK9HhQFQiHI5aC5Ge6K
      QmJpCT65iJhKUm8xYjBWBmFBFDHXN5JPRB76UUmKyruTcfY0mhlutbKYKnFyJoPDpGUxVcJm
      rKjQYqpEg6X6g8PDUk29BlBlBenyDBTLaPo7UEtl5JvLaHpbESYWoGN7amx81glcH+XMmz/G
      2ewll4pjq2/k6Ot/it54Rzi4CpHZZSbeu0wunkUqllmZWsJcb2Hvi3u5eXqUmZEZfE8Ztm4B
      xONxSqUS3/72t5menua5556jUCjQ2Ni4pt3tzc/NsJmVQiGRY/mTebq/NIi9owFnl5vl83NY
      mmxojToEUSAdjLNyJUg2nCIdjJNaiGHz1lfNEthwxVCWUKNpRLcd4VaOHTWZA1lBdN2nOHuu
      iBqKo+lpRTAbECxGkBSS1wNcPTPO4O89Qc/xQeSSRClfovuZfm58OMb8hRs4Wl0MPjPIP1/5
      BIfJTFmSeOPKKKnZKb75+h+xGmxP2wAAFmpJREFU//kv0T18jOlLZ1AVhZe/9R9p6OwlU5DJ
      LM8ilHLks1l0BgPDTz/L9dPv0qyN0uvRogpaInk9kZlrNNcbMBkNlOs6SMXjNHpuTWi5KCxf
      gt4vVywCixsUqRIF5H0SIhE4cxr2H0Dp7UOamyF/5RKLyzOYro2jCQYRclm4chls9so/gJXw
      6ufUnl7khTn08SRCWzuqqhKfncDkcD20BbCQKLKSLdNk1WPUamhzGJiL5vA6jEys5Agki9yM
      FVhMlXjOb6+4vKrMw6xUq6XXt1GjKSiUQQBNkwPRbUeNpkFWUHIFtN6t1cN9HFTbAshnUpz5
      +d/z5KvfYODZl+k9/Czz1y5RzGdxt31agyQejDD6i7P0PDdA55E+pFIZs9PK8B8cpZhaRFRj
      JBejzJy9uXULoLm5Ga1Wy1//9V9z4MABTCYTnZ2d23mf61KIZzG7rKtJyUStBnODlUI8i9Fh
      ppDIEbq8gMllxXOoA1VRWfhwiqXzs7Q/d28e9kgyxw9/eYkrN8MADPob+ebvHaTBfq8JXyxL
      XJhYAuBQnwfDI5yMBcBkAJMBeTaEprUBNV9ECSfQ9D5cpa/kchzvAT+efe2oisqeJ3u5eeoq
      ljoTx7718mo7Ffj3mmf48YVzRDIZ9tusPKeRcbo9QOXwmM5gWv17aWGeppZW0rNXefLlr2Fx
      urly/izl+DysXIO2QWgwYFgeQyd3ocoliN1E6f5j4tNLOOq3MOjeuAFdXdDRSTEeYUUs0YqI
      V7BQLIWJd/toGngCYSUM50bA1QAm05rPiYB4+AilD06RPHuSnFJGlkrUeTpQFWVDU/l+LKdL
      pAsyi6kSlxez9DVW+sesF3l1n4tgsmJVtdoNaHfR2ZOtUi29XkVVoSwhWIwVq7a7BRQFZTGK
      2lb9wX83kEslEBBwNFYWVRqtFo+/j/Dc9Jp2C5duro4HAH0vHOD8T04x89FvqXPbadwziKi9
      SiMPcQ5AVVVMJhNtbW2YTCaGh4c3vSJ4FIxOC+GrQRRJRtRqUCSZXCRDw75KZxTiWQDc/a2Y
      XBWz1dJkIx2M33OtUCzDf/7b91hJ5LCZDTQ6zZy+usDscoL/9ucvrxngI8kcf/nDkzTVV9wO
      P353lL/65glc60wUm0UQBTTdHpT5FaSxOQSDDk13C6Lt02uqxTJqIgsGLYLNUjnYtsHEkVHB
      SGV/QJ4MQjJHvcWIZmqRZDRNuiTh8jVhspkZbGnlv7S0UiwWUcpFfvN/rpFcWcRo6UWWJMrF
      PCCQjq2QXFlGLhVQUTHb7tgQDF2me2A/p89NYWz6AgYhSzk6i6Wlh1lDPcXLU5gtVjze9k8/
      Y6oHcwPMnKys+PNxCI2i9r5GPhpCTCcwWMwIQHpxDmujB21+EdJp1K5eitkopVwag91RierJ
      5SoTwF2Y7PWo5jpEVaBuMURdroS08DaJnm5sh57e0mZwPCcRSJYw60UarTr6m828MxHHpBNX
      B/yObSxqX02qpddwy/c/G4ZCCTIFQEX65CaIIpouD0r9Zz//06OSTcYJzU6RzyRJhBdp6uxB
      liSWbk7Q2LF+inRFVojNh0mHkpQLBeSyHqPDRXR6HEuDh1I2vXUX0Pz8PKFQCFmWyWQyeL3e
      R64etBlTUWvUocoKwbMz5KMZQpcD1HU4cXbeKrwiCMRvhDE6LZjddSiSTOhyAFEr4urzrF6n
      WJb4Tz/4DZl8mZaGOnKFMqF4FmediXA8S3ujnY7mTwe7v3ljhGMD7fy7V4d5fqgTgLfPTXNs
      sJ0HcT+TURBFRKcVjbcBsdmJcEetXSWaRr42D2UZdSWFmswiOK0IGhHBYYFMAXk2BLkiGr8H
      Q7ODyVNXsIkCFCUmF2PE8yXykoIhmSUwH2bqgzEsLttqpJQsyxjNFsx1dk6/8b9ZunmdsQ/f
      wWC2UC7mGXnrH0mGAmCyYbU5aPD6WJi5gU5voMVSwmhrIGftILS0zEpaRjW56Nl/EHtjG40t
      rbT7u9cmkRNEcHRCegnm3ofsCnLHCZbmFkkvLYBRj2H6Jopeh5RJYZ6dRxdLgCShKgppvYi1
      yYs2nYFgkHJHB9l4GFkjop2YpKRIyPkcmonrKAJoEgnqmrxojz2PrrkF3dg1SgYdOtfmC/UE
      k0UUFZ712ZlYyTMeyqOgMtBsptGqf/AFqsTDuCqqpdcA8kQQUlkEZx2CVoSiBDot2sM9iA5r
      1V0vq3JWSY7A9VFO/uR/IpVLKFKZ62feIxqc5dqH72IwWTjwwmtrFjZ6i4HJk1dYujrPwqVp
      lsYXKOdLmO0iUj5Cva+Pxj1DqIr8cFFAb7zxBmNjY+RyOV566aVHXils9odidtdhabJVBvU9
      Hswe2+oD0Rp15CNp4jfCxCZDRCeWkQplmg+2Y7pjBTEyHmRkPIgoCoRiGf70S5WiJclMAYNW
      S1GSeOaOwf1H/3qZP3xxAJu5EpVjMen52W/H+cqxvvvKqqrw8w+v899/do6PxwI0Oi24HZYH
      hqSrJQnlxiKi217x+ZekyqpIr0W0mdedOEx1Zuoa7SiBKMuBCBqnFYvTSjqawtvqIrycIJ3I
      Er0ZwrOvDZ1Rv/pjtrmaqKtrI3g+hKbkpqltD4nYLIPPvYRv8BBtPftIpDIszs3gdDfRvbcf
      jbGO4PURJJ2DI08dotscx6kvMp/U4Ovtw2qzr/+bELVQ7wfvU+A5SDIcRSrm8R5+Dku7H6Wu
      Duncx1gXQ4iFAmWnHUGjQbOygjlfQh9LIExeJ9PuZXF+ArlUJBkLkS3lqAtHEW9Ok0VGu28A
      MbCA8PQzCA4nOBwohRzCygqa25vSm0BAYCyUY1+ThS6XiZ4GEzciBfY2GLCsUx5zt/CwUUDV
      0mt5KggaDUgygsWI6LSiZgtofLcS/32OJ4Dbfv+nv/rHDD7/JboPPUMiHAQVDrz4Gv3HvohW
      v3YxYqozU0jlCE0F0ep1tA930TbUxtyFOcwOlXI2QXhygakP5rfmApJlGUEQ+O53v0s2m8Vq
      te6YmXgbo8OM0VFxldx5KCM+HUYuKzTubyM5F6GcK+HobMDZ1XjPNbyNNqLJPPF0gXg6Typb
      JJ7O47SZuXGXy6jHW88nU8u0NlQ2Zz+ZWqLHW/9AOX994SbX5mJ874+OsRzL8LdvXeTPvv4E
      vd4H+MVLZdRCGTWUQONrQjAZkOfCqJEkqqd+/RxHAjT4mpH1OuqTOTR7vFx64zR2p5VyoUzn
      sX34DDou/vOHXP/NZQ589alP+y0Y4cZvJxn+2ouVaKEz1zHIXvwHn8ZkrdxzOrRAeG6ann23
      qlPpWknZBnCmxxHHr0JDP+bB43DhIsVCAf06tRDWo5CKYa5vXPXNC54W4k31NAYjFIeHiKQi
      SIU8LSIYdUbwdSHVO4hev4hn/xH0ljqCFz9AqneS8fpxtHeTGf0YKRrCqqhIxTx67KiKQimb
      waDfWgy306ylz23izbEobquOlUyZvkYTNkP1N3q3k2rqtSorICkIrjo0/maUeAbl5jJ8hvdT
      tpPbfn+7+06//x7Cc9N4/PfW3gBAgHwqx94vHKTzyV6kYoG5j0+h0RmQyyrZeJGF0STurqat
      TQCXL1/mt7/97ZrXvvOd7zzUYY/tJjqxTOsRPyaXFXd/C/lohuDZm/e0O9Tn4cfvXuHIvlbK
      VxR+evIaOq3I0wNtNNdbWY6tzYT4zd87yF/+8CQXJhcBCMWy/NU3jz9Qnl98NMG3v3qIzmYH
      nc0OliJpTl6affAEoNfBrUgS+eYygkEHqoqaK1XCRy0bD65ikwM5mUW+NI3fZYNckaLDQkNf
      K9G5MBq9luRilGw0hd5e8Z/fvWHU9eweQjdmSS5FMPXUbeBnFLDVu4kj0nLwMKIokotWQi0N
      W3AbGG315GJh7F4/gihSzKSQC3kErQ5jSzvt+w5UGo6chUQCurqQUnFAwGC1US7kKrJ42iik
      Yp+GfcbCOJtbSJ/6Dak2L2Qy2FfiiC++tGnZbjPQbKHVZiCaKzPYbMFp1lb9NOh2U029VmPp
      yu87mkZWKhvByApotKjFcuX3/znGbHOgoq7Zp7uf3/82zlYX0dkQ7Ye6kIp5cvHKocjWg3sY
      f/c8ohasjsTWJgCPx8NTTz215rWtHtapNgadlr/65nH+7peXUFUVq0lPe5OdQkni7LXgPYN7
      g93Mf/3zl7Y3Cuh+aDUIei1qModgNaLmSxWl2MR3CloNmj1tqKks1lyRi29fJDO1iHVsnlQo
      Ts9zA8xfnL7vNbR6AzqDkQ9++nfUtzWTTcSwuRrpHj66pp3H204iGuXcBycxmkxkUin6Bg9s
      evUPYPP6yMVXmDvzLlqjmWI6QdO+g4jnL8LVq7CvH9IpmJmGgf0V+QwmQKWYSaG31AEqqaUF
      HG1+VEUhFwtjcjYg7OvENnoZZmcq5waefxHc91qDm8Fp1uI0V98F8biotl4LNjOqJKMmMpVQ
      NUCwW5Auz6A99LtRA/phMVltDJ14lQ9++kOczV6yiRgWZwP+oafu+znvUBfRuTAf/OBtjFYD
      8fkcg68O4PL5sXlWSIUmqffvRVBVVd2sMIFAgOnptQPIM88888gJn8rl8iOlgoCKCyg+vYLn
      UCU/zdKFOZxdjTi77r/pt+0hnrd49/xNPh4L8Ccv72c5muEf3rvKd77+BD0PsADUbAHp6hwo
      CoLdUlGOSAoEAc1g55bSXMcDEUZ+fBKXr4m2IT9L1+ZRFZUDX32KslTGYDAQD0T45P+dYc8L
      B1YPjKmKSs+JPkJzU5htDpo6elYTv92JoigkYlFKhQIOVwPGdaJyHoSqKOTjK0jFAqZ6Nzqj
      GXVhHk6dRCjdWmn7/HDs2cqhMG6lexi/gMHqoJRJUi7kMLuakIsFdBYrzQPbm/rhbnZLSoCN
      2Kp81dRrVVaQLtxAsBhRMwUEow61WEZ7qBt5bB7R46RsM+6K/q7mc88m4yzPTGC+FZAhiA/O
      83Q7CqiQymOqU0ksjGGwOkiH00x/HKFlf9fWJgCoKP0PfvADYrFKwervfve7j2wqbscEABCf
      XiF6azB39XkeOPg/TlQVfnbqKr++OIfLZuIPXxygv7PxwZvA2QLyZBCxxYWyFEMtlkEQKhu/
      PRufEl7/Yp+eCCyk8nj62+l5bhCdUfdp392nTbWQJAlyObQrK2A2Q1MT3LUiLRdy5GMraA1G
      dCYr+UQErcGIyel+qHj/rfC7NgFAdfVaLZaRrwdQE1mEBhuabg+CQYc0OlubANZh3VxAm+BO
      ncklFK69e2nrE8D8/DwjIyPIsowoinzlK1955E7Zrglgt/Ew8qmKWonlF1iN9Zfnwmh6W9ec
      E6iGbDvFw/7Ad4rd3HfwcPJVW69vWwJiqwvRaa1sBgejaA91U7plrVab3fLct1M/trxUcrvd
      WK1W8vk8Z8+eXU39WmN7uH1ITNBpkcbmUILRew6J1aix3VRbrwWNiPaADzWRRRqdQU1k0R7w
      IeyC1Bq/y2zJAjh//jyHDx/e9OubpWYB7Dy7WbaaBfBobFW+3abXd7Nb+nu3yLGd+rGlK/z6
      17/m8uXL97zucrke6YdSo0aN6lHT688vW94DeBzULICdZzfLVrMAHo3dIl/NAng8bKd+7IoJ
      4FFKQm5HzdHHxW6WbzfL9rAFYXaK3dx3sFa+ah7S3M6SkLuhv3eLHNupH7tiiaXRaB66Y3fD
      KeT7sZvl262y3S49uBuUbSN2a9/dZjfI9yh6fTe74X5gd8ixnfqxO5dYNWrUqFHjsbMrXEA1
      atSoUWPnqVkANWrUqPE55TMzAZRKJdYzVu7cZJJluSqZGlVVXfd7VVVdlVmSpKocmrst2919
      pygKpVLpvm12AkmSVqMa7qRUKq0+2ztl3Uk2eq53y6woyo703UY6cKeM1dKB7WIz97hRm52W
      YydYTz9UVaVQKKwZW9bToc2wKzaBH8Tk5CSzs7OkUilef/311d3vkydPsrS0xDe+8Q2Wlpa4
      ePEiNpuNp59+ekdDCH/+859jt9txOp0MDVUKzAQCAc6dO8fx48fJZDJcuXIFURTp6uqip6dn
      x2Q7ffo0+XweURQ5ceIEgiAQDoe5dOkS5XIZn89HIpG4p81OEI1G+fjjjwEYHh7G4/Ggqipn
      zpyhWCySSqU4ePAg4+Pjq7L29/fviGyw/nMdHx9naWmJcDjMK6+8gt1u50c/+hHHjh2jr+/+
      RYIehfV0QFEUfvWrX2GxWCiVSgwODlZNB7aDzdxjZ2fnumPBTspx+//FYhGXy8XQ0NBj6ev1
      9ENRFM6dO0e5XCaZTHLw4EEuXbq0ps1W2HJFsGpw4cIFXnrppUre+VwOh6NSsrG9vZ2VlRX8
      fj+nT5/G7/fjcrmor39wwZbtIplMUiwWeeaZZxgdHaWrq1Jxymq1YjQaMZlMFItFcrkcZrMZ
      s9mMy7WFYumPQKFQIBAIcOLECcLh8KpMFouF7u5uSqUSxWKRYrF4T5udYGZmho6ODjo7OwkG
      g3g8HgRBoK2tDY/HQzAYpL+/nz179qxaAI2ND5fSeats9Fzdbjc+n49gMIjX6+Xy5ct4vV50
      Oh0NDY+vePl6OiAIAr29vTgcDgKBAKFQqCo6sF1s5h6TyeS6Y8FOyrG8vEw6nWbv3r309fU9
      tol2I/1obm5GFEXi8TiCIODz+da02QqfCRfQ7RWpwWBY40a5c/bP5/PodDqmpqZYWFjYMdlK
      pdLq4ZA75bn773K5TKFQ2NHY9jtL2Ol0ulWXiqqqnDt3jmQySW9v77ptdgJFUdBqtWg0mjXf
      m0wmefvttxkeHsZgMKzKunfv3h2TbaPnqqoqb731Fn6/H0EQiEQi6PV6MpnMRpfaFjbSgYWF
      Bd5//31eeOGFqunAdrGZe9yozU7KcfToUZ544glSqRRvvPEGhULhscixkX6kUimuX7+OVqvd
      sM1m+UxMABqNhkwmw+zsLE1NTWSz2Xva1NfXU19fj9/vX/f9x4XT6WRxcZFSqbTqi7vbT7iy
      skJvby8DAwOEQqEdk81kMpHJZMjn80SjUUwmE/l8nmAwiKqqHD16FIvFsqaNxWJ58IW3CbPZ
      TDQaJRaLYTKZKBQKSJLEyMgIJ06cwO12r5F1J88FbPRcz549y8GDB+np6UGWZTweD4FAgOXl
      5ccqz3o6cHsi/9rXvoZOp6uaDmwXm7nHu9tUQw5BENDr9ezfvx+32/3Y9qfW04/bp5G/+MUv
      otVqKZfLa9pslc+EC6ilpYXTp0/jcrno6OhgYmICl8vFRx99RLlcJh6Pc/jwYUZGRshmswwP
      D++YH1sURSRJYnR0lKNHj5LP50kmk0QiEebm5ojFYvj9fm7cuEE4HGZoaGjHjpMLgoDFYuH8
      +fP09fVhsVgIBAIYDAYCgQDz8/MIgoDX611ts1PuKQCbzcbc3BypVGp1chQEgWQyycLCAsvL
      y5hMJpaXl5mfnwcqA/NOsNFzVRSFhYUFZmdn8Xg8+P1+3G43Ho8Hs/nxZWxdTwccDgeLi4ss
      LCyQSCQ4dOhQVXRgu9jsPd7ZphpyFAoFUqkUo6OjtLW10dKyxTodm2Qj/ZiammJsbIyGhgYG
      BwfXtNmqO6p2DqBGjRo1Pqd8JlxANWrUqFFj+6lNADVq1KjxOaU2AdSoUaPG55TaBFCjRo0a
      n1NqE0CNGjVqfE6pTQC/g+RyuYfODbIehUKBaDS6bderUaPG7uD/A1JtSmE7ywqCAAAAAElF
      TkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
