<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Custom SQL Query+ (postgres)' inline='true' name='federated.1haa0wh091p5gz1drebsj120nkni' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='codd01.research.northwestern.edu' name='postgres.01s00yj13sq8g41do7gsd1erme3r'>
            <connection authentication='username-password' class='postgres' dbname='postgres' odbc-native-protocol='' one-time-sql='' port='5432' server='codd01.research.northwestern.edu' username='cpdbstudent' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, q1.description as description, sum(trr_count) as trr_count
FROM
(SELECT date_part('year', trr.trr_datetime) as Year, doh.unit_id, dpu.description, COUNT(trr.id) as trr_count
FROM trr_trr trr
LEFT JOIN data_officerhistory doh on trr.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
WHERE doh.effective_date << trr.trr_datetime
  AND (doh.end_date IS NULL or doh.end_date >> trr.trr_datetime)
  AND date_part('year', trr.trr_datetime) >>= 2010 and date_part('year', trr.trr_datetime) <<= 2015
  AND dpu.description LIKE '%District 0%'
GROUP BY date_part('year', trr_datetime), doh.unit_id, dpu.description) q1
GROUP BY year, q1.unit_id, q1.description
ORDER BY q1.unit_id, year]]></_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, q1.description as description, sum(trr_count) as trr_count
FROM
(SELECT date_part('year', trr.trr_datetime) as Year, doh.unit_id, dpu.description, COUNT(trr.id) as trr_count
FROM trr_trr trr
LEFT JOIN data_officerhistory doh on trr.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
WHERE doh.effective_date << trr.trr_datetime
  AND (doh.end_date IS NULL or doh.end_date >> trr.trr_datetime)
  AND date_part('year', trr.trr_datetime) >>= 2010 and date_part('year', trr.trr_datetime) <<= 2015
  AND dpu.description LIKE '%District 0%'
GROUP BY date_part('year', trr_datetime), doh.unit_id, dpu.description) q1
GROUP BY year, q1.unit_id, q1.description
ORDER BY q1.unit_id, year]]></relation>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
          <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[active]' value='[data_policeunit].[active]' />
          <map key='[asian_pacific_count]' value='[Custom SQL Query3].[asian_pacific_count]' />
          <map key='[black_count]' value='[Custom SQL Query3].[black_count]' />
          <map key='[created_at]' value='[data_policeunit].[created_at]' />
          <map key='[description (Custom SQL Query2)]' value='[Custom SQL Query2].[description]' />
          <map key='[description (Custom SQL Query3)]' value='[Custom SQL Query3].[description]' />
          <map key='[description (Custom SQL Query4)]' value='[Custom SQL Query4].[description]' />
          <map key='[description (data_policeunit)]' value='[data_policeunit].[description]' />
          <map key='[description]' value='[Custom SQL Query].[description]' />
          <map key='[hispanic_count]' value='[Custom SQL Query3].[hispanic_count]' />
          <map key='[id]' value='[data_policeunit].[id]' />
          <map key='[native_count]' value='[Custom SQL Query3].[native_count]' />
          <map key='[officer_count (Custom SQL Query2)]' value='[Custom SQL Query2].[officer_count]' />
          <map key='[officer_count (Custom SQL Query3)]' value='[Custom SQL Query3].[officer_count]' />
          <map key='[officer_count]' value='[Custom SQL Query1].[officer_count]' />
          <map key='[race_entropy]' value='[Custom SQL Query3].[race_entropy]' />
          <map key='[serivce_years]' value='[Custom SQL Query4].[serivce_years]' />
          <map key='[tags]' value='[data_policeunit].[tags]' />
          <map key='[trr_count]' value='[Custom SQL Query].[trr_count]' />
          <map key='[unit_females]' value='[Custom SQL Query2].[unit_females]' />
          <map key='[unit_gender_entropy]' value='[Custom SQL Query2].[unit_gender_entropy]' />
          <map key='[unit_id (Custom SQL Query1)]' value='[Custom SQL Query1].[unit_id]' />
          <map key='[unit_id (Custom SQL Query2)]' value='[Custom SQL Query2].[unit_id]' />
          <map key='[unit_id (Custom SQL Query3)]' value='[Custom SQL Query3].[unit_id]' />
          <map key='[unit_id (Custom SQL Query4)]' value='[Custom SQL Query4].[unit_id]' />
          <map key='[unit_id]' value='[Custom SQL Query].[unit_id]' />
          <map key='[unit_males]' value='[Custom SQL Query2].[unit_males]' />
          <map key='[unit_name]' value='[data_policeunit].[unit_name]' />
          <map key='[updated_at]' value='[data_policeunit].[updated_at]' />
          <map key='[white_count]' value='[Custom SQL Query3].[white_count]' />
          <map key='[year (Custom SQL Query1)]' value='[Custom SQL Query1].[year]' />
          <map key='[year (Custom SQL Query2)]' value='[Custom SQL Query2].[year]' />
          <map key='[year (Custom SQL Query3)]' value='[Custom SQL Query3].[year]' />
          <map key='[year (Custom SQL Query4)]' value='[Custom SQL Query4].[year]' />
          <map key='[year]' value='[Custom SQL Query].[year]' />
          <map key='[years_in_unit]' value='[Custom SQL Query4].[years_in_unit]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5834F2271CEF4CB1B998922DA4AFA5C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5834F2271CEF4CB1B998922DA4AFA5C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5834F2271CEF4CB1B998922DA4AFA5C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trr_count</remote-name>
            <remote-type>131</remote-type>
            <local-name>[trr_count]</local-name>
            <parent-name>[Custom SQL Query]</parent-name>
            <remote-alias>trr_count</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5834F2271CEF4CB1B998922DA4AFA5C3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5BE54ACF9A5B4B7DA59D6B7BA891F417]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query1)]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5BE54ACF9A5B4B7DA59D6B7BA891F417]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count]</local-name>
            <parent-name>[Custom SQL Query1]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_5BE54ACF9A5B4B7DA59D6B7BA891F417]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query3)]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>white_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[white_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>white_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>black_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[black_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>black_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>asian_pacific_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[asian_pacific_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>asian_pacific_count</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>native_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[native_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>native_count</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hispanic_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hispanic_count]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>hispanic_count</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>race_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[race_entropy]</local-name>
            <parent-name>[Custom SQL Query3]</parent-name>
            <remote-alias>race_entropy</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_6F2E6FBB2AC443D290C3B176147F00FC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_D5312D49A79348C4A71135F068335281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_D5312D49A79348C4A71135F068335281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query4)]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_D5312D49A79348C4A71135F068335281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serivce_years</remote-name>
            <remote-type>131</remote-type>
            <local-name>[serivce_years]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>serivce_years</remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_D5312D49A79348C4A71135F068335281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years_in_unit</remote-name>
            <remote-type>131</remote-type>
            <local-name>[years_in_unit]</local-name>
            <parent-name>[Custom SQL Query4]</parent-name>
            <remote-alias>years_in_unit</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>30</precision>
            <scale>6</scale>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_NUMERIC&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_NUMERIC&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_D5312D49A79348C4A71135F068335281]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[unit_id (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_id</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>officer_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[officer_count (Custom SQL Query2)]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>officer_count</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_males</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_males]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_males</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_females</remote-name>
            <remote-type>20</remote-type>
            <local-name>[unit_females]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_females</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>20</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_gender_entropy</remote-name>
            <remote-type>5</remote-type>
            <local-name>[unit_gender_entropy]</local-name>
            <parent-name>[Custom SQL Query2]</parent-name>
            <remote-alias>unit_gender_entropy</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>8</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[_EFB565295AC145BFA01A09BA67A1D1DA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>4</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>unit_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[unit_name]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>unit_name</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>5</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>description</remote-name>
            <remote-type>130</remote-type>
            <local-name>[description (data_policeunit)]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>description</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tags</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tags]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>tags</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>11</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>39</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_BIT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>created_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[created_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>created_at</remote-alias>
            <ordinal>40</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>updated_at</remote-name>
            <remote-type>7</remote-type>
            <local-name>[updated_at]</local-name>
            <parent-name>[data_policeunit]</parent-name>
            <remote-alias>updated_at</remote-alias>
            <ordinal>41</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_policeunit_A173496C02C0492CB0184E215AC05D9E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='trr_info' datatype='table' name='[__tableau_internal_object_id__].[_5834F2271CEF4CB1B998922DA4AFA5C3]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='aprox_unit_sizes' datatype='table' name='[__tableau_internal_object_id__].[_5BE54ACF9A5B4B7DA59D6B7BA891F417]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='race_entropy_table' datatype='table' name='[__tableau_internal_object_id__].[_6F2E6FBB2AC443D290C3B176147F00FC]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='time_metrics' datatype='table' name='[__tableau_internal_object_id__].[_D5312D49A79348C4A71135F068335281]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='gender_entropy' datatype='table' name='[__tableau_internal_object_id__].[_EFB565295AC145BFA01A09BA67A1D1DA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='data_policeunit' datatype='table' name='[__tableau_internal_object_id__].[data_policeunit_A173496C02C0492CB0184E215AC05D9E]' role='measure' type='quantitative' />
      <column caption='Active' datatype='boolean' name='[active]' role='dimension' type='nominal' />
      <column caption='Created At' datatype='datetime' name='[created_at]' role='dimension' type='ordinal' />
      <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Tags' datatype='string' name='[tags]' role='dimension' type='nominal' />
      <column caption='Unit Name' datatype='string' name='[unit_name]' role='dimension' type='nominal' />
      <column caption='Updated At' datatype='datetime' name='[updated_at]' role='dimension' type='ordinal' />
      <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:description (data_policeunit):nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District 009&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 001&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;District 021&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 005&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;District 025&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;District 013&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;District 010&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;District 006&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;District 019&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 002&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;District 022&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;District 017&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District 007&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;District 014&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;District 015&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;District 018&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;District 020&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;District 011&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District 008&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 003&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;District 023&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;District 016&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District 012&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 004&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;District 024&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trr_info' id='_5834F2271CEF4CB1B998922DA4AFA5C3'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query' type='text'><![CDATA[SELECT q1.year::int, q1.unit_id, q1.description as description, sum(trr_count) as trr_count
FROM
(SELECT date_part('year', trr.trr_datetime) as Year, doh.unit_id, dpu.description, COUNT(trr.id) as trr_count
FROM trr_trr trr
LEFT JOIN data_officerhistory doh on trr.officer_id = doh.officer_id
LEFT JOIN data_policeunit dpu ON doh.unit_id = dpu.id
WHERE doh.effective_date << trr.trr_datetime
  AND (doh.end_date IS NULL or doh.end_date >> trr.trr_datetime)
  AND date_part('year', trr.trr_datetime) >>= 2010 and date_part('year', trr.trr_datetime) <<= 2015
  AND dpu.description LIKE '%District 0%'
GROUP BY date_part('year', trr_datetime), doh.unit_id, dpu.description) q1
GROUP BY year, q1.unit_id, q1.description
ORDER BY q1.unit_id, year]]></relation>
            </properties>
          </object>
          <object caption='aprox_unit_sizes' id='_5BE54ACF9A5B4B7DA59D6B7BA891F417'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query1' type='text'><![CDATA[SELECT 2010 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2010
  AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2011 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2011
  AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2012 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2012
  AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2013 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2013
  AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2014 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2014
  AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id
UNION
SELECT 2015 as year, dpu.id as unit_id, COUNT(doh.officer_id) as officer_count FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
WHERE date_part('year', doh.effective_date) << 2015
  AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND active = true
GROUP BY dpu.id]]></relation>
            </properties>
          </object>
          <object caption='race_entropy_table' id='_6F2E6FBB2AC443D290C3B176147F00FC'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query3' type='text'><![CDATA[SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2011
       AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2012
       AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2013
       AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2014
       AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id

UNION ALL

SELECT q1.*, w.white_count, b.black_count, ap.asian_pacific_count, na.native_count, h.hispanic_count,
       COALESCE(-1*(((w.white_count::float/q1.officer_count::float))*log(w.white_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((b.black_count::float/q1.officer_count::float))*log(b.black_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((h.hispanic_count::float/q1.officer_count::float))*log(h.hispanic_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((ap.asian_pacific_count::float/q1.officer_count::float))*log(ap.asian_pacific_count::float/q1.officer_count::float)),0) +
       COALESCE(-1*(((na.native_count::float/q1.officer_count::float))*log(na.native_count::float/q1.officer_count::float)),0)

        as race_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as white_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'White'
     GROUP BY year, dpu.id, dpu.description) w ON q1.year = w.year AND q1.unit_id = w.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as black_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Black'
     GROUP BY year, dpu.id, dpu.description) b ON q1.year = b.year AND q1.unit_id = b.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as asian_pacific_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Asian/Pacific'
     GROUP BY year, dpu.id, dpu.description) ap ON q1.year = ap.year AND q1.unit_id = ap.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as native_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Native American/Alaskan Native'
     GROUP BY year, dpu.id, dpu.description) na ON q1.year = na.year AND q1.unit_id = na.unit_id
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as hispanic_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2015
       AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.race = 'Hispanic'
     GROUP BY year, dpu.id, dpu.description) h ON q1.year = h.year AND q1.unit_id = h.unit_id]]></relation>
            </properties>
          </object>
          <object caption='time_metrics' id='_D5312D49A79348C4A71135F068335281'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query4' type='text'><![CDATA[SELECT 2010 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2010 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2010 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2010
AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2011 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2011 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2011 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2012 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2012 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2012 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2013 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2013 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2013 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2014 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2014 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2014 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id
UNION ALL
SELECT 2015 as year,
       dpu.id as unit_id,
       dpu.description,
       AVG(2015 - date_part('year', d.appointed_date)::int) as serivce_years,
       AVG(2015 - date_part('year', doh.effective_date)::int) as years_in_unit
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description, dpu.id]]></relation>
            </properties>
          </object>
          <object caption='gender_entropy' id='_EFB565295AC145BFA01A09BA67A1D1DA'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='Custom SQL Query2' type='text'><![CDATA[SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2011 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2011
AND (date_part('year', doh.end_date) >> 2011 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2012 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2012
AND (date_part('year', doh.end_date) >> 2012 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2013 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2013
AND (date_part('year', doh.end_date) >> 2013 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
           as unit_gender_entropy
FROM
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
     GROUP BY year, dpu.id, dpu.description) q1
        LEFT JOIN
    (SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
     FROM data_policeunit dpu
              LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
              LEFT JOIN data_officer d ON doh.officer_id = d.id
     WHERE date_part('year', doh.effective_date) << 2010
       AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
       AND dpu.description LIKE '%District 0%'
       AND dpu.active = true
       AND d.gender = 'M'
     GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
        LEFT JOIN (
        SELECT 2010 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
        FROM data_policeunit dpu
                 LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
                 LEFT JOIN data_officer d ON doh.officer_id = d.id
        WHERE date_part('year', doh.effective_date) << 2010
          AND (date_part('year', doh.end_date) >> 2010 OR doh.end_date IS NULL)
          AND dpu.description LIKE '%District 0%'
          AND dpu.active = true
          AND d.gender = 'F'
        GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2014 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2014
AND (date_part('year', doh.end_date) >> 2014 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id
UNION ALL
SELECT q1.*, m.unit_males, f.unit_females,
       -((m.unit_males::float/q1.officer_count::float))*log(m.unit_males::float/q1.officer_count::float)-
       ((f.unit_females::float/q1.officer_count::float))*log(f.unit_females::float/q1.officer_count::float)
        as unit_gender_entropy
FROM
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(doh.officer_id) as officer_count
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
GROUP BY year, dpu.id, dpu.description) q1
LEFT JOIN
(SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_males
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'M'
GROUP BY year, dpu.id, dpu.description) m ON q1.year = m.year AND q1.unit_id = m.unit_id
LEFT JOIN (
SELECT 2015 as year, dpu.id as unit_id, dpu.description, COUNT(d.id) as unit_females
FROM data_policeunit dpu
LEFT JOIN data_officerhistory doh on dpu.id = doh.unit_id
LEFT JOIN data_officer d ON doh.officer_id = d.id
WHERE date_part('year', doh.effective_date) << 2015
AND (date_part('year', doh.end_date) >> 2015 OR doh.end_date IS NULL)
AND dpu.description LIKE '%District 0%'
AND dpu.active = true
AND d.gender = 'F'
GROUP BY year, dpu.id, dpu.description) f ON m.year = f.year AND m.unit_id = f.unit_id]]></relation>
            </properties>
          </object>
          <object caption='data_policeunit' id='data_policeunit_A173496C02C0492CB0184E215AC05D9E'>
            <properties context=''>
              <relation connection='postgres.01s00yj13sq8g41do7gsd1erme3r' name='data_policeunit' table='[public].[data_policeunit]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query1)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query1)]' />
              </expression>
            </expression>
            <first-end-point object-id='_5834F2271CEF4CB1B998922DA4AFA5C3' />
            <second-end-point object-id='_5BE54ACF9A5B4B7DA59D6B7BA891F417' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query3)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query3)]' />
              </expression>
            </expression>
            <first-end-point object-id='_5834F2271CEF4CB1B998922DA4AFA5C3' />
            <second-end-point object-id='_6F2E6FBB2AC443D290C3B176147F00FC' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query4)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query4)]' />
              </expression>
            </expression>
            <first-end-point object-id='_5834F2271CEF4CB1B998922DA4AFA5C3' />
            <second-end-point object-id='_D5312D49A79348C4A71135F068335281' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[unit_id]' />
                <expression op='[unit_id (Custom SQL Query2)]' />
              </expression>
              <expression op='='>
                <expression op='[year]' />
                <expression op='[year (Custom SQL Query2)]' />
              </expression>
            </expression>
            <first-end-point object-id='_5834F2271CEF4CB1B998922DA4AFA5C3' />
            <second-end-point object-id='_EFB565295AC145BFA01A09BA67A1D1DA' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[unit_id]' />
              <expression op='[id]' />
            </expression>
            <first-end-point object-id='_5834F2271CEF4CB1B998922DA4AFA5C3' />
            <second-end-point object-id='data_policeunit_A173496C02C0492CB0184E215AC05D9E' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TRRs Per Officer Per Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.1haa0wh091p5gz1drebsj120nkni' />
          </datasources>
          <datasource-dependencies datasource='federated.1haa0wh091p5gz1drebsj120nkni'>
            <column caption='[trr_count]/[officer_count]' datatype='real' name='[Calculation_1700953314905964544]' role='measure' type='quantitative' user:unnamed='Sheet 1'>
              <calculation class='tableau' formula='[trr_count]/[officer_count]' />
            </column>
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1700953314905964544]' derivation='None' name='[none:Calculation_1700953314905964544:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
            <column-instance column='[officer_count]' derivation='None' name='[none:officer_count:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[trr_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' />
              <tooltip column='[federated.1haa0wh091p5gz1drebsj120nkni].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1haa0wh091p5gz1drebsj120nkni].[none:Calculation_1700953314905964544:qk]</rows>
        <cols>[federated.1haa0wh091p5gz1drebsj120nkni].[none:officer_count:qk]</cols>
      </table>
      <simple-id uuid='{7DCA7E69-A00A-4328-9F98-CA891F138B93}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TRRs Per Officer By Unit Gender Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.1haa0wh091p5gz1drebsj120nkni' />
          </datasources>
          <datasource-dependencies datasource='federated.1haa0wh091p5gz1drebsj120nkni'>
            <column caption='[trr_count]/[officer_count]' datatype='real' name='[Calculation_1700953314906443777]' role='measure' type='quantitative' user:unnamed='Sheet 2'>
              <calculation class='tableau' formula='[trr_count]/[officer_count]' />
            </column>
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1700953314906443777]' derivation='None' name='[none:Calculation_1700953314906443777:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
            <column-instance column='[unit_gender_entropy]' derivation='None' name='[none:unit_gender_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[trr_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[unit_gender_entropy]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' />
              <tooltip column='[federated.1haa0wh091p5gz1drebsj120nkni].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1haa0wh091p5gz1drebsj120nkni].[none:Calculation_1700953314906443777:qk]</rows>
        <cols>[federated.1haa0wh091p5gz1drebsj120nkni].[none:unit_gender_entropy:qk]</cols>
      </table>
      <simple-id uuid='{D01690D5-F48D-421D-9C6E-5BAD266D25D2}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TRRs Per Officer By Unit Race Entropy</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.1haa0wh091p5gz1drebsj120nkni' />
          </datasources>
          <datasource-dependencies datasource='federated.1haa0wh091p5gz1drebsj120nkni'>
            <column caption='[trr_count]/[officer_count]' datatype='real' name='[Calculation_1700953314907254786]' role='measure' type='quantitative' user:unnamed='Sheet 3'>
              <calculation class='tableau' formula='[trr_count]/[officer_count]' />
            </column>
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1700953314907254786]' derivation='None' name='[none:Calculation_1700953314907254786:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
            <column-instance column='[race_entropy]' derivation='None' name='[none:race_entropy:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[race_entropy]' role='measure' type='quantitative' />
            <column datatype='real' name='[trr_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' />
              <tooltip column='[federated.1haa0wh091p5gz1drebsj120nkni].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1haa0wh091p5gz1drebsj120nkni].[none:Calculation_1700953314907254786:qk]</rows>
        <cols>[federated.1haa0wh091p5gz1drebsj120nkni].[none:race_entropy:qk]</cols>
      </table>
      <simple-id uuid='{08EC3149-5CB3-4935-8E65-890A56EEA510}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TRRs Per Officer By Average Service Years of Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.1haa0wh091p5gz1drebsj120nkni' />
          </datasources>
          <datasource-dependencies datasource='federated.1haa0wh091p5gz1drebsj120nkni'>
            <column caption='[trr_count]/[officer_count]' datatype='real' name='[Calculation_1700953314907791364]' role='measure' type='quantitative' user:unnamed='Sheet 4'>
              <calculation class='tableau' formula='[trr_count]/[officer_count]' />
            </column>
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1700953314907791364]' derivation='None' name='[none:Calculation_1700953314907791364:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
            <column-instance column='[serivce_years]' derivation='None' name='[none:serivce_years:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[serivce_years]' role='measure' type='quantitative' />
            <column datatype='real' name='[trr_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' />
              <tooltip column='[federated.1haa0wh091p5gz1drebsj120nkni].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1haa0wh091p5gz1drebsj120nkni].[none:Calculation_1700953314907791364:qk]</rows>
        <cols>[federated.1haa0wh091p5gz1drebsj120nkni].[none:serivce_years:qk]</cols>
      </table>
      <simple-id uuid='{57140246-C404-4F81-842A-E79EB779E20B}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>TRRs Per Officer By Average Years in Specified Unit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Custom SQL Query+ (postgres)' name='federated.1haa0wh091p5gz1drebsj120nkni' />
          </datasources>
          <datasource-dependencies datasource='federated.1haa0wh091p5gz1drebsj120nkni'>
            <column caption='[trr_count]/[officer_count]' datatype='real' name='[Calculation_1700953314908450822]' role='measure' type='quantitative' user:unnamed='Sheet 5'>
              <calculation class='tableau' formula='[trr_count]/[officer_count]' />
            </column>
            <column-instance column='[year]' derivation='Attribute' name='[attr:year:qk]' pivot='key' type='quantitative' />
            <column caption='Description (Data Policeunit)' datatype='string' name='[description (data_policeunit)]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1700953314908450822]' derivation='None' name='[none:Calculation_1700953314908450822:qk]' pivot='key' type='quantitative' />
            <column-instance column='[description (data_policeunit)]' derivation='None' name='[none:description (data_policeunit):nk]' pivot='key' type='nominal' />
            <column-instance column='[years_in_unit]' derivation='None' name='[none:years_in_unit:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[officer_count]' role='measure' type='quantitative' />
            <column datatype='real' name='[trr_count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[year]' role='measure' type='quantitative' />
            <column datatype='real' name='[years_in_unit]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' />
              <tooltip column='[federated.1haa0wh091p5gz1drebsj120nkni].[attr:year:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1haa0wh091p5gz1drebsj120nkni].[none:Calculation_1700953314908450822:qk]</rows>
        <cols>[federated.1haa0wh091p5gz1drebsj120nkni].[none:years_in_unit:qk]</cols>
      </table>
      <simple-id uuid='{B1D49618-764C-46B3-B6E7-2032755B4F6F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='UnitCompositionAndTRRs'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
              <zone h='34000' id='3' name='Sheet 1' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32125' id='9' name='Sheet 2' w='41200' x='800' y='35000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='32125' id='10' name='Sheet 3' w='41200' x='42000' y='35000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='11' name='Sheet 4' w='41200' x='800' y='67125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31875' id='12' name='Sheet 5' w='41200' x='42000' y='67125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
              <zone h='65750' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='17' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='264' h='34000' id='3' is-fixed='true' name='Sheet 1' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='65750' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32125' id='9' is-fixed='true' name='Sheet 2' w='41200' x='800' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32125' id='10' is-fixed='true' name='Sheet 3' w='41200' x='42000' y='35000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='11' is-fixed='true' name='Sheet 4' w='41200' x='800' y='67125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='247' h='31875' id='12' is-fixed='true' name='Sheet 5' w='41200' x='42000' y='67125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7B0CA6BD-4EC3-4958-8BC2-357638756CEC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='UnitCompositionAndTRRs'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 5'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2DD41C0C-7387-4EB0-8749-1D5D3DACFAAC}' />
    </window>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0FB4F25-697E-45A4-90D6-5EE0922AB401}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8DA9245A-A0A0-484F-8EE6-EA8DCE38F329}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{669D8401-3C7C-4D19-A312-36AA8FF5152B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1329BE4E-6BC6-4D37-96C7-9EB203C04341}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1haa0wh091p5gz1drebsj120nkni].[none:description (data_policeunit):nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1B294B6-AA63-44AD-910E-2078A43AB4D7}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
      ABBCiAT1f+03/Qq9MwlwAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Sheet 2' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Sheet 3' width='384'>
      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
      aSVzrv4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 4' width='384'>
      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
      oigL1P8Ha2G+e+agh/wAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Sheet 5' width='384'>
      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
      QmSofwDCm7DZ+afzAAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='UnitCompositionAndTRRs' width='384'>
      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
      YZBoULHMMHKno51rSGMjCQkJiQuUUTECEEWx36frhHPtSHGuyAjhn2o03JwrdTnaZYRzQ85z
      RUY4P3RnVIwAwtlTY7CLzoaDc0HGs70H0FBxLtSlQqFgFITSzohUl0PD+aQ7o2IEEE6Ffn0K
      6mjkXJARzg05zwUZu3tZo11OqS6HjnOhLvsj47lhyiQkJCQkhpxRMQ1UQkJCQmL4kUYAEhIS
      EhcokgGQkJCQuEAZFUHgU3H8+HGKi4vRarXMnz+fPXv20NXVRUJCAhMnTuTTTz8F4LLLLkOv
      148KGbdv345MJsNkMpGbmzsqZAQoKCjA6XSSkpJCUlISmzZtAmD58uVs3rwZr9fL+PHjGTdu
      3BlSOnuUl5dTXl6O0Whk7ty5rF69GpPJRFZWFkqlksLCQgRBYPny5SO2zXZdXR1lZWW4XC6M
      RiMmk4mKigpUKhWXX345n3322aioy+3bt+P1eqmqquL73/8+77///qiry/b2drZv345cLicv
      Lw+73T7q6jIQCLBmzRq0Wi0mk4nMzEw2btyIyWRixowZlJeX09bWhk6n46KLLhoRGQEOHz5M
      Q0MDPp+Pq666im3btvWvrRRHMVu3bhUtFosYCATEQCAgrl27VhRFUVy7dq24f/9+sampSezq
      6hI3b948KmTsls3tdouiKI4aGT0ej/jZZ5+JbW1tYiAQEDdu3Ci6XC6xrq5O3Llzp7h169aQ
      7CPJunXrRIvFIno8HtHj8Yjr168XfT5f6LdAICAeOnRIrK+vH1E5RVEUN27cKHZ2dobqbNOm
      TaLZbB41dSmKouhyucR169aN2rosLS0VDx8+LNbW1op79uwZlXXpcrnETz/9VLTb7eK6devE
      I0eOiOXl5T30faRlFEVRXL9+vSiKorhv3z6xubm5323lqB4BZGVlUVxcTG1tLcuWLUOlOnF2
      r1yOw+HAYDAQERGBx+M5Q0rDI+PVV19NYmIiBQUFuN1udDrdqJDRbrfT0NCA0WikubkZlUqF
      Wq3GYDDQ2toa2sxvpKe1NTQ0UFFRwbFjx7jhhhswGAx8/vnnxMXFIZfLEQQBg8GAw+EYUTk9
      Hg8ulwu9Xh+qM71ej9lsxmAwACNflwA7d+5k7ty5iKI4KuvSZDKxZcsW5HI5M2fOxGq1AqOr
      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
      xhtvzD7r7e2lpqaGWCzGyMgIqqqyb98+uru7b4jWpb61ruuMjo6ybNky9uzZM69rbb5wLeO6
      3Dq/Hlzpm7W0tGAYBv39/TQ0NOD1Xnsa5EshkUjQ0dFBWVkZ+/fvn31uGAbr1q3jwIEDl21z
      PbgUP6TTaerr6yktLeXgwYO0tLRQV1dHXd2Va3rcyNj27dtHe3v7TRnbHS0AJiYmWLhwIcuX
      L2dgYGD2+YMPPojTWcgF39nZSTKZZPfu3bMuUvNNf8uWLbPGmJKSErZv3042m73prmCiKOLx
      eKisrJw9qZWUlFBTU8PRo0epr6+/ZJtbSb+5uZlcLkcmk7mpIeqapuF2u3E4HFgs5/PYNDU1
      YTabGR0dpaioiN27d3PPPffcML1LfWtRFFm7di2dnZ2UlJTM61qbL1zLuC63zueKq30zq9VK
      KpUiHA5z+PBhcrncDY1teHiYJUuWUF5efsHhw263s337doqKii7b5npwKX7weDz09vayZ88e
      Fi1ahKZpHDt27Ibm8UpjO3jwIOvWrUMQhJsytjtaAAiCgKZpZDIZTKZLJx+TZZmtW7eyefNm
      Dh8+fMvpT0xM8OSTT1JcXEwsFrup9M9d695OP5/P84Mf/ID169dTUVFxyTa3kn5fXx9Hjhzh
      6aefvqneEKIozuaQefvNZmpqitdee42nnnqKdDrN4OAgJ06coPP/Z++8w6Oq8v//mj7pmfRJ
      J6RBEnovRkQpKmJdUXfF/f5UWFBXZV3d1d3VdV0VFV0LIooNXWRtqCgqTXoPJQkJhPReJpkk
      k0zJzJzfHzEjIYUEAgS5r+fheZjJvZ97zrnnPZ9TP+fYsbPqgXX1rn/44Qe8vb0ZNWrUOa1r
      54qe5Ksn9bwnnO6dpaam4uHhwW9/+1smT57M9u3bzzxjgFqtxmKxIIRo9zw/Pz9SU1Oprq5G
      qVR2es2Z0JXWhg0bxvDhwzl27BhXXXUVU6dOpbKykqampjN+Vmd5s9lsZGZmkp2dTW5uLlar
      9azzpnjyySefPONUnmM8PDzYtGkTeXl5jB8/nrS0NEJCQti+fTs5OTk4nU4GDRrE+vXrKS8v
      Jy4uDl/fvou6ebrne3t7YzKZqKiooKKigqSkpD7doWo0GsnOzqauro4hQ4awZ88e6urqqKmp
      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
      VqvV9WN9cvwhu92OEIITJ06009kdd9yBw+FAJpN1GtTRYrGgUqnaxUtq68FrNBr+9re/8cQT
      T6DRaKioqODll1/m0UcfPasAdOcayQFcBFitVoqLiwkNDW03N9AfqKqqQqfTuQJhnThxgoED
      B16Q4HESEheSsrIyQkNDgdbVczabjcDAwAucqu6RHICEhITEJYo0ByAhISFxiSI5AAkJCYlL
      FMkBSEhISFyiSA5AQkJC4hJFcgASEhISlyiSA5CQkJC4RJEcgISEhMQliuQAJCQkJC5RJAcg
      ISEhcYkiOQAJCQmJSxTJAUhISEhcokgOQEJCQuIS5ZJyAHa7naKiIpqamgBoaWmhqKgIs9l8
      gVMmIdF/kXTz66Vj0OufeemllygqKkII4Qrte+WVV6LRaPjuu++QyWT4+flx0003MXjwYADe
      eOMNTpw4gUwmIzIykjvuuKNH4VAfeughAFQqFcnJydx6662uePa9wW6388Ybb5CVlQXANddc
      w6xZs4DWSrtw4UIGDRrElVdeycCBA7n//vsZMmQIM2bMYP/+/QwdOpTk5OReP7e7PMlkMvR6
      PXPnziUoKKhH91ZXV7No0SL+/Oc/91l6+pLKykqWLl2KwWBAq9Vy2223MXLkyLOymZeXx4YN
      G7j33nt7fW96ejrZ2dmuMwicTieLFy/m4Ycfbne28vlA0s3Z8WvVjclk4o033uDPf/6zq16s
      XLmSiRMnEhMTc86eu27dOtzd3UlNTe38AnEa3nrrLZGWlub6vGLFCrF7927hdDpFQUGB+N3v
      fieMRqMQQogFCxaIlpYWYbfbxe7du8Uf/vCH05kXQggxb948IYQQFotFvPfee+KNN97o0X2n
      8s4774jly5cLp9MpLBaLuO+++8ShQ4eEEEIcP35cvPjii65r09LSxLJly1yfjUajMJvNZ/Tc
      zmjLe0tLi9i5c6f405/+1ON7P/nkE/Haa6+JF154oc/S05csWrRIZGdnCyGEqKysFDt27Dhr
      mzabTRgMhjO61263izvvvFPU1NQIIYT4/vvvxZtvvnnWaTobJN2cGb9m3TzzzDNi69atQggh
      SktLxYIFC4TT6TynzzSZTMJkMnX59y57AKdDJpMRFRXFyJEjKSgoYOjQoa6/KRQKxo4dy1tv
      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
    </thumbnail>
  </thumbnails>
</workbook>
